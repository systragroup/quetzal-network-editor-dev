import{bh as A,bi as Fe,bj as ze,bk as we,bl as U,bm as Le,bn as je,bo as H,bp as Se,bq as Ge,br as qe,bs as Be,bt as We,bu as Ve,bv as Ke,bw as Ee,bx as Je,by as Xe,bz as Ye,bA as be,bB as Q,bC as Ze,bD as ve,bE as Qe,bF as et,bG as tt,bH as st,bI as nt,bJ as it,bK as rt,bL as ot,bM as at,bN as ct,bO as dt,bP as ut,bQ as lt,bR as pt,bS as mt,bT as ht,bU as yt,bV as gt,bW as ft,bX as wt,bY as St,bZ as Et,b_ as bt,b$ as vt,c0 as At,c1 as xt,c2 as Rt,c3 as f,c4 as It,c5 as Ae,c6 as T,c7 as Pt,c8 as Ct,c9 as kt,ca as xe,cb as Re,cc as Ie}from"./index-D0Ou50ha.js";const m=e=>{if(e==null)return{};if(Array.isArray(e))return e.filter(t=>t!=null).map(m);if(typeof e=="object"){const t={};for(const s of Object.keys(e))e[s]!=null&&(t[s]=m(e[s]));return t}return e};const Dt=e=>t=>async s=>{if(!A.isInstance(s.request))return t(s);const{request:n}=s,{handlerProtocol:i=""}=e.requestHandler.metadata||{};if(i.indexOf("h2")>=0&&!n.headers[":authority"])delete n.headers.host,n.headers[":authority"]=n.hostname+(n.port?":"+n.port:"");else if(!n.headers.host){let o=n.hostname;n.port!=null&&(o+=`:${n.port}`),n.headers.host=o}return t(s)},_t={name:"hostHeaderMiddleware",step:"build",priority:"low",tags:["HOST"],override:!0},Ot=e=>({applyToStack:t=>{t.add(Dt(e),_t)}}),Tt=()=>(e,t)=>async s=>{var n,i;try{const o=await e(s),{clientName:r,commandName:c,logger:a,dynamoDbDocumentClientOptions:d={}}=t,{overrideInputFilterSensitiveLog:u,overrideOutputFilterSensitiveLog:l}=d,h=u??t.inputFilterSensitiveLog,p=l??t.outputFilterSensitiveLog,{$metadata:b,...k}=o.output;return(n=a==null?void 0:a.info)==null||n.call(a,{clientName:r,commandName:c,input:h(s.input),output:p(k),metadata:b}),o}catch(o){const{clientName:r,commandName:c,logger:a,dynamoDbDocumentClientOptions:d={}}=t,{overrideInputFilterSensitiveLog:u}=d,l=u??t.inputFilterSensitiveLog;throw(i=a==null?void 0:a.error)==null||i.call(a,{clientName:r,commandName:c,input:l(s.input),error:o,metadata:o.$metadata}),o}},Nt={name:"loggerMiddleware",tags:["LOGGER"],step:"initialize",override:!0},Mt=e=>({applyToStack:t=>{t.add(Tt(),Nt)}});var ee={};const te="X-Amzn-Trace-Id",$t="AWS_LAMBDA_FUNCTION_NAME",Ht="_X_AMZN_TRACE_ID",Ut=e=>t=>async s=>{const{request:n}=s;if(!A.isInstance(n)||e.runtime!=="node"||n.headers.hasOwnProperty(te))return t(s);const i=ee[$t],o=ee[Ht],r=c=>typeof c=="string"&&c.length>0;return r(i)&&r(o)&&(n.headers[te]=o),t({...s,request:n})},Ft={step:"build",tags:["RECURSION_DETECTION"],name:"recursionDetectionMiddleware",override:!0,priority:"low"},zt=e=>({applyToStack:t=>{t.add(Ut(e),Ft)}});function Lt(e){return{...e,customUserAgent:typeof e.customUserAgent=="string"?[[e.customUserAgent]]:e.customUserAgent}}const Pe=(e,t=!1)=>{if(t){for(const s of e.split("."))if(!Pe(s))return!1;return!0}return!(!Fe(e)||e.length<3||e.length>63||e!==e.toLowerCase()||ze(e))},se=":",jt="/",Gt=e=>{const t=e.split(se);if(t.length<6)return null;const[s,n,i,o,r,...c]=t;if(s!=="arn"||n===""||i===""||c.join(se)==="")return null;const a=c.map(d=>d.split(jt)).flat();return{partition:n,service:i,region:o,accountId:r,resourceId:a}},qt=[{id:"aws",outputs:{dnsSuffix:"amazonaws.com",dualStackDnsSuffix:"api.aws",implicitGlobalRegion:"us-east-1",name:"aws",supportsDualStack:!0,supportsFIPS:!0},regionRegex:"^(us|eu|ap|sa|ca|me|af|il)\\-\\w+\\-\\d+$",regions:{"af-south-1":{description:"Africa (Cape Town)"},"ap-east-1":{description:"Asia Pacific (Hong Kong)"},"ap-northeast-1":{description:"Asia Pacific (Tokyo)"},"ap-northeast-2":{description:"Asia Pacific (Seoul)"},"ap-northeast-3":{description:"Asia Pacific (Osaka)"},"ap-south-1":{description:"Asia Pacific (Mumbai)"},"ap-south-2":{description:"Asia Pacific (Hyderabad)"},"ap-southeast-1":{description:"Asia Pacific (Singapore)"},"ap-southeast-2":{description:"Asia Pacific (Sydney)"},"ap-southeast-3":{description:"Asia Pacific (Jakarta)"},"ap-southeast-4":{description:"Asia Pacific (Melbourne)"},"ap-southeast-5":{description:"Asia Pacific (Malaysia)"},"aws-global":{description:"AWS Standard global region"},"ca-central-1":{description:"Canada (Central)"},"ca-west-1":{description:"Canada West (Calgary)"},"eu-central-1":{description:"Europe (Frankfurt)"},"eu-central-2":{description:"Europe (Zurich)"},"eu-north-1":{description:"Europe (Stockholm)"},"eu-south-1":{description:"Europe (Milan)"},"eu-south-2":{description:"Europe (Spain)"},"eu-west-1":{description:"Europe (Ireland)"},"eu-west-2":{description:"Europe (London)"},"eu-west-3":{description:"Europe (Paris)"},"il-central-1":{description:"Israel (Tel Aviv)"},"me-central-1":{description:"Middle East (UAE)"},"me-south-1":{description:"Middle East (Bahrain)"},"sa-east-1":{description:"South America (Sao Paulo)"},"us-east-1":{description:"US East (N. Virginia)"},"us-east-2":{description:"US East (Ohio)"},"us-west-1":{description:"US West (N. California)"},"us-west-2":{description:"US West (Oregon)"}}},{id:"aws-cn",outputs:{dnsSuffix:"amazonaws.com.cn",dualStackDnsSuffix:"api.amazonwebservices.com.cn",implicitGlobalRegion:"cn-northwest-1",name:"aws-cn",supportsDualStack:!0,supportsFIPS:!0},regionRegex:"^cn\\-\\w+\\-\\d+$",regions:{"aws-cn-global":{description:"AWS China global region"},"cn-north-1":{description:"China (Beijing)"},"cn-northwest-1":{description:"China (Ningxia)"}}},{id:"aws-us-gov",outputs:{dnsSuffix:"amazonaws.com",dualStackDnsSuffix:"api.aws",implicitGlobalRegion:"us-gov-west-1",name:"aws-us-gov",supportsDualStack:!0,supportsFIPS:!0},regionRegex:"^us\\-gov\\-\\w+\\-\\d+$",regions:{"aws-us-gov-global":{description:"AWS GovCloud (US) global region"},"us-gov-east-1":{description:"AWS GovCloud (US-East)"},"us-gov-west-1":{description:"AWS GovCloud (US-West)"}}},{id:"aws-iso",outputs:{dnsSuffix:"c2s.ic.gov",dualStackDnsSuffix:"c2s.ic.gov",implicitGlobalRegion:"us-iso-east-1",name:"aws-iso",supportsDualStack:!1,supportsFIPS:!0},regionRegex:"^us\\-iso\\-\\w+\\-\\d+$",regions:{"aws-iso-global":{description:"AWS ISO (US) global region"},"us-iso-east-1":{description:"US ISO East"},"us-iso-west-1":{description:"US ISO WEST"}}},{id:"aws-iso-b",outputs:{dnsSuffix:"sc2s.sgov.gov",dualStackDnsSuffix:"sc2s.sgov.gov",implicitGlobalRegion:"us-isob-east-1",name:"aws-iso-b",supportsDualStack:!1,supportsFIPS:!0},regionRegex:"^us\\-isob\\-\\w+\\-\\d+$",regions:{"aws-iso-b-global":{description:"AWS ISOB (US) global region"},"us-isob-east-1":{description:"US ISOB East (Ohio)"}}},{id:"aws-iso-e",outputs:{dnsSuffix:"cloud.adc-e.uk",dualStackDnsSuffix:"cloud.adc-e.uk",implicitGlobalRegion:"eu-isoe-west-1",name:"aws-iso-e",supportsDualStack:!1,supportsFIPS:!0},regionRegex:"^eu\\-isoe\\-\\w+\\-\\d+$",regions:{"eu-isoe-west-1":{description:"EU ISOE West"}}},{id:"aws-iso-f",outputs:{dnsSuffix:"csp.hci.ic.gov",dualStackDnsSuffix:"csp.hci.ic.gov",implicitGlobalRegion:"us-isof-south-1",name:"aws-iso-f",supportsDualStack:!1,supportsFIPS:!0},regionRegex:"^us\\-isof\\-\\w+\\-\\d+$",regions:{}}],Bt="1.1",Wt={partitions:qt,version:Bt};let Vt=Wt;const Kt=e=>{const{partitions:t}=Vt;for(const n of t){const{regions:i,outputs:o}=n;for(const[r,c]of Object.entries(i))if(r===e)return{...o,...c}}for(const n of t){const{regionRegex:i,outputs:o}=n;if(new RegExp(i).test(e))return{...o}}const s=t.find(n=>n.id==="aws");if(!s)throw new Error("Provided region was not found in the partition array or regex, and default partition with id 'aws' doesn't exist.");return{...s.outputs}},Ce={isVirtualHostableS3Bucket:Pe,parseArn:Gt,partition:Kt};we.aws=Ce;const ne="user-agent",N="x-amz-user-agent",ie=" ",M="/",Jt=/[^\!\$\%\&\'\*\+\-\.\^\_\`\|\~\d\w]/g,Xt=/[^\!\$\%\&\'\*\+\-\.\^\_\`\|\~\d\w\#]/g,re="-",Yt=e=>(t,s)=>async n=>{var l,h;const{request:i}=n;if(!A.isInstance(i))return t(n);const{headers:o}=i,r=((l=s==null?void 0:s.userAgent)==null?void 0:l.map($))||[],c=(await e.defaultUserAgentProvider()).map($),a=((h=e==null?void 0:e.customUserAgent)==null?void 0:h.map($))||[],d=[].concat([...c,...r,...a]).join(ie),u=[...c.filter(p=>p.startsWith("aws-sdk-")),...a].join(ie);return e.runtime!=="browser"?(u&&(o[N]=o[N]?`${o[ne]} ${u}`:u),o[ne]=d):o[N]=d,t({...n,request:i})},$=e=>{var r;const t=e[0].split(M).map(c=>c.replace(Jt,re)).join(M),s=(r=e[1])==null?void 0:r.replace(Xt,re),n=t.indexOf(M),i=t.substring(0,n);let o=t.substring(n+1);return i==="api"&&(o=o.toLowerCase()),[i,o,s].filter(c=>c&&c.length>0).reduce((c,a,d)=>{switch(d){case 0:return a;case 1:return`${c}/${a}`;default:return`${c}#${a}`}},"")},Zt={name:"getUserAgentMiddleware",step:"build",priority:"low",tags:["SET_USER_AGENT","USER_AGENT"],override:!0},Qt=e=>({applyToStack:t=>{t.add(Yt(e),Zt)}});function es(e){const t=new Map;for(const s of e)t.set(s.schemeId,s);return t}const ts=(e,t)=>(s,n)=>async i=>{var d;const o=e.httpAuthSchemeProvider(await t.httpAuthSchemeParametersProvider(e,n,i.input)),r=es(e.httpAuthSchemes),c=U(n),a=[];for(const u of o){const l=r.get(u.schemeId);if(!l){a.push(`HttpAuthScheme \`${u.schemeId}\` was not enabled for this service.`);continue}const h=l.identityProvider(await t.identityProviderConfigProvider(e));if(!h){a.push(`HttpAuthScheme \`${u.schemeId}\` did not have an IdentityProvider configured.`);continue}const{identityProperties:p={},signingProperties:b={}}=((d=u.propertiesExtractor)==null?void 0:d.call(u,e,n))||{};u.identityProperties=Object.assign(u.identityProperties||{},p),u.signingProperties=Object.assign(u.signingProperties||{},b),c.selectedHttpAuthScheme={httpAuthOption:u,identity:await h(u.identityProperties),signer:l.signer};break}if(!c.selectedHttpAuthScheme)throw new Error(a.join(`
`));return s(i)},ss={step:"serialize",tags:["HTTP_AUTH_SCHEME"],name:"httpAuthSchemeMiddleware",override:!0,relation:"before",toMiddleware:Le.name},ns=(e,{httpAuthSchemeParametersProvider:t,identityProviderConfigProvider:s})=>({applyToStack:n=>{n.addRelativeTo(ts(e,{httpAuthSchemeParametersProvider:t,identityProviderConfigProvider:s}),ss)}});je.name;const is=e=>t=>{throw t},rs=(e,t)=>{},os=e=>(t,s)=>async n=>{if(!A.isInstance(n.request))return t(n);const o=U(s).selectedHttpAuthScheme;if(!o)throw new Error("No HttpAuthScheme was selected: unable to sign request");const{httpAuthOption:{signingProperties:r={}},identity:c,signer:a}=o,d=await t({...n,request:await a.sign(n.request,c,r)}).catch((a.errorHandler||is)(r));return(a.successHandler||rs)(d.response,r),d},as=e=>e instanceof Error?e:e instanceof Object?Object.assign(new Error,e):typeof e=="string"?new Error(e):new Error(`AWS SDK error wrapper for ${e}`),cs=e=>{const{retryStrategy:t}=e,s=H(e.maxAttempts??Se);return{...e,maxAttempts:s,retryStrategy:async()=>t||(await H(e.retryMode)()===Ge.ADAPTIVE?new qe(s):new Be(s))}},ds=e=>(e==null?void 0:e.body)instanceof ReadableStream,us=e=>(t,s)=>async n=>{var r;let i=await e.retryStrategy();const o=await e.maxAttempts();if(ls(i)){i=i;let c=await i.acquireInitialRetryToken(s.partition_id),a=new Error,d=0,u=0;const{request:l}=n,h=A.isInstance(l);for(h&&(l.headers[We]=Ve());;)try{h&&(l.headers[Ke]=`attempt=${d+1}; max=${o}`);const{response:p,output:b}=await t(n);return i.recordSuccess(c),b.$metadata.attempts=d+1,b.$metadata.totalRetryDelay=u,{response:p,output:b}}catch(p){const b=ps(p);if(a=as(p),h&&ds(l))throw(r=s.logger instanceof Ee?console:s.logger)==null||r.warn("An error was encountered in a non-retryable streaming request."),a;try{c=await i.refreshRetryTokenForRetry(c,b)}catch{throw a.$metadata||(a.$metadata={}),a.$metadata.attempts=d+1,a.$metadata.totalRetryDelay=u,a}d=c.getRetryCount();const k=c.getRetryDelay();u+=k,await new Promise(Z=>setTimeout(Z,k))}}else return i=i,i!=null&&i.mode&&(s.userAgent=[...s.userAgent||[],["cfg/retry-mode",i.mode]]),i.retry(t,n)},ls=e=>typeof e.acquireInitialRetryToken<"u"&&typeof e.refreshRetryTokenForRetry<"u"&&typeof e.recordSuccess<"u",ps=e=>{const t={error:e,errorType:ms(e)},s=ys(e.$response);return s&&(t.retryAfterHint=s),t},ms=e=>Je(e)?"THROTTLING":Xe(e)?"TRANSIENT":Ye(e)?"SERVER_ERROR":"CLIENT_ERROR",ke={name:"retryMiddleware",tags:["RETRY"],step:"finalizeRequest",priority:"high",override:!0},hs=e=>({applyToStack:t=>{t.add(us(e),ke)}}),ys=e=>{if(!be.isInstance(e))return;const t=Object.keys(e.headers).find(o=>o.toLowerCase()==="retry-after");if(!t)return;const s=e.headers[t],n=Number(s);return Number.isNaN(n)?new Date(s):new Date(n*1e3)},gs={step:"finalizeRequest",tags:["HTTP_SIGNING"],name:"httpSigningMiddleware",aliases:["apiKeyMiddleware","tokenMiddleware","awsAuthMiddleware"],override:!0,relation:"after",toMiddleware:ke.name},fs=e=>({applyToStack:t=>{t.addRelativeTo(os(),gs)}});class ws{constructor(t){this.authSchemes=new Map;for(const[s,n]of Object.entries(t))n!==void 0&&this.authSchemes.set(s,n)}getIdentityProvider(t){return this.authSchemes.get(t)}}class Ss{async sign(t,s,n){return t}}const Es=e=>t=>De(t)&&t.expiration.getTime()-Date.now()<e,bs=3e5,vs=Es(bs),De=e=>e.expiration!==void 0,As=(e,t,s)=>{if(e===void 0)return;const n=typeof e!="function"?async()=>Promise.resolve(e):e;let i,o,r,c=!1;const a=async d=>{o||(o=n(d));try{i=await o,r=!0,c=!1}finally{o=void 0}return i};return t===void 0?async d=>((!r||d!=null&&d.forceRefresh)&&(i=await a(d)),i):async d=>((!r||d!=null&&d.forceRefresh)&&(i=await a(d)),c?i:s(i)?(t(i)&&await a(d),i):(c=!0,i))},D=e=>{if(typeof e=="function")return e;const t=Promise.resolve(e);return()=>t},oe=e=>{var t,s;return be.isInstance(e)?((t=e.headers)==null?void 0:t.date)??((s=e.headers)==null?void 0:s.Date):void 0},_e=e=>new Date(Date.now()+e),xs=(e,t)=>Math.abs(_e(t).getTime()-e)>=3e5,ae=(e,t)=>{const s=Date.parse(e);return xs(s,t)?s-Date.now():t},P=(e,t)=>{if(!t)throw new Error(`Property \`${e}\` is not resolved for AWS SDK SigV4Auth`);return t},Rs=async e=>{var d,u,l;const t=P("context",e.context),s=P("config",e.config),n=(l=(u=(d=t.endpointV2)==null?void 0:d.properties)==null?void 0:u.authSchemes)==null?void 0:l[0],o=await P("signer",s.signer)(n),r=e==null?void 0:e.signingRegion,c=e==null?void 0:e.signingRegionSet,a=e==null?void 0:e.signingName;return{config:s,signer:o,signingRegion:r,signingRegionSet:c,signingName:a}};class Is{async sign(t,s,n){var l;if(!A.isInstance(t))throw new Error("The request is not an instance of `HttpRequest` and cannot be signed");const i=await Rs(n),{config:o,signer:r}=i;let{signingRegion:c,signingName:a}=i;const d=n.context;if(((l=d==null?void 0:d.authSchemes)==null?void 0:l.length)??!1){const[h,p]=d.authSchemes;(h==null?void 0:h.name)==="sigv4a"&&(p==null?void 0:p.name)==="sigv4"&&(c=(p==null?void 0:p.signingRegion)??c,a=(p==null?void 0:p.signingName)??a)}return await r.sign(t,{signingDate:_e(o.systemClockOffset),signingRegion:c,signingService:a})}errorHandler(t){return s=>{const n=s.ServerTime??oe(s.$response);if(n){const i=P("config",t.config),o=i.systemClockOffset;i.systemClockOffset=ae(n,i.systemClockOffset),i.systemClockOffset!==o&&s.$metadata&&(s.$metadata.clockSkewCorrected=!0)}throw s}}successHandler(t,s){const n=oe(t);if(n){const i=P("config",s.config);i.systemClockOffset=ae(n,i.systemClockOffset)}}}const Ps=e=>{let t;e.credentials&&(t=As(e.credentials,vs,De)),t||(e.credentialDefaultProvider?t=D(e.credentialDefaultProvider(Object.assign({},e,{parentClientConfig:e}))):t=async()=>{throw new Error("`credentials` is missing")});const{signingEscapePath:s=!0,systemClockOffset:n=e.systemClockOffset||0,sha256:i}=e;let o;return e.signer?o=D(e.signer):e.regionInfoProvider?o=()=>D(e.region)().then(async r=>[await e.regionInfoProvider(r,{useFipsEndpoint:await e.useFipsEndpoint(),useDualstackEndpoint:await e.useDualstackEndpoint()})||{},r]).then(([r,c])=>{const{signingRegion:a,signingService:d}=r;e.signingRegion=e.signingRegion||a||c,e.signingName=e.signingName||d||e.serviceId;const u={...e,credentials:t,region:e.signingRegion,service:e.signingName,sha256:i,uriEscapePath:s},l=e.signerConstructor||Q;return new l(u)}):o=async r=>{r=Object.assign({},{name:"sigv4",signingName:e.signingName||e.defaultSigningName,signingRegion:await D(e.region)(),properties:{}},r);const c=r.signingRegion,a=r.signingName;e.signingRegion=e.signingRegion||c,e.signingName=e.signingName||a||e.serviceId;const d={...e,credentials:t,region:e.signingRegion,service:e.signingName,sha256:i,uriEscapePath:s},u=e.signerConstructor||Q;return new u(d)},{...e,systemClockOffset:n,signingEscapePath:s,credentials:t,signer:o}},Cs=(e,t)=>Ze(e,t).then(s=>t.utf8Encoder(s)),F=(e,t)=>Cs(e,t).then(s=>{if(s.length)try{return JSON.parse(s)}catch(n){throw(n==null?void 0:n.name)==="SyntaxError"&&Object.defineProperty(n,"$responseBodyText",{value:s}),n}return{}}),ks=async(e,t)=>{const s=await F(e,t);return s.message=s.message??s.Message,s},Ds=(e,t)=>{const s=(o,r)=>Object.keys(o).find(c=>c.toLowerCase()===r.toLowerCase()),n=o=>{let r=o;return typeof r=="number"&&(r=r.toString()),r.indexOf(",")>=0&&(r=r.split(",")[0]),r.indexOf(":")>=0&&(r=r.split(":")[0]),r.indexOf("#")>=0&&(r=r.split("#")[1]),r},i=s(e.headers,"x-amzn-errortype");if(i!==void 0)return n(e.headers[i]);if(t.code!==void 0)return n(t.code);if(t.__type!==void 0)return n(t.__type)},_s=async(e,t,s)=>({operation:U(t).operation,region:await H(e.region)()||(()=>{throw new Error("expected `region` to be configured for `aws.auth#sigv4`")})()});function Os(e){return{schemeId:"aws.auth#sigv4",signingProperties:{name:"cognito-identity",region:e.region},propertiesExtractor:(t,s)=>({signingProperties:{config:t,context:s}})}}function _(e){return{schemeId:"smithy.api#noAuth"}}const Ts=e=>{const t=[];switch(e.operation){case"GetCredentialsForIdentity":{t.push(_());break}case"GetId":{t.push(_());break}case"GetOpenIdToken":{t.push(_());break}case"UnlinkIdentity":{t.push(_());break}default:t.push(Os(e))}return t},Ns=e=>({...Ps(e)}),Ms=e=>({...e,useDualstackEndpoint:e.useDualstackEndpoint??!1,useFipsEndpoint:e.useFipsEndpoint??!1,defaultSigningName:"cognito-identity"}),Oe={UseFIPS:{type:"builtInParams",name:"useFipsEndpoint"},Endpoint:{type:"builtInParams",name:"endpoint"},Region:{type:"builtInParams",name:"region"},UseDualStack:{type:"builtInParams",name:"useDualstackEndpoint"}},$s="@aws-sdk/client-cognito-identity",Hs="AWS SDK for JavaScript Cognito Identity Client for Node.js, Browser and React Native",Us="3.637.0",Fs={build:"concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'","build:cjs":"node ../../scripts/compilation/inline client-cognito-identity","build:es":"tsc -p tsconfig.es.json","build:include:deps":"lerna run --scope $npm_package_name --include-dependencies build","build:types":"tsc -p tsconfig.types.json","build:types:downlevel":"downlevel-dts dist-types dist-types/ts3.4",clean:"rimraf ./dist-* && rimraf *.tsbuildinfo","extract:docs":"api-extractor run --local","generate:client":"node ../../scripts/generate-clients/single-service --solo cognito-identity","test:e2e":"ts-mocha test/**/*.ispec.ts && karma start karma.conf.js"},zs="./dist-cjs/index.js",Ls="./dist-types/index.d.ts",js="./dist-es/index.js",Gs=!1,qs={"@aws-crypto/sha256-browser":"5.2.0","@aws-crypto/sha256-js":"5.2.0","@aws-sdk/client-sso-oidc":"3.637.0","@aws-sdk/client-sts":"3.637.0","@aws-sdk/core":"3.635.0","@aws-sdk/credential-provider-node":"3.637.0","@aws-sdk/middleware-host-header":"3.620.0","@aws-sdk/middleware-logger":"3.609.0","@aws-sdk/middleware-recursion-detection":"3.620.0","@aws-sdk/middleware-user-agent":"3.637.0","@aws-sdk/region-config-resolver":"3.614.0","@aws-sdk/types":"3.609.0","@aws-sdk/util-endpoints":"3.637.0","@aws-sdk/util-user-agent-browser":"3.609.0","@aws-sdk/util-user-agent-node":"3.614.0","@smithy/config-resolver":"^3.0.5","@smithy/core":"^2.4.0","@smithy/fetch-http-handler":"^3.2.4","@smithy/hash-node":"^3.0.3","@smithy/invalid-dependency":"^3.0.3","@smithy/middleware-content-length":"^3.0.5","@smithy/middleware-endpoint":"^3.1.0","@smithy/middleware-retry":"^3.0.15","@smithy/middleware-serde":"^3.0.3","@smithy/middleware-stack":"^3.0.3","@smithy/node-config-provider":"^3.1.4","@smithy/node-http-handler":"^3.1.4","@smithy/protocol-http":"^4.1.0","@smithy/smithy-client":"^3.2.0","@smithy/types":"^3.3.0","@smithy/url-parser":"^3.0.3","@smithy/util-base64":"^3.0.0","@smithy/util-body-length-browser":"^3.0.0","@smithy/util-body-length-node":"^3.0.0","@smithy/util-defaults-mode-browser":"^3.0.15","@smithy/util-defaults-mode-node":"^3.0.15","@smithy/util-endpoints":"^2.0.5","@smithy/util-middleware":"^3.0.3","@smithy/util-retry":"^3.0.3","@smithy/util-utf8":"^3.0.0",tslib:"^2.6.2"},Bs={"@aws-sdk/client-iam":"3.637.0","@tsconfig/node16":"16.1.3","@types/chai":"^4.2.11","@types/mocha":"^8.0.4","@types/node":"^16.18.96",concurrently:"7.0.0","downlevel-dts":"0.10.1",rimraf:"3.0.2",typescript:"~4.9.5"},Ws={node:">=16.0.0"},Vs={"<4.0":{"dist-types/*":["dist-types/ts3.4/*"]}},Ks=["dist-*/**"],Js={name:"AWS SDK for JavaScript Team",url:"https://aws.amazon.com/javascript/"},Xs="Apache-2.0",Ys={"./dist-es/runtimeConfig":"./dist-es/runtimeConfig.browser"},Zs="https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-cognito-identity",Qs={type:"git",url:"https://github.com/aws/aws-sdk-js-v3.git",directory:"clients/client-cognito-identity"},en={name:$s,description:Hs,version:Us,scripts:Fs,main:zs,types:Ls,module:js,sideEffects:Gs,dependencies:qs,devDependencies:Bs,engines:Ws,typesVersions:Vs,files:Ks,author:Js,license:Xs,browser:Ys,"react-native":{"./dist-es/runtimeConfig":"./dist-es/runtimeConfig.native"},homepage:Zs,repository:Qs},tn=({serviceId:e,clientVersion:t})=>async()=>{var i,o,r,c,a;const s=typeof window<"u"&&((i=window==null?void 0:window.navigator)!=null&&i.userAgent)?ve.parse(window.navigator.userAgent):void 0,n=[["aws-sdk-js",t],["ua","2.0"],[`os/${((o=s==null?void 0:s.os)==null?void 0:o.name)||"other"}`,(r=s==null?void 0:s.os)==null?void 0:r.version],["lang/js"],["md/browser",`${((c=s==null?void 0:s.browser)==null?void 0:c.name)??"unknown"}_${((a=s==null?void 0:s.browser)==null?void 0:a.version)??"unknown"}`]];return e&&n.push([`api/${e}`,t]),n},Te="required",S="fn",E="argv",R="ref",ce=!0,de="isSet",C="booleanEquals",x="error",I="endpoint",v="tree",z="PartitionResult",ue={[Te]:!1,type:"String"},le={[Te]:!0,default:!1,type:"Boolean"},pe={[R]:"Endpoint"},Ne={[S]:C,[E]:[{[R]:"UseFIPS"},!0]},Me={[S]:C,[E]:[{[R]:"UseDualStack"},!0]},w={},me={[S]:"getAttr",[E]:[{[R]:z},"supportsFIPS"]},he={[S]:C,[E]:[!0,{[S]:"getAttr",[E]:[{[R]:z},"supportsDualStack"]}]},ye=[Ne],ge=[Me],fe=[{[R]:"Region"}],sn={version:"1.0",parameters:{Region:ue,UseDualStack:le,UseFIPS:le,Endpoint:ue},rules:[{conditions:[{[S]:de,[E]:[pe]}],rules:[{conditions:ye,error:"Invalid Configuration: FIPS and custom endpoint are not supported",type:x},{conditions:ge,error:"Invalid Configuration: Dualstack and custom endpoint are not supported",type:x},{endpoint:{url:pe,properties:w,headers:w},type:I}],type:v},{conditions:[{[S]:de,[E]:fe}],rules:[{conditions:[{[S]:"aws.partition",[E]:fe,assign:z}],rules:[{conditions:[Ne,Me],rules:[{conditions:[{[S]:C,[E]:[ce,me]},he],rules:[{endpoint:{url:"https://cognito-identity-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",properties:w,headers:w},type:I}],type:v},{error:"FIPS and DualStack are enabled, but this partition does not support one or both",type:x}],type:v},{conditions:ye,rules:[{conditions:[{[S]:C,[E]:[me,ce]}],rules:[{endpoint:{url:"https://cognito-identity-fips.{Region}.{PartitionResult#dnsSuffix}",properties:w,headers:w},type:I}],type:v},{error:"FIPS is enabled but this partition does not support FIPS",type:x}],type:v},{conditions:ge,rules:[{conditions:[he],rules:[{endpoint:{url:"https://cognito-identity.{Region}.{PartitionResult#dualStackDnsSuffix}",properties:w,headers:w},type:I}],type:v},{error:"DualStack is enabled but this partition does not support DualStack",type:x}],type:v},{endpoint:{url:"https://cognito-identity.{Region}.{PartitionResult#dnsSuffix}",properties:w,headers:w},type:I}],type:v}],type:v},{error:"Invalid Configuration: Missing Region",type:x}]},nn=sn,rn=(e,t={})=>Qe(nn,{endpointParams:e,logger:t.logger});we.aws=Ce;const on=e=>({apiVersion:"2014-06-30",base64Decoder:(e==null?void 0:e.base64Decoder)??et,base64Encoder:(e==null?void 0:e.base64Encoder)??tt,disableHostPrefix:(e==null?void 0:e.disableHostPrefix)??!1,endpointProvider:(e==null?void 0:e.endpointProvider)??rn,extensions:(e==null?void 0:e.extensions)??[],httpAuthSchemeProvider:(e==null?void 0:e.httpAuthSchemeProvider)??Ts,httpAuthSchemes:(e==null?void 0:e.httpAuthSchemes)??[{schemeId:"aws.auth#sigv4",identityProvider:t=>t.getIdentityProvider("aws.auth#sigv4"),signer:new Is},{schemeId:"smithy.api#noAuth",identityProvider:t=>t.getIdentityProvider("smithy.api#noAuth")||(async()=>({})),signer:new Ss}],logger:(e==null?void 0:e.logger)??new Ee,serviceId:(e==null?void 0:e.serviceId)??"Cognito Identity",urlParser:(e==null?void 0:e.urlParser)??st,utf8Decoder:(e==null?void 0:e.utf8Decoder)??nt,utf8Encoder:(e==null?void 0:e.utf8Encoder)??it}),an=["in-region","cross-region","mobile","standard","legacy"],cn=({defaultsMode:e}={})=>rt(async()=>{const t=typeof e=="function"?await e():e;switch(t==null?void 0:t.toLowerCase()){case"auto":return Promise.resolve(dn()?"mobile":"standard");case"mobile":case"in-region":case"cross-region":case"standard":case"legacy":return Promise.resolve(t==null?void 0:t.toLocaleLowerCase());case void 0:return Promise.resolve("legacy");default:throw new Error(`Invalid parameter for "defaultsMode", expect ${an.join(", ")}, got ${t}`)}}),dn=()=>{var s,n;const e=typeof window<"u"&&((s=window==null?void 0:window.navigator)!=null&&s.userAgent)?ve.parse(window.navigator.userAgent):void 0,t=(n=e==null?void 0:e.platform)==null?void 0:n.type;return t==="tablet"||t==="mobile"},un=e=>{const t=cn(e),s=()=>t().then(ht),n=on(e);return{...n,...e,runtime:"browser",defaultsMode:t,bodyLengthChecker:(e==null?void 0:e.bodyLengthChecker)??ot,credentialDefaultProvider:(e==null?void 0:e.credentialDefaultProvider)??(i=>()=>Promise.reject(new Error("Credential is missing"))),defaultUserAgentProvider:(e==null?void 0:e.defaultUserAgentProvider)??tn({serviceId:n.serviceId,clientVersion:en.version}),maxAttempts:(e==null?void 0:e.maxAttempts)??Se,region:(e==null?void 0:e.region)??at("Region is missing"),requestHandler:ct.create((e==null?void 0:e.requestHandler)??s),retryMode:(e==null?void 0:e.retryMode)??(async()=>(await s()).retryMode||dt),sha256:(e==null?void 0:e.sha256)??ut,streamCollector:(e==null?void 0:e.streamCollector)??lt,useDualstackEndpoint:(e==null?void 0:e.useDualstackEndpoint)??(()=>Promise.resolve(pt)),useFipsEndpoint:(e==null?void 0:e.useFipsEndpoint)??(()=>Promise.resolve(mt))}},ln=e=>{const t=e.httpAuthSchemes;let s=e.httpAuthSchemeProvider,n=e.credentials;return{setHttpAuthScheme(i){const o=t.findIndex(r=>r.schemeId===i.schemeId);o===-1?t.push(i):t.splice(o,1,i)},httpAuthSchemes(){return t},setHttpAuthSchemeProvider(i){s=i},httpAuthSchemeProvider(){return s},setCredentials(i){n=i},credentials(){return n}}},pn=e=>({httpAuthSchemes:e.httpAuthSchemes(),httpAuthSchemeProvider:e.httpAuthSchemeProvider(),credentials:e.credentials()}),O=e=>e,mn=(e,t)=>{const s={...O(Et(e)),...O(yt(e)),...O(gt(e)),...O(ln(e))};return t.forEach(n=>n.configure(s)),{...e,...ft(s),...wt(s),...St(s),...pn(s)}};class Tn extends bt{constructor(...[t]){const s=un(t||{}),n=Ms(s),i=Lt(n),o=cs(i),r=vt(o),c=r,a=At(c),d=Ns(a),u=mn(d,(t==null?void 0:t.extensions)||[]);super(u),this.config=u,this.middlewareStack.use(Qt(this.config)),this.middlewareStack.use(hs(this.config)),this.middlewareStack.use(xt(this.config)),this.middlewareStack.use(Ot(this.config)),this.middlewareStack.use(Mt(this.config)),this.middlewareStack.use(zt(this.config)),this.middlewareStack.use(ns(this.config,{httpAuthSchemeParametersProvider:_s,identityProviderConfigProvider:async l=>new ws({"aws.auth#sigv4":l.credentials})})),this.middlewareStack.use(fs(this.config))}destroy(){super.destroy()}}class y extends Rt{constructor(t){super(t),Object.setPrototypeOf(this,y.prototype)}}class L extends y{constructor(t){super({name:"InternalErrorException",$fault:"server",...t}),this.name="InternalErrorException",this.$fault="server",Object.setPrototypeOf(this,L.prototype)}}class j extends y{constructor(t){super({name:"InvalidParameterException",$fault:"client",...t}),this.name="InvalidParameterException",this.$fault="client",Object.setPrototypeOf(this,j.prototype)}}class G extends y{constructor(t){super({name:"LimitExceededException",$fault:"client",...t}),this.name="LimitExceededException",this.$fault="client",Object.setPrototypeOf(this,G.prototype)}}class q extends y{constructor(t){super({name:"NotAuthorizedException",$fault:"client",...t}),this.name="NotAuthorizedException",this.$fault="client",Object.setPrototypeOf(this,q.prototype)}}class B extends y{constructor(t){super({name:"ResourceConflictException",$fault:"client",...t}),this.name="ResourceConflictException",this.$fault="client",Object.setPrototypeOf(this,B.prototype)}}class W extends y{constructor(t){super({name:"TooManyRequestsException",$fault:"client",...t}),this.name="TooManyRequestsException",this.$fault="client",Object.setPrototypeOf(this,W.prototype)}}class V extends y{constructor(t){super({name:"ResourceNotFoundException",$fault:"client",...t}),this.name="ResourceNotFoundException",this.$fault="client",Object.setPrototypeOf(this,V.prototype)}}class K extends y{constructor(t){super({name:"ExternalServiceException",$fault:"client",...t}),this.name="ExternalServiceException",this.$fault="client",Object.setPrototypeOf(this,K.prototype)}}class J extends y{constructor(t){super({name:"InvalidIdentityPoolConfigurationException",$fault:"client",...t}),this.name="InvalidIdentityPoolConfigurationException",this.$fault="client",Object.setPrototypeOf(this,J.prototype)}}class X extends y{constructor(t){super({name:"DeveloperUserAlreadyRegisteredException",$fault:"client",...t}),this.name="DeveloperUserAlreadyRegisteredException",this.$fault="client",Object.setPrototypeOf(this,X.prototype)}}class Y extends y{constructor(t){super({name:"ConcurrentModificationException",$fault:"client",...t}),this.name="ConcurrentModificationException",this.$fault="client",Object.setPrototypeOf(this,Y.prototype)}}const hn=async(e,t)=>{const s=Ue("GetCredentialsForIdentity");let n;return n=JSON.stringify(m(e)),He(t,s,"/",void 0,n)},yn=async(e,t)=>{const s=Ue("GetId");let n;return n=JSON.stringify(m(e)),He(t,s,"/",void 0,n)},gn=async(e,t)=>{if(e.statusCode>=300)return $e(e,t);const s=await F(e.body,t);let n={};return n=Dn(s),{$metadata:g(e),...n}},fn=async(e,t)=>{if(e.statusCode>=300)return $e(e,t);const s=await F(e.body,t);let n={};return n=m(s),{$metadata:g(e),...n}},$e=async(e,t)=>{const s={...e,body:await ks(e.body,t)},n=Ds(e,s.body);switch(n){case"InternalErrorException":case"com.amazonaws.cognitoidentity#InternalErrorException":throw await bn(s);case"InvalidParameterException":case"com.amazonaws.cognitoidentity#InvalidParameterException":throw await An(s);case"LimitExceededException":case"com.amazonaws.cognitoidentity#LimitExceededException":throw await xn(s);case"NotAuthorizedException":case"com.amazonaws.cognitoidentity#NotAuthorizedException":throw await Rn(s);case"ResourceConflictException":case"com.amazonaws.cognitoidentity#ResourceConflictException":throw await In(s);case"TooManyRequestsException":case"com.amazonaws.cognitoidentity#TooManyRequestsException":throw await Cn(s);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentity#ResourceNotFoundException":throw await Pn(s);case"ExternalServiceException":case"com.amazonaws.cognitoidentity#ExternalServiceException":throw await En(s);case"InvalidIdentityPoolConfigurationException":case"com.amazonaws.cognitoidentity#InvalidIdentityPoolConfigurationException":throw await vn(s);case"DeveloperUserAlreadyRegisteredException":case"com.amazonaws.cognitoidentity#DeveloperUserAlreadyRegisteredException":throw await Sn(s);case"ConcurrentModificationException":case"com.amazonaws.cognitoidentity#ConcurrentModificationException":throw await wn(s);default:const i=s.body;return _n({output:e,parsedBody:i,errorCode:n})}},wn=async(e,t)=>{const s=e.body,n=m(s),i=new Y({$metadata:g(e),...n});return f(i,s)},Sn=async(e,t)=>{const s=e.body,n=m(s),i=new X({$metadata:g(e),...n});return f(i,s)},En=async(e,t)=>{const s=e.body,n=m(s),i=new K({$metadata:g(e),...n});return f(i,s)},bn=async(e,t)=>{const s=e.body,n=m(s),i=new L({$metadata:g(e),...n});return f(i,s)},vn=async(e,t)=>{const s=e.body,n=m(s),i=new J({$metadata:g(e),...n});return f(i,s)},An=async(e,t)=>{const s=e.body,n=m(s),i=new j({$metadata:g(e),...n});return f(i,s)},xn=async(e,t)=>{const s=e.body,n=m(s),i=new G({$metadata:g(e),...n});return f(i,s)},Rn=async(e,t)=>{const s=e.body,n=m(s),i=new q({$metadata:g(e),...n});return f(i,s)},In=async(e,t)=>{const s=e.body,n=m(s),i=new B({$metadata:g(e),...n});return f(i,s)},Pn=async(e,t)=>{const s=e.body,n=m(s),i=new V({$metadata:g(e),...n});return f(i,s)},Cn=async(e,t)=>{const s=e.body,n=m(s),i=new W({$metadata:g(e),...n});return f(i,s)},kn=(e,t)=>Ae(e,{AccessKeyId:T,Expiration:s=>Pt(Ct(kt(s))),SecretKey:T,SessionToken:T}),Dn=(e,t)=>Ae(e,{Credentials:s=>kn(s),IdentityId:T}),g=e=>({httpStatusCode:e.statusCode,requestId:e.headers["x-amzn-requestid"]??e.headers["x-amzn-request-id"]??e.headers["x-amz-request-id"],extendedRequestId:e.headers["x-amz-id-2"],cfId:e.headers["x-amz-cf-id"]}),_n=It(y),He=async(e,t,s,n,i)=>{const{hostname:o,protocol:r="https",port:c,path:a}=await e.endpoint(),d={protocol:r,hostname:o,port:c,method:"POST",path:a.endsWith("/")?a.slice(0,-1)+s:a+s,headers:t};return i!==void 0&&(d.body=i),new A(d)};function Ue(e){return{"content-type":"application/x-amz-json-1.1","x-amz-target":`AWSCognitoIdentityService.${e}`}}class Nn extends xe.classBuilder().ep({...Oe}).m(function(t,s,n,i){return[Re(n,this.serialize,this.deserialize),Ie(n,t.getEndpointParameterInstructions())]}).s("AWSCognitoIdentityService","GetCredentialsForIdentity",{}).n("CognitoIdentityClient","GetCredentialsForIdentityCommand").f(void 0,void 0).ser(hn).de(gn).build(){}class Mn extends xe.classBuilder().ep({...Oe}).m(function(t,s,n,i){return[Re(n,this.serialize,this.deserialize),Ie(n,t.getEndpointParameterInstructions())]}).s("AWSCognitoIdentityService","GetId",{}).n("CognitoIdentityClient","GetIdCommand").f(void 0,void 0).ser(yn).de(fn).build(){}export{Tn as CognitoIdentityClient,Nn as GetCredentialsForIdentityCommand,Mn as GetIdCommand};
