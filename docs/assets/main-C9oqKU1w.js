const __vite__fileDeps=["assets/mapbox-gl-97e3rpLs.js","assets/index-Binvhlwa.js","assets/index-D2eziFtJ.css"],__vite__mapDeps=i=>i.map(i=>__vite__fileDeps[i]);
import{c as H,_ as z,e as M,ak as K,j as O,k as j,bc as C,m as J,aA as T,K as Q}from"./index-Binvhlwa.js";const x={methods:{$_emitEvent(e,t={}){this.$emit(e,{map:this.map,component:this,...t})},$_emitMapEvent(e,t={}){this.$_emitEvent(e.type,{mapboxEvent:e,...t})}}},X={resize:{name:"resize"},webglcontextlost:{name:"webglcontextlost"},webglcontextrestored:{name:"webglcontextrestored"},remove:{name:"remove"},movestart:{name:"movestart"},load:{name:"load"},contextmenu:{name:"contextmenu"},dblclick:{name:"dblclick"},click:{name:"click"},touchcancel:{name:"touchcancel"},touchmove:{name:"touchmove"},touchend:{name:"touchend"},touchstart:{name:"touchstart"},dataloading:{name:"dataloading"},mousemove:{name:"mousemove"},mouseup:{name:"mouseup"},mousedown:{name:"mousedown"},sourcedataloading:{name:"sourcedataloading"},error:{name:"error"},data:{name:"data"},styledata:{name:"styledata"},sourcedata:{name:"sourcedata"},mouseout:{name:"mouseout"},styledataloading:{name:"styledataloading"},moveend:{name:"moveend"},move:{name:"move"},render:{name:"render"},zoom:{name:"zoom"},zoomstart:{name:"zoomstart"},zoomend:{name:"zoomend"},boxzoomstart:{name:"boxzoomstart"},boxzoomcancel:{name:"boxzoomcancel"},boxzoomend:{name:"boxzoomend"},rotate:{name:"rotate"},rotatestart:{name:"rotatestart"},rotateend:{name:"rotateend"},dragend:{name:"dragend"},drag:{name:"drag"},dragstart:{name:"dragstart"},pitch:{name:"pitch"},idle:{name:"idle"}},Y={container:{type:[String,HTMLElement],default(){return`map-${(""+Math.random()).split(".")[1]}`}},accessToken:{type:String,default:void 0},minZoom:{type:Number,default:0},maxZoom:{type:Number,default:22},mapStyle:{type:[String,Object],required:!0},hash:{type:[Boolean,String],default:!1},interactive:{type:Boolean,default:!0},bearingSnap:{type:Number,default:7},pitchWithRotate:{type:Boolean,default:!0},clickTolerance:{type:Number,default:3},attributionControl:{type:Boolean,default:!0},customAttribution:{type:[String,Array],default:null},logoPosition:{type:String,default:"bottom-left",validator:e=>["top-left","top-right","bottom-left","bottom-right"].includes(e)},failIfMajorPerformanceCaveat:{type:Boolean,default:!1},preserveDrawingBuffer:{type:Boolean,default:!1},refreshExpiredTiles:{type:Boolean,default:!0},maxBounds:{type:Array,default(){}},scrollZoom:{type:[Boolean,Object],default(){return!0}},boxZoom:{type:Boolean,default:!0},dragRotate:{type:Boolean,default:!0},dragPan:{type:Boolean,default:!0},keyboard:{type:Boolean,default:!0},doubleClickZoom:{type:Boolean,default:!0},touchZoomRotate:{type:[Boolean,Object],default(){return!0}},trackResize:{type:Boolean,default:!0},center:{type:[Object,Array],default:void 0},zoom:{type:Number,default:0},bearing:{type:Number,default:0},pitch:{type:Number,default:0},bounds:{type:[Object,Array],default:void 0},fitBoundsOptions:{type:Object,default:void 0},renderWorldCopies:{type:Boolean,default:!0},RTLTextPluginUrl:{type:String,default:void 0},light:{type:Object,default:void 0},tileBoundaries:{type:Boolean,default:!1},collisionBoxes:{type:Boolean,default:!1},repaint:{type:Boolean,default:!1},transformRequest:{type:Function,default:null},maxTileCacheSize:{type:Number,default:null},localIdeographFontFamily:{type:String,default:null},collectResourceTiming:{type:Boolean,default:!1},fadeDuration:{type:Number,default:300},crossSourceCollisions:{type:Boolean,default:!0}},ee={maxBounds(e){this.map.setMaxBounds(e)},minZoom(e){this.map.setMinZoom(e)},maxZoom(e){this.map.setMaxZoom(e)},mapStyle(e){this.map.setStyle(e)},collisionBoxes(e){this.map.showCollisionBoxes=e},tileBoundaries(e){this.map.showTileBoundaries=e},repaint(e){this.map.repaint=e},zoom(e){this.map.setZoom(e)},center(e){this.map.setCenter(e)},bearing(e){this.map.setBearing(e)},pitch(e){this.map.setPitch(e)},light(e){this.map.setLigh(e)}};function te(e,t,r,i){this.initial||(this.$attrs[`onUpdate:${e}`]?(this.propsIsUpdating[e]?(this._watcher.active=!1,this.$nextTick(()=>{this._watcher.active=!0})):(this._watcher.active=!0,t(r,i)),this.propsIsUpdating[e]=!1):t(r,i))}function oe(){const e={};return Object.entries(ee).forEach(t=>{e[t[0]]=function(r,i){return te.call(this,t[0],t[1].bind(this),r,i)}}),e}const re={watch:oe()},ne={methods:{$_updateSyncedPropsFabric(e,t){return()=>{this.propsIsUpdating[e]=!0;const r=typeof t=="function"?t():t;return this.$emit(`update:${e}`,r)}},$_bindPropsUpdateEvents(){[{events:["moveend"],prop:"center",getter:this.map.getCenter.bind(this.map)},{events:["zoomend"],prop:"zoom",getter:this.map.getZoom.bind(this.map)},{events:["rotate"],prop:"bearing",getter:this.map.getBearing.bind(this.map)},{events:["pitch"],prop:"pitch",getter:this.map.getPitch.bind(this.map)},{events:["moveend","zoomend","rotate","pitch"],prop:"bounds",getter:()=>{let t=this.map.getBounds();return this.$props.bounds instanceof Array&&(t=t.toArray()),t}}].forEach(({events:t,prop:r,getter:i})=>{t.forEach(s=>{this.$attrs[`onUpdate:${r}`]&&this.map.on(s,this.$_updateSyncedPropsFabric(r,i))})})},$_loadMap(){return this.mapboxPromise.then(e=>(this.mapbox=e.default?e.default:e,new Promise(t=>{this.accessToken&&(this.mapbox.accessToken=this.accessToken);const r=new this.mapbox.Map({...this.$props,container:this.$refs.container,style:this.mapStyle});r.on("load",()=>t(r))})))},$_RTLTextPluginError(e){this.$emit("rtl-plugin-error",{map:this.map,error:e})},$_bindMapEvents(e){let t=Object.keys(this.$attrs).filter(r=>r.startsWith("on"));t=t.map(r=>r.slice(2).toLowerCase()),t.forEach(r=>{e.includes(r)&&this.map.on(r,this.$_emitMapEvent)})},$_unbindEvents(e){e.forEach(t=>{this.map.off(t,this.$_emitMapEvent)})}}};var Z={exports:{}};(function(e,t){(function(r,i){e.exports=i()})(window,function(){return function(r){var i={};function s(a){if(i[a])return i[a].exports;var u=i[a]={i:a,l:!1,exports:{}};return r[a].call(u.exports,u,u.exports,s),u.l=!0,u.exports}return s.m=r,s.c=i,s.d=function(a,u,p){s.o(a,u)||Object.defineProperty(a,u,{enumerable:!0,get:p})},s.r=function(a){typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(a,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(a,"__esModule",{value:!0})},s.t=function(a,u){if(1&u&&(a=s(a)),8&u||4&u&&typeof a=="object"&&a&&a.__esModule)return a;var p=Object.create(null);if(s.r(p),Object.defineProperty(p,"default",{enumerable:!0,value:a}),2&u&&typeof a!="string")for(var g in a)s.d(p,g,(function(v){return a[v]}).bind(null,g));return p},s.n=function(a){var u=a&&a.__esModule?function(){return a.default}:function(){return a};return s.d(u,"a",u),u},s.o=function(a,u){return Object.prototype.hasOwnProperty.call(a,u)},s.p="",s(s.s=0)}([function(r,i,s){r.exports=s(1)},function(r,i,s){s.r(i);var a=[{name:"moveend",check:function(o,n){return n.center&&o.isMoving()}},{name:"zoomend",check:function(o,n){return n.zoom!==void 0&&n.zoom!==null&&o.isZooming()}},{name:"rotateend",check:function(o,n){return n.bearing!==void 0&&n.bearing!==null&&o.isRotating()}},{name:"pitchend",check:function(o,n){return n.pitch!==void 0&&n.bearing!==null&&o.isMoving()}}],u=function(o){return{center:o.getCenter(),zoom:o.getZoom(),bearing:o.getBearing(),pitch:o.getPitch()}},p={events:a,getter:u},g={events:[{name:"moveend",check:function(o){return o.isMoving()}}],getter:function(o){return{center:o.getCenter()}}},v={events:[{name:"zoomend",check:function(o){return o.isZooming()}}],getter:function(o){return{zoom:o.getZoom()}}},_={events:[{name:"rotateend",check:function(o){return o.isRotating()}}],getter:function(o){return{bearing:o.getBearing()}}},w={setCenter:g,panBy:g,panTo:g,setZoom:v,zoomTo:v,zoomIn:v,zoomOut:v,setBearing:_,rotateTo:_,resetNorth:_,snapToNorth:_,setPitch:{events:[{name:"pitchend",check:function(o){return!0}}],getter:function(o){return{pitch:o.getPitch()}}},fitBounds:{events:[{name:"zoomend",check:function(o){return o.isZooming()}},{name:"moveend",check:function(o){return o.isMoving()}},{name:"rotateend",check:function(o){return o.isRotating()}}],getter:function(o){return{zoom:o.getZoom(),bearing:o.getBearing(),pitch:o.getPitch(),center:o.getCenter()}}},fitScreenCoordinates:{events:[{name:"zoomend",check:function(o,n){return o.isZooming()}},{name:"moveend",check:function(o,n){return o.isMoving()}},{name:"rotateend",check:function(o,n){return n.bearing&&o.isRotating()}}],getter:function(o){return{zoom:o.getZoom(),center:o.getCenter(),bearing:o.getBearing(),pitch:o.getPitch()}}},jumpTo:p,easeTo:p,flyTo:p};function E(o){return E=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(n){return typeof n}:function(n){return n&&typeof Symbol=="function"&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},E(o)}function P(o){for(var n=1;n<arguments.length;n++){var c=arguments[n]!=null?arguments[n]:{},l=Object.keys(c);typeof Object.getOwnPropertySymbols=="function"&&(l=l.concat(Object.getOwnPropertySymbols(c).filter(function(d){return Object.getOwnPropertyDescriptor(c,d).enumerable}))),l.forEach(function(d){D(o,d,c[d])})}return o}function D(o,n,c){return n in o?Object.defineProperty(o,n,{value:c,enumerable:!0,configurable:!0,writable:!0}):o[n]=c,o}function U(o){return"".concat(o,"-").concat((""+Math.random()).split(".")[1])}function G(o,n,c,l){var d=function S($){$.type===n&&$.eventId===c&&(o.off(n,S),l($))};return d}function W(o,n){var c=o[n],l=c.length;return function(){for(var d=[],S={eventId:U(n)},$=w[n].events.map(function(h,f){return{event:h,func:new Promise(function(b,k){d[f]={event:h,func:G(o,h.name,S.eventId,b)},o.on(h.name,d[f].func)})}}),I=[],m=0;m<l;m++)m===l-1?I.push(P({},S,(m<0||arguments.length<=m?void 0:arguments[m])||{})):I.push((m<0||arguments.length<=m?void 0:arguments[m])||null);var L=[],y=(arguments.length<=0?void 0:arguments[0])||{};try{c.apply(o,I),n==="fitBounds"&&(y={}),n==="fitScreenCoordinates"&&(y={bearing:null},y.bearing=null,typeof(arguments.length<=2?void 0:arguments[2])=="number"&&(y.bearing=arguments.length<=2?void 0:arguments[2]),!(arguments.length<=3)&&arguments[3]&&E(arguments.length<=3?void 0:arguments[3])==="object"&&(y=P({},y,arguments.length<=3?void 0:arguments[3]))),L=$.map(function(h){var f=h.event,b=h.func;return f.check(o,y)?b:(o.off(f.name,b),Promise.resolve())})}catch(h){throw d.forEach(function(f){var b=f.event,k=f.func;o.off(b.name,k)}),h}return Promise.all(L).then(function(){return w[n].getter(o)})}}var B=W,q=function(o){var n=Object.keys(w),c={};return n.forEach(function(l){n.indexOf(l)!==-1&&(c[l]=B(o,l))}),c};function V(o){var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;return n?B(o,n):q(o)}s.d(i,"default",function(){return V})}]).default})})(Z);var ie=Z.exports;const ae=H(ie),se={created(){this.actions={}},methods:{$_registerAsyncActions(e){this.actions={...ae(e),stop(){this.map.stop();const t={pitch:this.map.getPitch(),zoom:this.map.getZoom(),bearing:this.map.getBearing(),center:this.map.getCenter()};return Object.entries(t).forEach(r=>{this.$_updateSyncedPropsFabric(r[0],r[1])()}),Promise.resolve(t)}}}}},ue={name:"GlMap",mixins:[re,ne,x,se],provide(){return{map:M(()=>this.map),mapbox:M(()=>this.mapbox)}},props:{mapboxGl:{type:Object,default:null},...Y},data(){return{initial:!0,initialized:!1}},computed:{loaded(){return this.map?this.map.loaded():!1},version(){return this.map?this.map.version:null},isStyleLoaded(){return this.map?this.map.isStyleLoaded():!1},areTilesLoaded(){return this.map?this.map.areTilesLoaded():!1},isMoving(){return this.map?this.map.isMoving():!1},canvas(){return this.map?this.map.getCanvas():null},canvasContainer(){return this.map?this.map.getCanvasContainer():null},images(){return this.map?this.map.listImages():null}},created(){this.map=null,this.propsIsUpdating={},this.mapboxPromise=this.mapboxGl?Promise.resolve(this.mapboxGl):K(()=>import("./mapbox-gl-97e3rpLs.js").then(e=>e.m),__vite__mapDeps([0,1,2]))},mounted(){this.$_loadMap().then(e=>{this.map=e,this.RTLTextPluginUrl!==void 0&&this.mapbox.getRTLTextPluginStatus()!=="loaded"&&this.mapbox.setRTLTextPlugin(this.RTLTextPluginUrl,this.$_RTLTextPluginError);const t=Object.keys(X);this.$_bindMapEvents(t),this.$_registerAsyncActions(e),this.$_bindPropsUpdateEvents(),this.initial=!1,this.initialized=!0,this.$emit("load",{map:e,component:this})})},beforeDestroy(){this.$nextTick(()=>{this.map&&this.map.remove()})}},ce={class:"mgl-map-wrapper"};function le(e,t,r,i,s,a){return O(),j("div",ce,[t[0]||(C(-1),t[0]=J("div",{id:e.container,ref:"container"},null,8,["id"]),C(1),t[0]),s.initialized?T(e.$slots,"default",{key:0}):Q("",!0)])}const pe=z(ue,[["render",le]]),R={methods:{$_emitSelfEvent(e,t={}){this.$_emitMapEvent(e,{control:this.control,...t})},$_bindSelfEvents(e,t){let r=Object.keys(this.$attrs).filter(i=>i.startsWith("on"));r=r.map(i=>i.slice(2).toLowerCase()),r.forEach(i=>{e.includes(i)&&t.on(i,this.$_emitSelfEvent)})},$_unbindSelfEvents(e,t){e.length!==0&&t&&e.forEach(r=>{t.off(r,this.$_emitSelfEvent)})}}},F={mixins:[x,R],inject:["mapbox","map"],props:{position:{type:String,default:"top-right"}},beforeDestroy(){this.map&&this.control&&this.map.removeControl(this.control)},methods:{$_addControl(){try{this.map.addControl(this.control,this.position)}catch(e){this.$_emitEvent("error",{error:e});return}this.$_emitEvent("added",{control:this.control})}},render(){}},de={name:"NavigationControl",mixins:[F],props:{showCompass:{type:Boolean,default:!0},showZoom:{type:Boolean,default:!0},visualizePitch:{type:Boolean,default:!1}},created(){this.control=new this.mapbox.NavigationControl(this.$props),this.$_addControl()}},me={name:"ScaleControl",mixins:[F],props:{maxWidth:{type:Number,default:150},unit:{type:String,default:"metric",validator(e){return["imperial","metric","nautical"].includes(e)}}},watch:{unit(e,t){this.control&&e!==t&&this.control.setUnit(e)}},created(){this.control=new this.mapbox.ScaleControl(this.$props),this.$_addControl()}},he={open:"open",close:"close"},fe={name:"Popup",mixins:[x,R],inject:{mapbox:{default:null},map:{default:null},marker:{default:null}},props:{closeButton:{type:Boolean,default:!0},closeOnClick:{type:Boolean,default:!0},anchor:{validator(e){return typeof e=="string"&&["top","bottom","left","right","top-left","top-right","bottom-left","bottom-right"].includes(e)},default:void 0},offset:{type:[Number,Object,Array],default:()=>[0,0]},coordinates:{type:Array},onlyText:{type:Boolean,default:!1},showed:{type:Boolean,default:!1}},data(){return{initial:!0,popup:void 0}},computed:{open:{get(){return this.popup!==void 0?this.popup.isOpen():!1},set(e){this.map&&this.popup&&(e?this.popup.addTo(this.map):this.popup.remove())}}},watch:{coordinates(e){this.initial||this.popup.setLngLat(e)},showed(e,t){e!==t&&(this.open=e,this.marker&&this.marker.togglePopup())}},mounted(){this.popup=new this.mapbox.Popup(this.$props),this.$_addPopup(),this.initial=!1},beforeDestroy(){this.map&&(this.popup.remove(),this.$_emitEvent("removed"))},methods:{$_addPopup(){if(this.popup=new this.mapbox.Popup(this.$props),this.coordinates!==void 0&&this.popup.setLngLat(this.coordinates),this.$slots.default()!==void 0){const e=this.$refs.content;this.popup.setDOMContent(e)}this.$_bindSelfEvents(Object.keys(he),this.popup),this.$_emitEvent("added",{popup:this.popup}),this.marker&&this.marker.setPopup(this.popup),this.showed&&(this.open=!0,this.marker&&this.marker.togglePopup())},$_emitSelfEvent(e){this.$_emitMapEvent(e,{popup:this.popup})},remove(){this.popup.remove(),this.$_emitEvent("remove",{popup:this.popup})}}},ye=["id"];function ge(e,t,r,i,s,a){return O(),j("section",{id:`popup-${Date.now()}`,ref:"content"},[T(e.$slots,"default")],8,ye)}const ve=z(fe,[["render",ge]]),N=["mousedown","mouseup","click","dblclick","mousemove","mouseenter","mouseleave","mouseover","mouseout","contextmenu","touchstart","touchend","touchcancel"],be={sourceId:{type:String,required:!0},source:{type:[Object,String],default:void 0}},$e={layerId:{type:String,required:!0},layer:{type:Object,required:!0},before:{type:String,default:void 0}},_e={clearSource:{type:Boolean,default:!0},replaceSource:{type:Boolean,default:!1},replace:{type:Boolean,default:!1}},A={mixins:[x],props:{...be,...$e,..._e},inject:["mapbox","map"],data(){return{initial:!0}},computed:{sourceLoaded(){return this.map?this.map.isSourceLoaded(this.sourceId):!1},mapLayer(){return this.map?this.map.getLayer(this.layerId):null},mapSource(){return this.map?this.map.getSource(this.sourceId):null}},created(){this.layer.minzoom&&this.$watch("layer.minzoom",function(e){this.initial||this.map.setLayerZoomRange(this.layerId,e,this.layer.maxzoom)}),this.layer.maxzoom&&this.$watch("layer.maxzoom",function(e){this.initial||this.map.setLayerZoomRange(this.layerId,this.layer.minzoom,e)}),this.layer.paint&&this.$watch("layer.paint",function(e){if(!this.initial&&e)for(const t of Object.keys(e))this.map.setPaintProperty(this.layerId,t,e[t])},{deep:!0}),this.layer.layout&&this.$watch("layer.layout",function(e){if(!this.initial&&e)for(const t of Object.keys(e))this.map.setLayoutProperty(this.layerId,t,e[t])},{deep:!0}),this.layer.filter&&this.$watch("layer.filter",function(e){this.initial||this.map.setFilter(this.layerId,e)},{deep:!0})},beforeDestroy(){if(this.map&&this.map.loaded()){try{this.map.removeLayer(this.layerId)}catch(e){this.$_emitEvent("layer-does-not-exist",{layerId:this.sourceId,error:e})}if(this.clearSource)try{this.map.removeSource(this.sourceId)}catch(e){this.$_emitEvent("source-does-not-exist",{sourceId:this.sourceId,error:e})}}},methods:{$_emitLayerMapEvent(e){return this.$_emitMapEvent(e,{layerId:this.layerId})},$_bindLayerEvents(e){let t=Object.keys(this.$attrs).filter(r=>r.startsWith("on"));t=t.map(r=>r.slice(2).toLowerCase()),t.forEach(r=>{e.includes(r)&&this.map.on(r,this.layerId,this.$_emitLayerMapEvent)})},$_unbindEvents(e){this.map&&e.forEach(t=>{this.map.off(t,this.layerId,this.$_emitLayerMapEvent)})},$_watchSourceLoading(e){e.dataType==="source"&&e.sourceId===this.sourceId&&(this.$_emitEvent("layer-source-loading",{sourceId:this.sourceId}),this.map.off("dataloading",this.$_watchSourceLoading))},move(e){this.map.moveLayer(this.layerId,e),this.$_emitEvent("layer-moved",{layerId:this.layerId,beforeId:e})},remove(){this.map.removeLayer(this.layerId),this.map.removeSource(this.sourceId),this.$_emitEvent("layer-removed",{layerId:this.layerId}),this.$destroy()}},render(){}},Se={name:"GeojsonLayer",mixins:[A],props:{reactive:{type:Boolean,default:!0}},computed:{getSourceFeatures(){return e=>this.map?this.map.querySourceFeatures(this.sourceId,{filter:e}):null},getRenderedFeatures(){return(e,t)=>this.map?this.map.queryRenderedFeatures(e,{layers:[this.layerId],filter:t}):null},getClusterExpansionZoom(){return e=>new Promise((t,r)=>{if(this.mapSource)this.mapSource.getClusterExpansionZoom(e,(i,s)=>i?r(i):t(s));else return r(new Error(`Map source with id ${this.sourceId} not found.`))})},getClusterChildren(){return e=>new Promise((t,r)=>{const i=this.mapSource;if(i)i.getClusterChildren(e,(s,a)=>s?r(s):t(a));else return r(new Error(`Map source with id ${this.sourceId} not found.`))})},getClusterLeaves(){return(...e)=>new Promise((t,r)=>{if(this.mapSource)this.mapSource.getClusterLeaves(...e,(i,s)=>i?r(i):t(s));else return r(new Error(`Map source with id ${this.sourceId} not found.`))})}},created(){this.source&&this.reactive&&this.$watch("source.data",function(e){this.initial||this.mapSource.setData(e)},{deep:!0}),this.$_deferredMount()},methods:{$_deferredMount(){if(this.map.on("dataloading",this.$_watchSourceLoading),this.source){const e={type:"geojson",...this.source};try{this.map.addSource(this.sourceId,e)}catch{this.replaceSource&&(this.map.removeSource(this.sourceId),this.map.addSource(this.sourceId,e))}}this.$_addLayer(),this.$_bindLayerEvents(N),this.map.off("dataloading",this.$_watchSourceLoading),this.initial=!1},$_addLayer(){const e=this.map.getLayer(this.layerId);if(e)if(this.replace)this.map.removeLayer(this.layerId);else return this.$_emitEvent("layer-exists",{layerId:this.layerId}),e;const t={id:this.layerId,source:this.sourceId,...this.layer};this.map.addLayer(t,this.before),this.$_emitEvent("added",{layerId:this.layerId})},setFeatureState(e,t){if(this.map){const r={id:e,source:this.source};return this.map.setFeatureState(r,t)}},getFeatureState(e){if(this.map){const t={id:e,source:this.source};return this.map.getFeatureState(t)}},removeFeatureState(e,t,r){if(this.map){const i={id:e,source:this.source,sourceLayer:t};return this.map.removeFeatureState(i,r)}}}},xe={name:"ImageLayer",mixins:[A],created(){this.source&&(this.source.coordinates&&this.$watch("source.coordinates",function(e){this.initial||e&&this.mapSource.setCoordinates(e)},{deep:!0}),this.source.url&&this.$watch("source.url",function(e){this.initial||e&&this.mapSource.updateImage({url:e,coordinates:this.source.coordinates})},{deep:!0})),this.$_deferredMount()},methods:{$_deferredMount(){const e={type:"image",...this.source};this.map.on("dataloading",this.$_watchSourceLoading);try{this.map.addSource(this.sourceId,e)}catch{this.replaceSource&&(this.map.removeSource(this.sourceId),this.map.addSource(this.sourceId,e))}this.$_addLayer(),this.$_bindLayerEvents(N),this.initial=!1},$_addLayer(){const e=this.map.getLayer(this.layerId);if(e)if(this.replace)this.map.removeLayer(this.layerId);else return this.$_emitEvent("layer-exists",{layerId:this.layerId}),e;const t={id:this.layerId,source:this.sourceId,type:"raster",...this.layer};this.map.addLayer(t,this.before),this.$_emitEvent("added",{layerId:this.layerId})}}},Ee=pe,Ie=de,Pe=me,Be=Se,Le=xe,ke=ve;export{Be as M,Le as a,ke as b,Pe as c,Ie as d,Ee as e};
