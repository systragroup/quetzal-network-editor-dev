import{n as l,s as n,M as c,a as u,b as d,c as p,d as h,e as m,f as g}from"./index-509a3df9.js";const o=s=>s,v={name:"MatrixRoadCaster",components:{},data(){return{imgs:[],exporting:!1,applying:!1,validForm:!0,parameters:[{name:"num_zones",text:"number of zones",value:null,type:"Number",units:"",hint:"number of zones. road nodes will be aggregate to form centroids",rules:["required","largerThanZero"]},{name:"train_size",text:"number of OD (api call)",value:null,type:"Number",units:"",hint:"number of OD to get from the API, the rest will be interpolated with ML",rules:["required","largerThanZero"]},{name:"date_time",text:"date Time",value:null,type:"String",units:"",hint:"DateTime in the past. (YYYY-MM-DDTHH:MM:SS(UTC-timezone) (-04:00 for montreal))",rules:["required","dateTimeRule"]},{name:"ff_time_col",text:"freeflow time on roads",value:null,items:this.$store.getters.rlineAttributes,type:"String",units:"",hint:"road links time (link length / speed) to use as a first approximation. this is the freeflow speed, or speed limit",rules:["required"]},{name:"max_speed",text:"max speed on road",value:null,type:"Number",units:"",hint:"Maximum allowed speed on a road. applying an OD matrix on the road network could result il unrealistic speed if not used.",rules:["required","largerThanZero"]},{name:"num_random_od",text:"number of OD to plot",value:null,type:"Number",units:"",hint:"number of OD calibration plot to produce. those are random OD.",rules:["required","largerThanZero"]},{name:"hereApiKey",text:"HERE api key",value:null,type:"String",units:"",hint:"HERE api key to download a set of OD",rules:["required"]}],showHint:!1,re:/^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$/,rules:{required:s=>!!s||o("Required"),largerThanZero:s=>s>0||o("should be larger than 0"),nonNegative:s=>s>=0||o("should be larger or equal to 0"),dateTimeRule:s=>this.re.test(s)||o("invalid date time")}}},computed:{bucket(){return this.$store.getters["runMRC/bucket"]},callID(){return this.$store.getters["runMRC/callID"]},timer(){return this.$store.getters["runMRC/timer"]},importStatus(){return this.$store.getters["runMRC/status"]},running(){return this.$store.getters["runMRC/running"]},error(){return this.$store.getters["runMRC/error"]},errorMessage(){return this.$store.getters["runMRC/errorMessage"]}},watch:{importStatus(s){s==="SUCCEEDED"&&this.getImagesURL()}},created(){const s=this.$store.getters["runMRC/parameters"];this.parameters.forEach(t=>t.value=s[t.name]),this.callID&&this.getImagesURL()},methods:{run(){if(!this.$refs.form.validate())return;this.$store.commit("runMRC/setCallID");const s={callID:this.callID};this.parameters.forEach(t=>{s[t.name]=t.value}),this.$store.dispatch("runMRC/startExecution",{rlinks:this.$store.getters.rlinks,rnodes:this.$store.getters.rnodes,parameters:s})},stopRun(){this.$store.dispatch("runMRC/stopExecution")},async ApplyResults(){this.applying=!0;const s=await n.readJson(this.bucket,this.callID.concat("/road_links.geojson"));this.$store.commit("loadrLinks",s);const t=await n.readJson(this.bucket,this.callID.concat("/road_nodes.geojson"));this.$store.commit("loadrNodes",t),this.applying=!1,this.$store.commit("changeNotification",{text:o("Road links applied!"),autoClose:!0,color:"success"})},async getImagesURL(){const t=(await n.listFiles(this.bucket,this.callID+"/")).filter(e=>e.endsWith(".png"));for(const e of t){const r=await n.getImagesURL(this.bucket,e);this.imgs.push(r)}},async download(){this.exporting=!0,await n.downloadFolder(this.bucket,this.callID.concat("/")),this.exporting=!1}}};var _=function(){var t=this,e=t._self._c;return e("v-row",{staticClass:"ma-0 pa-2 background"},[e("v-col",[e("v-card",{staticClass:"card"},[e("v-card-title",{staticClass:"subtitle"},[t._v(" "+t._s(t.$gettext("ML Matrix Road Caster"))+" ")]),e("p",[t._v(" "+t._s(t.$gettext("1) Find n zones centroids using a Kmean clustering on the nodes")))]),e("p",[t._v(" "+t._s(t.$gettext("2) Call the Here Matrix API on random OD ( around 1% is sufficient )")))]),e("p",[t._v(" "+t._s(t.$gettext("3) Interpolate every other OD time with an hybrid Machine learning model")))]),e("p",[t._v(" "+t._s(t.$gettext("4) ajust the speed on the road network to match the routing time with the OD time using an iterative algorithm")))]),e("v-form",{ref:"form",attrs:{"lazy-validation":""},model:{value:t.validForm,callback:function(r){t.validForm=r},expression:"validForm"}},t._l(t.parameters,function(r,i){return e("div",{key:i},[typeof r.items>"u"?e("v-text-field",{attrs:{type:r.type,label:t.$gettext(r.text),suffix:r.units,hint:t.showHint?t.$gettext(r.hint):"","persistent-hint":t.showHint,rules:r.rules.map(a=>t.rules[a]),required:""},on:{wheel:()=>{}},model:{value:r.value,callback:function(a){t.$set(r,"value",a)},expression:"item.value"}}):e("v-select",{attrs:{type:r.type,items:r.items,label:t.$gettext(r.text),suffix:r.units,hint:t.showHint?t.$gettext(r.hint):"","persistent-hint":t.showHint,rules:r.rules.map(a=>t.rules[a]),required:""},on:{wheel:()=>{}},model:{value:r.value,callback:function(a){t.$set(r,"value",a)},expression:"item.value"}})],1)}),0),e("v-card-actions",[e("v-btn",{attrs:{color:"success",loading:t.running||t.importStatus==="RUNNING",disabled:t.running||t.importStatus==="RUNNING"||!t.validForm},on:{click:function(r){return t.run()}}},[e("v-icon",{staticStyle:{"margin-right":"10px"},attrs:{small:""}},[t._v(" fa-solid fa-play ")]),t._v(" "+t._s(t.$gettext("Run"))+" ")],1),e("v-btn",{directives:[{name:"show",rawName:"v-show",value:t.importStatus=="RUNNING",expression:"importStatus == 'RUNNING'"}],attrs:{color:"grey",text:""},on:{click:function(r){return t.stopRun()}}},[t._v(" "+t._s(t.$gettext("Abort"))+" ")]),e("v-card-text",{directives:[{name:"show",rawName:"v-show",value:t.importStatus=="RUNNING",expression:"importStatus == 'RUNNING'"}]},[t._v(" ~ "+t._s(t.timer>0?Math.ceil(t.timer/60):t.$gettext("less than 1"))+t._s(t.$gettext(" minutes remaining"))+" ")]),e("v-spacer"),e("v-btn",{attrs:{icon:"",small:""},on:{click:function(r){t.showHint=!t.showHint}}},[e("v-icon",[t._v("far fa-question-circle small")])],1)],1)],1)],1),e("v-col",[e("v-card",{staticClass:"card2"},[e("v-card-title",{staticClass:"subtitle"},[t._v(" "+t._s(t.$gettext("Calibration Results"))+" ")]),e("v-btn",{directives:[{name:"show",rawName:"v-show",value:t.imgs.length>0,expression:"imgs.length>0"}],attrs:{loading:t.applying,disabled:t.applying},on:{click:t.ApplyResults}},[e("v-icon",{staticStyle:{"margin-right":"10px"},attrs:{small:""}},[t._v(" fa-solid fa-upload ")]),t._v(" "+t._s(t.$gettext("Apply Road links to project"))+" ")],1),e("v-btn",{directives:[{name:"show",rawName:"v-show",value:t.imgs.length>0,expression:"imgs.length>0"}],attrs:{loading:t.exporting,disabled:t.exporting},on:{click:t.download}},[e("v-icon",{staticStyle:{"margin-right":"10px"},attrs:{small:""}},[t._v(" fa-solid fa-download ")]),t._v(" "+t._s(t.$gettext("Download"))+" ")],1),t.error?e("v-alert",{attrs:{dense:"",outlined:"",text:"",type:"error"}},[t._v(" "+t._s(t.$gettext("Service ended with an execution error or have been aborted.  Please retry. If the problem persist, contact us."))+" "),t._l(Object.keys(t.errorMessage),function(r){return e("p",{key:r},[e("b",[t._v(t._s(r)+": ")]),t._v(t._s(t.errorMessage[r])+" ")])})],2):t._e(),t._l(t.imgs,function(r,i){return e("div",{key:i,staticClass:"gallery"},[e("v-img",{attrs:{src:r,alt:"image",contain:""}})],1)})],2)],1)],1)},y=[],f=l(v,_,y,!1,null,"fb29f7fb",null,null);const b=f.exports;const x={name:"OSMImporter",components:{MglMap:c,MglNavigationControl:u,MglScaleControl:d,MglGeojsonLayer:p},data(){return{mapboxPublicKey:"pk.eyJ1Ijoic2JvaXZpbiIsImEiOiJja3BlMm41cm4xa2QyMnZwZTBqdGx4bHI0In0.11oH2-B2g9J6LarDnoqQfQ",showOverwriteDialog:!1,bbox:null,poly:null,selectedHighway:null,highwayList:["motorway","motorway_link","trunk","trunk_link","primary","primary_link","secondary","secondary_link","tertiary","tertiary_link","residential","service","unclassified","cycleway"],isUserSignedIn:h.auth.isUserSignedIn(),colorDict:{motorway:"E892A2",motorway_link:"E892A2",trunk:"E892A2",trunk_link:"E892A2",primary:"FCD6A4",primary_link:"FCD6A4",secondary:"F7F9BE",secondary_link:"F7F9BE",tertiary:"808080",tertiary_link:"808080",residential:"808080",service:"808080",unclassified:"808080",cycleway:"1D8621"},widthDict:{motorway:4,motorway_link:4,trunk:4,trunk_link:4,primary:4,primary_link:4,secondary:3,secondary_link:3,tertiary:2,tertiary_link:2,residential:2,service:2,unclassified:2,cycleway:2}}},computed:{mapStyle(){return this.$store.getters.mapStyle},rlinksIsEmpty(){return this.$store.getters.rlinksIsEmpty},highway(){return this.$store.getters["runOSM/highway"]},bucket(){return this.$store.getters["runOSM/bucket"]},callID(){return this.$store.getters["runOSM/callID"]},importStatus(){return this.$store.getters["runOSM/status"]},running(){return this.$store.getters["runOSM/running"]},error(){return this.$store.getters["runOSM/error"]},errorMessage(){return this.$store.getters["runOSM/errorMessage"]}},watch:{selectedHighway(s){this.$store.commit("runOSM/changeHighway",s)}},beforeDestroy(){try{this.map.removeLayer("stroke")}catch{}},created(){this.selectedHighway=this.highway},methods:{onMapLoaded(s){s.map.dragRotate.disable(),this.map=s.map,this.map.on("dragend",this.getBounds),this.map.on("zoomend",this.getBounds),this.getBounds()},getBounds(){this.bbox=this.map.getBounds();const s=m([this.bbox._sw.lng,this.bbox._sw.lat,this.bbox._ne.lng,this.bbox._ne.lat]);this.poly=g(s,-.1*(this.bbox._ne.lat-this.bbox._sw.lat),{units:"degrees"}),this.poly.geometry.coordinates[0]=this.poly.geometry.coordinates[0].reverse()},importOSM(){if(this.rlinksIsEmpty){this.$store.commit("runOSM/setCallID");const s=[this.bbox._sw.lat,this.bbox._sw.lng,this.bbox._ne.lat,this.bbox._ne.lng];this.$store.dispatch("runOSM/startExecution",{bbox:s})}else this.showOverwriteDialog=!0},applyOverwriteDialog(){this.$store.commit("unloadrFiles"),this.showOverwriteDialog=!1,this.importOSM()}}};var w=function(){var t=this,e=t._self._c;return e("section",[e("v-card",{staticClass:"card"},[e("v-card-title",[t._v(" "+t._s(t.$gettext("Import OSM network in bounding box"))+" ")]),e("v-spacer"),e("v-card-subtitle",[t.error?e("v-alert",{attrs:{dense:"",width:"50rem",outlined:"",text:"",type:"error"}},[t._v(" "+t._s(t.$gettext("There as been an error while importing OSM network.  Please try again. If the problem persist, contact us."))+" "),t._l(Object.keys(t.errorMessage),function(r){return e("p",{key:r},[e("b",[t._v(t._s(r)+": ")]),t._v(t._s(t.errorMessage[r])+" ")])})],2):t._e()],1),e("v-card-actions",[e("MglMap",{key:t.mapStyle,staticClass:"map",attrs:{"access-token":t.mapboxPublicKey,"map-style":t.mapStyle},on:{load:t.onMapLoaded}},[e("MglScaleControl",{attrs:{position:"bottom-right"}}),e("MglNavigationControl",{attrs:{position:"bottom-right"}}),e("MglGeojsonLayer",{attrs:{"source-id":"polygon",source:{type:"geojson",data:t.poly,promoteId:"index"},"layer-id":"poly",layer:{interactive:!0,type:"fill",paint:{"fill-color":t.$vuetify.theme.currentTheme.linksprimary,"fill-opacity":.3}}}}),e("MglGeojsonLayer",{attrs:{"source-id":"polygon",type:"line",source:"polygon","layer-id":"stroke",layer:{type:"line",paint:{"line-color":t.$vuetify.theme.currentTheme.linksprimary,"line-width":3}}}})],1)],1),e("v-divider"),e("v-card-actions",[e("v-spacer"),e("v-select",{attrs:{items:t.highwayList,attach:"",chips:"","menu-props":{top:!0,offsetY:!0},label:"Highways to import",multiple:""},scopedSlots:t._u([{key:"selection",fn:function({item:r,index:i}){return[i<=0?e("v-chip",[e("span",[t._v(t._s(r))])]):t._e(),i===1?e("span",{staticClass:"grey--text text-caption"},[t._v(" (+"+t._s(t.selectedHighway.length-1+" "+t.$gettext("more"))+" ) ")]):t._e()]}}]),model:{value:t.selectedHighway,callback:function(r){t.selectedHighway=r},expression:"selectedHighway"}}),e("v-spacer"),e("v-btn",{attrs:{text:"",outlined:"",color:"success",loading:t.running,disabled:t.running},on:{click:t.importOSM}},[t._v(" "+t._s(t.$gettext("Download"))+" ")])],1)],1),e("v-dialog",{attrs:{persistent:"","max-width":"500"},on:{keydown:[function(r){return!r.type.indexOf("key")&&t._k(r.keyCode,"enter",13,r.key,"Enter")?null:t.applyOverwriteDialog.apply(null,arguments)},function(r){if(!r.type.indexOf("key")&&t._k(r.keyCode,"esc",27,r.key,["Esc","Escape"]))return null;t.showOverwriteDialog=!1}]},model:{value:t.showOverwriteDialog,callback:function(r){t.showOverwriteDialog=r},expression:"showOverwriteDialog"}},[e("v-card",[e("v-card-title",{staticClass:"text-h5"},[t._v(" "+t._s(t.$gettext("Overwrite current road network ?"))+" ")]),e("v-card-actions",[e("v-spacer"),e("v-btn",{attrs:{color:"regular"},on:{click:function(r){t.showOverwriteDialog=!t.showOverwriteDialog}}},[t._v(" "+t._s(t.$gettext("No"))+" ")]),e("v-btn",{attrs:{color:"primary"},on:{click:t.applyOverwriteDialog}},[t._v(" "+t._s(t.$gettext("Yes"))+" ")])],1)],1)],1)],1)},k=[],M=l(x,w,k,!1,null,"4767a984",null,null);const $=M.exports;const D={name:"Microservices",components:{MatrixRoadCaster:b,OSMImporter:$},props:{value:{type:Array,default:()=>[]}},data(){return{tab:0}},computed:{rlinksIsEmpty(){return this.$store.getters.rlinksIsEmpty}},watch:{tab(s){}},methods:{}};var O=function(){var t=this,e=t._self._c;return e("section",[e("v-tabs",{attrs:{centered:""},model:{value:t.tab,callback:function(r){t.tab=r},expression:"tab"}},[e("v-tab",[t._v("OSM importer")]),e("v-tab",[t._v("Matrix Road Caster")])],1),e("div",{staticClass:"layout"},[e("div",{staticClass:"layout-overlay"}),t.tab===0?e("OSMImporter"):t.tab===1?e("MatrixRoadCaster"):t._e()],1)],1)},S=[],C=l(D,O,S,!1,null,"763a9800",null,null);const R=C.exports;export{R as default};
