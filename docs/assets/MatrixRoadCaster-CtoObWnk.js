import{al as H,u as L,bH as W,c as o,r as g,ab as Y,a as C,d as K,h as J,g as Q,i,j as r,m as d,a8 as X,D as z,L as S,B as V,C as b,W as O,ag as ee,a2 as te,A as ae,a7 as ne,R as oe,Q as se,aC as y,am as le,_ as re}from"./index-JvMGzoLv.js";import{W as ue}from"./Warning-DBCy96uK.js";import{S as ie}from"./SimpleForm-BLFe2S9e.js";import{M as de}from"./Markdown-CrAqvwoQ.js";import{g as ce}from"./form-B2uRhppC.js";const me={class:"zone-row"},pe=H({__name:"MatrixRoadCaster",setup(fe){const{$gettext:u}=L(),n=W(),T=o(()=>n.stateMachineArn),_=o(()=>n.running),R=o(()=>n.error),A=o(()=>n.errorMessage),k=o(()=>n.bucket),p=o(()=>n.callID),D=o(()=>n.timer),I=o(()=>n.status),c=o(()=>n.parameters),w=g(n.zoneFile),f=Y(),U=C(),j=o(()=>U.otherFiles.filter(t=>t.extension==="geojson").map(t=>t.name)),x=o(()=>c.value.use_zone),m=g([{key:"api",label:"Api",value:"google",type:"select",hint:"api to use",items:["google","here"],rules:[]},{key:"use_zone",label:"Use zone",value:!1,type:"boolean",units:"",hint:"use zone",rules:[]},{key:"num_zones",label:"number of zones",value:null,type:"number",disabled:!1,units:"",hint:"number of zones. road nodes will be aggregate to form centroids",rules:["required","largerThanZero"]},{key:"train_size",label:"number of OD (api call)",value:null,type:"number",units:"",hint:"number of OD to get from the API, the rest will be interpolated with ML",rules:["required","largerThanZero"]},{key:"date_time",label:"date Time",value:null,type:"string",units:"",hint:"HERE DateTime in the past. (YYYY-MM-DDTHH:MM:SS(UTC-timezone) (-04:00 for montreal)). Google: datetime in the future. The timezone is not used here (local timezone used)",rules:["required",B,G]},{key:"ff_time_col",label:"freeflow time on roads",value:null,items:f.rlineAttributes,type:"select",units:"",hint:"road links time (link length / speed) to use as a first approximation. this is the freeflow speed, or speed limit",rules:["required"]},{key:"max_speed",label:"max speed on road",value:null,type:"number",units:"",hint:"Maximum allowed speed on a road. applying an OD matrix on the road network could result il unrealistic speed if not used.",rules:["required","largerThanZero"]},{key:"num_random_od",label:"number of OD to plot",value:null,type:"number",units:"",hint:"number of OD calibration plot to produce. those are random OD.",rules:["required","largerThanZero"]},{key:"hereApiKey",label:"api key",value:null,type:"string",units:"",hint:"Google or Here api key to download a set of OD",rules:["required"]}]);K(()=>{m.value.forEach(t=>t.value=c.value[t.key])});function h(t){n.saveParam(t),m.value.filter(a=>a.key==="num_zones")[0].disabled=x.value}function F(){const t=c.value.num_zones,a=c.value.train_size,e=c.value.num_random_od;n.timer=Math.min(t,a)*1.8+f.rlinks.features.length*.002+15,n.timer+=10*e}async function N(){try{if(await y.putObject(k.value,p.value.concat("/road_links.geojson"),JSON.stringify(f.rlinks)),await y.putObject(k.value,p.value.concat("/road_nodes.geojson"),JSON.stringify(f.rnodes)),x.value){const t=C(),a=le(),e=w.value,l=t.otherFiles.filter(s=>s.name===e)[0];l.content==null&&a.model!==null&&(l.content=await y.readBytes(a.model,a.scenario+"/"+l.path)),await y.putObject(k.value,p.value.concat("/zones.geojson"),l.content)}}catch(t){C().changeAlert(t)}}const M=g();async function P(){if(!await M.value.validate())return;n.setCallID(),n.running=!0,n.saveParams(m.value),F(),await N();const a={callID:p.value,...c.value};n.startExecution(T.value,a)}function Z(){n.stopExecution()}const q=o(()=>c.value.api==="google"),$=/^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$/;function B(t){return $.test(t)||u("invalid date time")}function G(t){return q.value&&Date.parse(t)>Date.now()||u("datetime must be in the future")}const v=g(!1),E=u(`
# ML Matrix Road Caster
  1) Find n zones centroids using a Kmean clustering on the nodes or use your own zoning.
  2) Call the Google or Here Matrix API on random OD ( around 1% is sufficient )
  3) Interpolate every other OD time with an hybrid Machine learning model
  4) ajust the speed on the road network to match the routing time with the OD time using an iterative algorithm') 
`);return(t,a)=>(Q(),J(se,{class:"card"},{default:i(()=>[r(de,{source:d(E)},null,8,["source"]),r(ue,{show:R.value,messages:A.value},null,8,["show","messages"]),r(ie,{ref_key:"formRef",ref:M,modelValue:m.value,"onUpdate:modelValue":a[3]||(a[3]=e=>m.value=e),onChange:h},{use_zone:i(({item:e,showHint:l})=>[ae("div",me,[r(ne,{modelValue:e.value,"onUpdate:modelValue":s=>e.value=s,class:"pr-2",color:"primary",variant:"underlined",label:d(u)(e.label),hint:l?e.hint:"","persistent-hint":l,onChange:s=>h(e)},null,8,["modelValue","onUpdate:modelValue","label","hint","persistent-hint","onChange"]),r(oe,{modelValue:w.value,"onUpdate:modelValue":a[0]||(a[0]=s=>w.value=s),items:j.value,disabled:!x.value,onChange:s=>h(e)},null,8,["modelValue","items","disabled","onChange"])])]),hereApiKey:i(({item:e,showHint:l})=>[r(te,{modelValue:e.value,"onUpdate:modelValue":s=>e.value=s,type:v.value?"text":"password","append-icon":v.value?"fas fa-eye":"fas fa-eye-slash",label:d(u)(e.label),suffix:e.units,hint:l?e.hint:"","persistent-hint":l,rules:d(ce)(e.rules),"onClick:append":a[1]||(a[1]=s=>v.value=!v.value),onChange:s=>h(e)},null,8,["modelValue","onUpdate:modelValue","type","append-icon","label","suffix","hint","persistent-hint","rules","onChange"])]),default:i(()=>[r(X,null,{default:i(()=>[r(S,{variant:"outlined",color:"success",loading:_.value,onClick:P},{default:i(()=>[V(b(d(u)("Process")),1)]),_:1},8,["loading"]),z(r(S,{color:"grey",variant:"text",onClick:a[2]||(a[2]=e=>Z())},{default:i(()=>[V(b(d(u)("Abort")),1)]),_:1},512),[[O,_.value&&I.value==="RUNNING"]]),z(r(ee,null,{default:i(()=>[V(" ~ "+b(D.value>0?Math.ceil(D.value/60):d(u)("less than 1"))+b(d(u)(" minutes remaining")),1)]),_:1},512),[[O,_.value]])]),_:1})]),_:1},8,["modelValue"])]),_:1}))}}),_e=re(pe,[["__scopeId","data-v-911fd151"]]);export{_e as default};
