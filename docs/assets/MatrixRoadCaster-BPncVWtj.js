import{b_ as X,b$ as Q,u as y,aq as f,c0 as V,_ as $,a7 as ee,r as m,e as g,p as te,w as ae,g as c,h as k,i as s,j as r,X as q,L as U,ab as H,x as d,y as u,v as D,U as ne,H as se,q as v,F as R,E,Z as F,N as re,a2 as oe,G as A,z as M,A as S,ad as ie,a3 as le,V as O,an as ue,l as de,ar as ce,Y as he}from"./index-lvKiiy4D.js";const me=e=>e,ge=X("runMRC",{state:()=>({stateMachineArn:"arn:aws:states:ca-central-1:142023388927:stateMachine:quetzal-matrixroadcaster-api",bucket:"quetzal-api-bucket",callID:"",status:"",timer:0,running:!1,executionArn:"",error:!1,errorMessage:"",parameters:{callID:"test",num_zones:100,train_size:100,date_time:"2022-12-13T08:00:21-04:00",ff_time_col:"time",max_speed:100,num_cores:1,num_random_od:1,create_zone:!0,hereApiKey:""}}),actions:{cleanRun(){this.running=!1,this.executionArn="",this.error=!1},setCallID(){this.callID=Q.v4()},setParameters(e){this.parameters=e},terminateExecution(e){this.running=!1,this.error=!0,this.errorMessage=e,this.executionArn=""},changeRunning(e){this.running=e},getApproxTimer(e){const n=this.parameters.num_zones,o=this.parameters.train_size,t=this.parameters.num_random_od;this.timer=Math.min(n,o)*1.8+e*.002+15,this.timer+=10*t},succeedExecution(){this.running=!1,this.executionArn="",y().changeNotification({text:me("Matrix Road Caster executed successfully!"),autoClose:!1,color:"success"})},async startExecution(e){this.getApproxTimer(e.rlinks.features.length),this.setParameters(e.parameters),console.log("exporting roads to s3"),this.error=!1,this.running=!0;try{await f.putObject(this.bucket,this.callID.concat("/road_links.geojson"),JSON.stringify(e.rlinks)),await f.putObject(this.bucket,this.callID.concat("/road_nodes.geojson"),JSON.stringify(e.rnodes))}catch(o){y().changeAlert(o)}let n={input:JSON.stringify(this.parameters),name:this.callID,stateMachineArn:this.stateMachineArn};V.client.post("",n=JSON.stringify(n)).then(o=>{this.executionArn=o.data.executionArn,this.pollExecution()}).catch(o=>{y().changeAlert(o),this.running=!1,this.status="FAILED"})},pollExecution(){const e=setInterval(()=>{let n={executionArn:this.executionArn};this.timer=this.timer-2,V.client.post("/describe",n=JSON.stringify(n)).then(o=>{this.status=o.data.status,console.log(this.status),this.status==="SUCCEEDED"?(this.succeedExecution(),clearInterval(e)):["FAILED","TIMED_OUT","ABORTED"].includes(this.status)&&(this.terminateExecution(JSON.parse(o.data.cause)),clearInterval(e))}).catch(o=>{y().changeAlert(o)})},2e3)},stopExecution(){let e={executionArn:this.executionArn};V.client.post("/abort",e=JSON.stringify(e)).then(n=>{this.terminateExecution(n.data)}).catch(n=>{y().changeAlert(n)})}}}),_=e=>e,fe={name:"MatrixRoadCaster",components:{},setup(){const e=ge(),n=ee(),o=y(),t=m([]),C=m(!1),N=m(!1),a=m(!0),b=m(!1),i=m([{name:"num_zones",text:"number of zones",value:null,type:"Number",units:"",hint:"number of zones. road nodes will be aggregate to form centroids",rules:["required","largerThanZero"]},{name:"train_size",text:"number of OD (api call)",value:null,type:"Number",units:"",hint:"number of OD to get from the API, the rest will be interpolated with ML",rules:["required","largerThanZero"]},{name:"date_time",text:"date Time",value:null,type:"String",units:"",hint:"DateTime in the past. (YYYY-MM-DDTHH:MM:SS(UTC-timezone) (-04:00 for montreal))",rules:["required","dateTimeRule"]},{name:"ff_time_col",text:"freeflow time on roads",value:null,items:n.rlineAttributes,type:"String",units:"",hint:"road links time (link length / speed) to use as a first approximation. this is the freeflow speed, or speed limit",rules:["required"]},{name:"max_speed",text:"max speed on road",value:null,type:"Number",units:"",hint:"Maximum allowed speed on a road. applying an OD matrix on the road network could result il unrealistic speed if not used.",rules:["required","largerThanZero"]},{name:"num_random_od",text:"number of OD to plot",value:null,type:"Number",units:"",hint:"number of OD calibration plot to produce. those are random OD.",rules:["required","largerThanZero"]},{name:"hereApiKey",text:"HERE api key",value:null,type:"password",units:"",hint:"HERE api key to download a set of OD",rules:["required"]}]),w=g(()=>e.bucket),p=g(()=>e.callID),P=g(()=>e.timer),T=g(()=>e.status),j=g(()=>e.running),L=g(()=>e.error),J=g(()=>e.errorMessage);te(()=>{const l=e.parameters;i.value.forEach(h=>h.value=l[h.name]),p.value&&z()}),ae(T,l=>{l==="SUCCEEDED"&&z()});async function Z(l){if(!(await l).valid)return;e.setCallID();const x={callID:p.value};i.value.forEach(I=>{x[I.name]=I.value}),e.startExecution({rlinks:n.rlinks,rnodes:n.rnodes,parameters:x})}function B(){e.stopExecution()}async function G(){N.value=!0;const l=await f.readJson(w.value,p.value.concat("/road_links.geojson"));n.loadrLinks(l);const h=await f.readJson(w.value,p.value.concat("/road_nodes.geojson"));n.loadrNodes(h),N.value=!1,o.changeNotification({text:_("Road links applied!"),autoClose:!0,color:"success"})}async function z(){const h=(await f.listFiles(w.value,p.value+"/")).filter(x=>x.endsWith(".png"));for(const x of h){const I=await f.getImagesURL(w.value,x);t.value.push(I)}}async function Y(){C.value=!0,await f.downloadFolder(w.value,p.value.concat("/")),C.value=!1}const W=m(!1),K=/^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$/;return{imgs:t,exporting:C,applying:N,validForm:a,showP:b,parameters:i,showHint:W,rules:{required:l=>!!l||_("Required"),largerThanZero:l=>l>0||_("should be larger than 0"),nonNegative:l=>l>=0||_("should be larger or equal to 0"),dateTimeRule:l=>K.test(l)||_("invalid date time")},timer:P,importStatus:T,running:j,error:L,errorMessage:J,download:Y,run:Z,stopRun:B,ApplyResults:G}}};function pe(e,n,o,t,C,N){return c(),k(he,{class:"ma-0 pa-2 background"},{default:s(()=>[r(q,null,{default:s(()=>[r(U,{class:"card"},{default:s(()=>[r(H,{class:"subtitle"},{default:s(()=>[d(u(e.$gettext("ML Matrix Road Caster")),1)]),_:1}),D("p",null,u(e.$gettext("1) Find n zones centroids using a Kmean clustering on the nodes")),1),D("p",null,u(e.$gettext("2) Call the Here Matrix API on random OD ( around 1% is sufficient )")),1),D("p",null,u(e.$gettext("3) Interpolate every other OD time with an hybrid Machine learning model")),1),D("p",null,u(e.$gettext("4) ajust the speed on the road network to match the routing time with the OD time using an iterative algorithm")),1),r(ne,{"validate-on":"submit lazy",onSubmit:se(t.run,["prevent"])},{default:s(()=>[(c(!0),v(R,null,E(t.parameters,(a,b)=>(c(),v("div",{key:b},[a.type==="password"?(c(),k(F,{key:0,modelValue:a.value,"onUpdate:modelValue":i=>a.value=i,type:t.showP?"text":"password","append-icon":t.showP?"fas fa-eye":"fas fa-eye-slash",label:e.$gettext(a.text),suffix:a.units,hint:t.showHint?e.$gettext(a.hint):"","persistent-hint":t.showHint,rules:a.rules.map(i=>t.rules[i]),required:"","onClick:append":n[0]||(n[0]=i=>t.showP=!t.showP)},null,8,["modelValue","onUpdate:modelValue","type","append-icon","label","suffix","hint","persistent-hint","rules"])):typeof a.items>"u"?(c(),k(F,{key:1,modelValue:a.value,"onUpdate:modelValue":i=>a.value=i,type:a.type,label:e.$gettext(a.text),suffix:a.units,hint:t.showHint?e.$gettext(a.hint):"","persistent-hint":t.showHint,rules:a.rules.map(i=>t.rules[i]),required:"",onWheel:()=>{}},null,8,["modelValue","onUpdate:modelValue","type","label","suffix","hint","persistent-hint","rules"])):(c(),k(re,{key:2,modelValue:a.value,"onUpdate:modelValue":i=>a.value=i,type:a.type,items:a.items.sort(),label:e.$gettext(a.text),suffix:a.units,hint:t.showHint?e.$gettext(a.hint):"","persistent-hint":t.showHint,rules:a.rules.map(i=>t.rules[i]),required:"",onWheel:()=>{}},null,8,["modelValue","onUpdate:modelValue","type","items","label","suffix","hint","persistent-hint","rules"]))]))),128)),r(oe,null,{default:s(()=>[r(A,{color:"success",variant:"elevated",loading:t.running||t.importStatus==="RUNNING",disabled:t.running||t.importStatus==="RUNNING"||!t.validForm,type:"submit","prepend-icon":" fa-solid fa-play"},{default:s(()=>[d(u(e.$gettext("Run")),1)]),_:1},8,["loading","disabled"]),M(r(A,{color:"grey",variant:"text",onClick:n[1]||(n[1]=a=>t.stopRun())},{default:s(()=>[d(u(e.$gettext("Abort")),1)]),_:1},512),[[S,t.importStatus=="RUNNING"]]),M(r(ie,null,{default:s(()=>[d(" ~ "+u(t.timer>0?Math.ceil(t.timer/60):e.$gettext("less than 1"))+u(e.$gettext(" minutes remaining")),1)]),_:1},512),[[S,t.importStatus=="RUNNING"]]),r(le),r(A,{size:"small",onClick:n[2]||(n[2]=a=>t.showHint=!t.showHint)},{default:s(()=>[r(O,null,{default:s(()=>[d("far fa-question-circle small")]),_:1})]),_:1})]),_:1})]),_:1},8,["onSubmit"])]),_:1})]),_:1}),r(q,null,{default:s(()=>[r(U,{class:"card2"},{default:s(()=>[r(H,{class:"subtitle"},{default:s(()=>[d(u(e.$gettext("Calibration Results")),1)]),_:1}),M(r(A,{loading:t.applying,disabled:t.applying,onClick:t.ApplyResults},{default:s(()=>[r(O,{size:"small",style:{"margin-right":"10px"}},{default:s(()=>[d(" fa-solid fa-upload ")]),_:1}),d(" "+u(e.$gettext("Apply Road links to project")),1)]),_:1},8,["loading","disabled","onClick"]),[[S,t.imgs.length>0]]),M(r(A,{loading:t.exporting,disabled:t.exporting,onClick:t.download},{default:s(()=>[r(O,{size:"small",style:{"margin-right":"10px"}},{default:s(()=>[d(" fa-solid fa-download ")]),_:1}),d(" "+u(e.$gettext("Download")),1)]),_:1},8,["loading","disabled","onClick"]),[[S,t.imgs.length>0]]),t.error?(c(),k(ue,{key:0,density:"compact",variant:"outlined",text:"",type:"error"},{default:s(()=>[d(u(e.$gettext("Service ended with an execution error or have been aborted.             Please retry. If the problem persist, contact us."))+" ",1),(c(!0),v(R,null,E(Object.keys(t.errorMessage),a=>(c(),v("p",{key:a},[D("b",null,u(a)+": ",1),d(u(t.errorMessage[a]),1)]))),128))]),_:1})):de("",!0),(c(!0),v(R,null,E(t.imgs,(a,b)=>(c(),v("div",{key:b,class:"gallery"},[r(ce,{src:a,alt:"image",cover:""},null,8,["src"])]))),128))]),_:1})]),_:1})]),_:1})}const ye=$(fe,[["render",pe],["__scopeId","data-v-e2696483"]]);export{ye as default};
