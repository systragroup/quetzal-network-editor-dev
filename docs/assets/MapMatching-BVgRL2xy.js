import{bG as Z,u as z,r as g,bH as ee,w as te,a as O,aa as H,az as u,ab as K,br as se,bb as ae,c as l,d as ne,o as oe,f as q,g as re,j as n,i as f,ah as le,B as i,C as y,k as _,h as ie,aV as G,p as ue,a9 as D,A as S,ai as ce,a8 as de,K as W,D as L,E as $,aj as pe,Q as me,am as fe,_ as ve}from"./index-LWYT14Cy.js";import{W as he,S as be}from"./SimpleForm-BFmlfd4w.js";const ge=Z("runMapMatching",()=>{const{$gettext:B}=z(),c=g("arn:aws:states:ca-central-1:142023388927:stateMachine:quetzal-mapmatching-api"),e=g("quetzal-api-bucket"),r=g("");function b(){r.value=se()}const I=g(0),{error:T,running:v,errorMessage:A,startExecution:V,status:w,stopExecution:j}=ee(c.value),d=g({SIGMA:4.02,BETA:3,POWER:2,DIFF:!0,ptMetrics:!0,keepTime:!0,exclusions:[]});function k(s){s.forEach(o=>d.value[o.key]=o.value)}te(w,async s=>{s==="SUCCEEDED"&&(v.value=!0,await M(),await x(),v.value=!1,w.value="",O().changeNotification({text:B("PT network successfully Mapmatched. See results pages for more details."),autoClose:!1,color:"success"}))});async function M(){const s=H();s.$reset();const o=await u.readJson(e.value,r.value.concat("/links_final.geojson")),p=await u.readJson(e.value,r.value.concat("/nodes_final.geojson"));if(s.loadPTFiles([{path:"inputs/pt/links.geojson",content:o},{path:"inputs/pt/nodes.geojson",content:p}],"local"),d.value.ptMetrics){const h=K();h.$reset();const E=await u.readJson(e.value,r.value.concat("/road_links.geojson")),C=await u.readJson(e.value,r.value.concat("/road_nodes.geojson"));h.loadRoadFiles([{path:"inputs/road/links.geojson",content:E},{path:"inputs/road/nodes.geojson",content:C}])}}async function x(){let s=await u.listFiles(e.value,r.value);s=s.filter(p=>p.endsWith(".csv"));const o=[];for(const p of s){let h=p.split("/").slice(-1);h="microservices/"+h;const E=await u.readBytes(e.value,p);o.push({path:h,content:E})}o.length>0&&O().loadOtherFiles(o)}return{stateMachineArn:c,bucket:e,callID:r,status:w,running:v,error:T,errorMessage:A,parameters:d,timer:I,saveParams:k,setCallID:b,startExecution:V,stopExecution:j,getCSVs:x}}),ke={class:"background"},ye=ae({__name:"MapMatching",setup(B){const{$gettext:c}=z(),e=ge(),r=K(),b=H(),I=l(()=>r.rlinksIsEmpty),T=l(()=>b.linksIsEmpty),v=l(()=>e.running),A=l(()=>e.status),V=l(()=>e.error),w=l(()=>e.errorMessage),j=l(()=>e.timer),d=l(()=>e.callID),k=l(()=>e.bucket),M=l(()=>e.parameters),x=l(()=>Array.from(new Set(b.links.features.map(a=>a.properties.route_type)))),s=g([{key:"exclusions",label:"route_type exclusion",value:null,items:x.value,type:"select",multiple:!0,hint:"routes type to not mapmatch (ex subway are not on roads)"},{key:"SIGMA",label:"Sigma",value:null,type:"number",units:"meters",rules:["required"],hint:"emission probablity constant. the bigger it     is the further away a stops can be from roads."},{key:"BETA",label:"beta",value:null,type:"number",units:"meters",rules:["required"],hint:"transition probablity constant. The smaller the smaller      the difference between the as-the-crow and routing distance can be (if use difference is true)"},{key:"POWER",label:"power",value:null,type:"number",rules:["required"],hint:"Power used in the Emission Probability"},{key:"DIFF",label:"Use difference",value:null,type:"boolean",units:"bool",rules:["required"],hint:"If False, act_dist is ignore in the transition probability. This change the emission to only     consider the shortest path between nodes. "},{key:"ptMetrics",label:"Add indicators on road links",value:null,type:"boolean",units:"bool",hint:"Add PT metrics to road links (ex: number of trips & number of lines)"},{key:"keepTime",label:"keep time",value:!0,type:"boolean",units:"bool",hint:"if true. keep time and calculate speed. if false. keep speed and calcule time"}]);ne(()=>{M.value.exclusions=M.value.exclusions.filter(a=>x.value.includes(a)),s.value.forEach(a=>a.value=M.value[a.key])}),oe(()=>{e.saveParams(s.value)});const o=g();async function p(){var P;if(!await o.value.validate())return;const t=fe();e.running=!0,e.setCallID(),h(),await E();const m=e.parameters,N={scenario_path_S3:d.value,launcher_arg:{training_folder:"/tmp",params:m},metadata:{user_email:(P=t.cognitoInfo)==null?void 0:P.email}};e.startExecution(N)}function h(){let t=b.tripList.length/6;function m(P,Q=20,X=[12,8,4,2,1]){let Y=Math.floor(P/Q),F=100,J=12;for(let R of X){let U=Math.abs(Y-R);U<F&&(F=U,J=R)}return J}const N=m(t,20,[12,8,4,2,1]);e.timer=t/N+20+20+10}async function E(){const a=[];a.push(u.putObject(k.value,d.value.concat("/road_links.geojson"),JSON.stringify(r.rlinks))),a.push(u.putObject(k.value,d.value.concat("/road_nodes.geojson"),JSON.stringify(r.rnodes))),a.push(u.putObject(k.value,d.value.concat("/links.geojson"),JSON.stringify(b.links))),a.push(u.putObject(k.value,d.value.concat("/nodes.geojson"),JSON.stringify(b.nodes)));try{await Promise.all(a)}catch(t){console.log("err"),O().changeAlert(t)}}function C(){e.stopExecution()}return(a,t)=>(q(),re("section",ke,[n(me,{class:"card"},{default:f(()=>[n(le,null,{default:f(()=>[i(y(_(c)("Match PT network on road network")),1)]),_:1}),I.value||T.value?(q(),ie(G,{key:0},{default:f(()=>[i(y(_(c)("need a road and a PT network")),1)]),_:1})):ue("",!0),n(D),t[4]||(t[4]=S("p",{class:"pl-4"},[i(" Emission = 0.5 x ( dist_to_road / SIGMA ) ^ POWER "),S("br"),i(" Transition = 1 / BETA x | dijkstra_dist - acf_dist* | "),S("br"),i(" Probablity = Emission + Transition "),S("br"),i(" * If use difference is true. Else acf_dist = 0 "),S("br")],-1)),n(D),n(G,null,{default:f(()=>t[3]||(t[3]=[i(" Hidden Markov Map Matching Through Noise and Sparseness "),S("br",null,null,-1),i(" Paul Newson and John Krumm 2009 ")])),_:1}),n(D),n(he,{modelValue:V.value,"onUpdate:modelValue":t[0]||(t[0]=m=>V.value=m),messages:w.value},null,8,["modelValue","messages"]),n(ce),n(be,{ref_key:"formRef",ref:o,modelValue:s.value,"onUpdate:modelValue":t[2]||(t[2]=m=>s.value=m)},{default:f(()=>[n(de,null,{default:f(()=>[n(W,{variant:"outlined",color:"success",loading:v.value,disabled:v.value||I.value||T.value,onClick:p},{default:f(()=>[i(y(_(c)("Process")),1)]),_:1},8,["loading","disabled"]),L(n(W,{color:"grey",variant:"text",onClick:t[1]||(t[1]=m=>C())},{default:f(()=>[i(y(_(c)("Abort")),1)]),_:1},512),[[$,v.value&&A.value==="RUNNING"]]),L(n(pe,null,{default:f(()=>[i(" ~ "+y(j.value>0?Math.ceil(j.value/60):_(c)("less than 1"))+y(_(c)(" minutes remaining")),1)]),_:1},512),[[$,v.value]])]),_:1})]),_:1},8,["modelValue"])]),_:1})]))}}),we=ve(ye,[["__scopeId","data-v-550a7428"]]);export{we as default};
