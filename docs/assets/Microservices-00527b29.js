import{ax as ye,u as w,ar as C,ay as V,a3 as ve,az as Le,_ as R,c as Pe,r as D,o as m,f as x,M as Ke,a as $e,b as Ye,a4 as ie,a7 as g,j as y,aA as pe,aB as Qe,aa as Xe,aC as Ie,aD as et,aE as tt,aF as st,w as l,g as n,A as b,i as A,a8 as Ue,aG as _e,k as v,ab as N,n as h,t as u,Z as U,aH as W,F as T,z as O,l as f,ap as le,ac as at,Y as Q,G as de,aI as rt,aJ as Re,E as L,$ as K,a9 as xe,S as X,s as nt,aK as ot,x as it,aL as lt,V as G,aM as dt,aN as qe,aO as He,aP as oe,aQ as ee,aR as we,aS as fe,aT as ct,at as ut,aU as De,J as ht,al as mt,O as pt,B as ft,p as ae,v as re,ad as gt,Q as Fe,as as yt,R as vt,an as Me,aV as _t,ao as $}from"./index-39c472b2.js";var ge={exports:{}},Ce=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||typeof msCrypto<"u"&&typeof window.msCrypto.getRandomValues=="function"&&msCrypto.getRandomValues.bind(msCrypto);if(Ce){var Te=new Uint8Array(16);ge.exports=function(){return Ce(Te),Te}}else{var Oe=new Array(16);ge.exports=function(){for(var s=0,a;s<16;s++)s&3||(a=Math.random()*4294967296),Oe[s]=a>>>((s&3)<<3)&255;return Oe}}var ze=ge.exports,je=[];for(var ne=0;ne<256;++ne)je[ne]=(ne+256).toString(16).substr(1);function xt(e,s){var a=s||0,t=je;return[t[e[a++]],t[e[a++]],t[e[a++]],t[e[a++]],"-",t[e[a++]],t[e[a++]],"-",t[e[a++]],t[e[a++]],"-",t[e[a++]],t[e[a++]],"-",t[e[a++]],t[e[a++]],t[e[a++]],t[e[a++]],t[e[a++]],t[e[a++]]].join("")}var Be=xt,wt=ze,bt=Be,Ee,ce,ue=0,he=0;function St(e,s,a){var t=s&&a||0,i=s||[];e=e||{};var d=e.node||Ee,o=e.clockseq!==void 0?e.clockseq:ce;if(d==null||o==null){var r=wt();d==null&&(d=Ee=[r[0]|1,r[1],r[2],r[3],r[4],r[5]]),o==null&&(o=ce=(r[6]<<8|r[7])&16383)}var c=e.msecs!==void 0?e.msecs:new Date().getTime(),p=e.nsecs!==void 0?e.nsecs:he+1,_=c-ue+(p-he)/1e4;if(_<0&&e.clockseq===void 0&&(o=o+1&16383),(_<0||c>ue)&&e.nsecs===void 0&&(p=0),p>=1e4)throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");ue=c,he=p,ce=o,c+=122192928e5;var k=((c&268435455)*1e4+p)%4294967296;i[t++]=k>>>24&255,i[t++]=k>>>16&255,i[t++]=k>>>8&255,i[t++]=k&255;var I=c/4294967296*1e4&268435455;i[t++]=I>>>8&255,i[t++]=I&255,i[t++]=I>>>24&15|16,i[t++]=I>>>16&255,i[t++]=o>>>8|128,i[t++]=o&255;for(var F=0;F<6;++F)i[t+F]=d[F];return s||bt(i)}var kt=St,It=ze,Dt=Be;function Ft(e,s,a){var t=s&&a||0;typeof e=="string"&&(s=e==="binary"?new Array(16):null,e=null),e=e||{};var i=e.random||(e.rng||It)();if(i[6]=i[6]&15|64,i[8]=i[8]&63|128,s)for(var d=0;d<16;++d)s[t+d]=i[d];return s||Dt(i)}var Mt=Ft,Ct=kt,Je=Mt,be=Je;be.v1=Ct;be.v4=Je;var Z=be;const Tt=e=>e,Se=ye("runGTFS",{state:()=>({stateMachineArn:"arn:aws:states:ca-central-1:142023388927:stateMachine:quetzal-gtfs-api",bucket:"quetzal-api-bucket",callID:Z.v4(),status:"",running:!1,executionArn:"",error:!1,errorMessage:"",UploadedGTFS:[],selectedGTFS:[],parameters:{start_time:"6:00:00",end_time:"8:59:00",day:"tuesday"},widthDict:{bus:3,subway:8,rail:6,tram:5}}),actions:{cleanRun(){this.running=!1,this.executionArn="",this.error=!1,this.UploadedGTFS=[],this.selectedGTFS=[],this.callID=Z.v4()},setCallID(){this.callID=Z.v4()},terminateExecution(e){this.running=!1,this.error=!0,this.errorMessage=e,this.executionArn=""},changeRunning(e){this.running=e},saveParams(e){e.forEach(s=>this.parameters[s.name]=s.value)},saveSelectedGTFS(e){this.selectedGTFS=e},updateProgress(e){this.UploadedGTFS.filter(s=>s.name===e.name)[0].progress=e.progress},succeedExecution(){const e=w();this.running=!1,this.executionArn="",e.changeNotification({text:Tt("gtfs imported successfully!"),autoClose:!1,color:"success"})},async addGTFS(e){this.UploadedGTFS.map(t=>t==null?void 0:t.name).includes(e.info.name)||this.UploadedGTFS.push(e.info);const a=C.uploadObject(this.bucket,this.callID+"/"+e.info.name,e.content);a.on("httpUploadProgress",t=>{const i=Math.round(t.loaded/t.total*100);this.updateProgress({name:e.info.name,progress:i})}),a.done()},startExecution(e){this.running=!0,this.error=!1;let a={input:JSON.stringify({callID:this.callID,files:e.files,start_time:e.start_time,end_time:e.end_time,dates:e.dates}),name:Z.v4(),stateMachineArn:this.stateMachineArn};V.client.post("",a=JSON.stringify(a)).then(t=>{this.executionArn=t.data.executionArn,this.pollExecution()}).catch(t=>{w().changeAlert(t),this.running=!1,this.status="FAILED"})},async pollExecution(){const e=setInterval(()=>{let s={executionArn:this.executionArn};V.client.post("/describe",s=JSON.stringify(s)).then(async a=>{this.status=a.data.status,console.log(this.status),this.status==="SUCCEEDED"?(clearInterval(e),await this.downloadOSMFromS3(),this.succeedExecution()):["FAILED","TIMED_OUT","ABORTED"].includes(this.status)&&(this.terminateExecution(JSON.parse(a.data.cause)),clearInterval(e))}).catch(a=>{w().changeAlert(a)})},2e3)},stopExecution(){const e=w();let s={executionArn:this.executionArn};V.client.post("/abort",s=JSON.stringify(s)).then(a=>{this.terminateExecution(a.data)}).catch(a=>{e.changeAlert(a)})},async downloadOSMFromS3(){const e=ve();function s(i,d){return Object.keys(d).forEach(o=>{i.features.filter(r=>r.properties.route_type===o).forEach(r=>{r.properties.route_width=d[o]})}),i}let a=await C.readJson(this.bucket,this.callID.concat("/links.geojson"));a.features.length>0&&(a=s(a,this.widthDict)),e.appendNewLinks(a);const t=await C.readJson(this.bucket,this.callID.concat("/nodes.geojson"));e.appendNewNodes(t),Le.push("/Home").catch(()=>{})}},getters:{}}),Ot=["motorway","motorway_link","trunk","trunk_link","primary","primary_link","secondary","secondary_link","tertiary","tertiary_link","residential","living_street","service","unclassified","cycleway","pedestrian"],Et={motorway:"E892A2",motorway_link:"E892A2",trunk:"E892A2",trunk_link:"E892A2",primary:"FCD6A4",primary_link:"FCD6A4",secondary:"F7F9BE",secondary_link:"F7F9BE",tertiary:"808080",tertiary_link:"808080",residential:"808080",living_street:"808080",service:"808080",unclassified:"808080",cycleway:"1D8621",pedestrian:"1D8621"},Gt={motorway:4,motorway_link:4,trunk:4,trunk_link:4,primary:4,primary_link:4,secondary:3,secondary_link:3,tertiary:2,tertiary_link:2,residential:2,living_street:2,service:2,unclassified:2,cycleway:2,pedestrian:2},Vt={name:"NodesLayer",components:{MglGeojsonLayer:Pe},props:["map","nodes","active"],event:["move","rightClick"],data(){return{hoveredStateId:null,keepHovering:!1,dragNode:!1}},computed:{},watch:{},created(){},methods:{onCursor(e){if(this.active&&this.hoveredStateId===null){this.map.getCanvas().style.cursor="pointer";const s=[...new Set(e.mapboxEvent.features.map(a=>a.id))];this.hoveredStateId={layerId:e.layerId,id:s},this.map.setFeatureState({source:this.hoveredStateId.layerId,id:this.hoveredStateId.id[0]},{hover:!0})}},offCursor(e){this.active&&this.hoveredStateId!==null&&(this.keepHovering?this.dragNode=!0:(this.map.getCanvas().style.cursor="",this.map.setFeatureState({source:this.hoveredStateId.layerId,id:this.hoveredStateId.id[0]},{hover:!1}),this.hoveredStateId=null))},rightClick(e){var s;if(!this.dragNode&&((s=this.hoveredStateId)==null?void 0:s.layerId)==="nodes"){const t=this.map.querySourceFeatures(this.hoveredStateId.layerId).filter(d=>d.id===this.hoveredStateId.id[0])[0],i={selectedFeature:t};t&&this.$emit("rightClick",i)}},moveNode(e){var s,a;if(this.active&&((s=this.hoveredStateId)==null?void 0:s.layerId)==="nodes"&&e.mapboxEvent.originalEvent.button===0){e.mapboxEvent.preventDefault(),this.map.getCanvas().style.cursor="grab",this.keepHovering=!0;const t=this.map.querySourceFeatures(this.hoveredStateId.layerId);this.selectedFeature=t.filter(i=>i.id===this.hoveredStateId.id[0])[0],(a=this.selectedFeature)!=null&&a.properties&&(this.map.on("mousemove",this.onMove),this.map.on("mouseup",this.stopMovingNode))}},onMove(e){if(this.dragNode&&this.selectedFeature){const s={selectedFeature:this.selectedFeature,lngLat:Object.values(e.lngLat)};this.$emit("move",s)}},stopMovingNode(e){this.active&&e.originalEvent.button===0&&(this.map.getCanvas().style.cursor="pointer",this.map.off("mousemove",this.onMove),this.keepHovering=!1,this.dragNode=!1,this.map.getCanvas().style.cursor="",this.hoveredStateId&&this.map.setFeatureState({source:this.hoveredStateId.layerId,id:this.hoveredStateId.id[0]},{hover:!1}),this.hoveredStateId=null,this.map.off("mouseup",this.stopMovingNode))}}};function At(e,s,a,t,i,d){const o=D("MglGeojsonLayer");return m(),x(o,{"source-id":"nodes",source:{type:"geojson",data:a.nodes,buffer:0,promoteId:"index"},"layer-id":"nodes",layer:{interactive:!0,type:"circle",paint:{"circle-color":"#ffffff","circle-opacity":.5,"circle-radius":["case",["boolean",["feature-state","hover"],!1],10,5],"circle-blur":["case",["boolean",["feature-state","hover"],!1],.3,0],"circle-stroke-color":e.$vuetify.theme.current.colors.darkgrey,"circle-stroke-width":2}},onMouseover:d.onCursor,onMouseleave:d.offCursor,onMousedown:d.moveNode,onContextmenu:d.rightClick},null,8,["source","layer","onMouseover","onMouseleave","onMousedown","onContextmenu"])}const Nt=R(Vt,[["render",At]]);const me=e=>e,Lt="pk.eyJ1Ijoic2JvaXZpbiIsImEiOiJja3BlMm41cm4xa2QyMnZwZTBqdGx4bHI0In0.11oH2-B2g9J6LarDnoqQfQ",Pt={name:"MapSelector",events:["change"],components:{MglMap:Ke,MglNavigationControl:$e,MglScaleControl:Ye,MglGeojsonLayer:Pe,NodesLayer:Nt},setup(){const e=w(),s=ie(),a=Lt,t=g(!1),i=g(null),d=g({}),o=g(!1),r=y(()=>e.mapStyle),c=y(()=>s.rlinksIsEmpty),p=y(()=>s.rnodesHeader);return{store:e,mapIsLoaded:t,mapboxPublicKey:a,poly:i,nodes:d,freeForm:o,mapStyle:r,rlinksIsEmpty:c,nodesHeader:p}},watch:{mapStyle(){try{this.map.removeLayer("stroke")}catch{}}},beforeDestroy(){var s;const e=(s=this.map)==null?void 0:s.getCenter();e&&this.store.saveMapPosition({mapCenter:[e.lng,e.lat],mapZoom:this.map.getZoom()}),this.storesaveImportPoly({freeForm:this.freeForm,poly:this.poly});try{this.map.removeLayer("stroke")}catch{}},methods:{onMapLoaded(e){var s;e.map.dragRotate.disable(),this.map=e.map,this.map.on("dragend",this.getBounds),this.map.on("zoomend",this.getBounds),this.freeForm=!1,(s=this.store.importPoly)!=null&&s.freeForm?(this.poly=this.store.importPoly.poly,this.toggleFreeForm()):this.getBounds(),this.mapIsLoaded=!0},getBounds(){const e=this.map.getBounds(),s=pe([e._sw.lng,e._sw.lat,e._ne.lng,e._ne.lat]);this.poly=Qe(s,-.1*(e._ne.lat-e._sw.lat),{units:"degrees"}),this.poly.geometry.coordinates[0]=this.poly.geometry.coordinates[0].reverse();const a=[e._sw.lat,e._sw.lng,e._ne.lat,e._ne.lng];this.$emit("change",{style:"bbox",geometry:a})},toggleFreeForm(e){this.freeForm=!this.freeForm,this.freeForm?(this.map.off("dragend",this.getBounds),this.map.off("zoomend",this.getBounds),this.getNodes(),this.store.changeNotification({text:me("Click to add points. Right click de remove"),autoClose:!1})):(this.map.on("dragend",this.getBounds),this.map.on("zoomend",this.getBounds),this.getBounds(),this.store.changeNotification({text:"",autoClose:!0}))},onHover(){this.freeForm&&(this.map.getCanvas().style.cursor="pointer")},offHover(){this.freeForm&&(this.map.getCanvas().style.cursor="")},getNodes(){const e=Xe.cloneDeep(this.nodesHeader),s=this.poly.geometry.coordinates[0];s.slice(0,s.length-1).forEach((a,t)=>e.features.push(Ie(a,{index:et.generate(),coordinatesIndex:t}))),this.nodes=e,this.$emit("change",{style:"poly",geometry:this.poly.geometry.coordinates[0]})},moveNode(e){const s=e.selectedFeature.properties.coordinatesIndex,a=this.poly.geometry.coordinates[0];a[s]=e.lngLat,s===0&&(a[a.length-1]=e.lngLat),this.getNodes()},removeNode(e){const s=e.selectedFeature.properties.coordinatesIndex,a=this.poly.geometry.coordinates[0];a.length<=4?this.store.changeNotification({text:me("Cannot delete anymore"),autoClose:!0}):s===0?this.store.changeNotification({text:me("cannot delete first point of polygon"),autoClose:!0}):(this.poly.geometry.coordinates[0]=[...a.slice(0,s),...a.slice(s+1)],this.getNodes())},addNode(e){if(this.freeForm&&Object.keys(e).includes("mapboxEvent")){const s=this.poly.geometry.coordinates[0],a=e.mapboxEvent.lngLat,t=tt(s),i=Ie(Object.values(a)),o=st(t,i,{units:"kilometers"}).properties.index+1;s.splice(o,0,Object.values(a)),this.getNodes()}}}};function Ut(e,s,a,t,i,d){const o=D("MglScaleControl"),r=D("MglNavigationControl"),c=D("MglGeojsonLayer"),p=D("NodesLayer"),_=D("MglMap");return m(),x(_,{key:t.mapStyle,class:"map",center:t.store.mapCenter,zoom:t.store.mapZoom,"min-zoom":3,"access-token":t.mapboxPublicKey,"map-style":t.mapStyle,onLoad:d.onMapLoaded,onClick:d.addNode},{default:l(()=>[n(o,{position:"bottom-right"}),n(r,{position:"bottom-right"}),n(b,{class:"freeform-button",size:"small",icon:t.freeForm?"far fa-square":"fas fa-vector-square",onClick:d.toggleFreeForm},null,8,["icon","onClick"]),n(c,{"source-id":"polygon",source:{type:"geojson",data:t.poly,promoteId:"index"},"layer-id":"poly",layer:{interactive:!0,type:"fill",paint:{"fill-color":e.$vuetify.theme.current.colors.linksprimary,"fill-opacity":.3}},onMouseover:d.onHover,onMouseleave:d.offHover},null,8,["source","layer","onMouseover","onMouseleave"]),n(c,{"source-id":"polygon",type:"line",source:"polygon","layer-id":"stroke",layer:{type:"line",paint:{"line-color":e.$vuetify.theme.current.colors.linksprimary,"line-width":3}}},null,8,["layer"]),t.mapIsLoaded?(m(),x(p,{key:0,map:e.map,nodes:t.freeForm?t.nodes:t.nodesHeader,active:t.freeForm,onMove:d.moveNode,onRightClick:d.removeNode},null,8,["map","nodes","active","onMove","onRightClick"])):A("",!0)]),_:1},8,["center","zoom","access-token","map-style","onLoad","onClick"])}const Ze=R(Pt,[["render",Ut],["__scopeId","data-v-08f93d14"]]),Rt=e=>e,qt=ye("runOSM",{state:()=>({stateMachineArn:"arn:aws:states:ca-central-1:142023388927:stateMachine:quetzal-osm-api",bucket:"quetzal-api-bucket",callID:"",status:"",timer:0,running:!1,executionArn:"",error:!1,errorMessage:"",tags:["highway","maxspeed","lanes","name","oneway","surface"],parameters:{extendedCycleway:!1,highway:["motorway","motorway_link","trunk","trunk_link","primary","primary_link"]},colorDict:Et,widthDict:Gt}),actions:{cleanRun(){this.running=!1,this.executionArn="",this.error=!1},setCallID(){this.callID=Z.v4()},terminateExecution(e){this.running=!1,this.error=!0,this.errorMessage=e,this.executionArn=""},changeRunning(e){this.running=e},saveParams(e){Object.keys(e).forEach(s=>this.parameters[s]=e[s])},succeedExecution(){this.running=!1,this.executionArn="",w().changeNotification({text:Rt("OSM network imported successfully!"),autoClose:!1,color:"success"})},startExecution(e){this.running=!0,this.error=!1;let s="";e.method==="bbox"?s=JSON.stringify({bbox:e.coords,highway:this.parameters.highway,callID:this.callID,elevation:!0,extended_cycleway:this.parameters.extendedCycleway}):s=JSON.stringify({poly:e.coords,highway:this.parameters.highway,callID:this.callID,elevation:!0,extended_cycleway:this.parameters.extendedCycleway});let a={input:s,name:this.callID,stateMachineArn:this.stateMachineArn};V.client.post("",a=JSON.stringify(a)).then(t=>{this.executionArn=t.data.executionArn,this.pollExecution()}).catch(t=>{w().changeAlert(t),this.running=!1,this.status="FAILED"})},async pollExecution(){const e=setInterval(()=>{let s={executionArn:this.executionArn};this.timer=this.timer-2,V.client.post("/describe",s=JSON.stringify(s)).then(async a=>{this.status=a.data.status,console.log(this.status),this.status==="SUCCEEDED"?(clearInterval(e),await this.downloadOSMFromS3(),this.succeedExecution()):["FAILED","TIMED_OUT","ABORTED"].includes(this.status)&&(this.terminateExecution(JSON.parse(a.data.cause)),clearInterval(e))}).catch(a=>{w().changeAlert(a)})},2e3)},stopExecution(){let e={executionArn:this.executionArn};V.client.post("/abort",e=JSON.stringify(e)).then(s=>{this.terminateExecution(s.data)}).catch(s=>{w().changeAlert(s)})},async downloadOSMFromS3(){function e(i,d,o){return Object.keys(d).forEach(r=>{i.features.filter(c=>c.properties.highway===r).forEach(c=>{c.properties.route_width=o[r],c.properties.route_color=d[r]})}),i}let s=await C.readJson(this.bucket,this.callID.concat("/links.geojson"));s=e(s,this.colorDict,this.widthDict);const a=ie();a.appendNewrLinks(s);const t=await C.readJson(this.bucket,this.callID.concat("/nodes.geojson"));a.appendNewrNodes(t),Le.push("/Home").catch(()=>{})}},getters:{highway:e=>e.parameters.highway,extendedCycleway:e=>e.parameters.extendedCycleway}});const Ht={name:"OSMImporter",components:{MapSelector:Ze},setup(){const e=w(),s=qt(),a=ie(),t=g(!1),i=g(null),d=g({}),o=g(null),r=g(!1),c=g(Ot),p=y(()=>a.rlinksIsEmpty),_=y(()=>s.highway),k=y(()=>s.extendedCycleway),I=y(()=>s.callID),F=y(()=>s.running),q=y(()=>s.error),H=y(()=>s.errorMessage);function z(M){i.value=M}function P(){p.value?(s.saveParams({highway:o.value,extendedCycleway:r.value}),s.setCallID(),s.startExecution({coords:i.value.geometry,method:i.value.style})):t.value=!0}function E(){e.initrLinks(),t.value=!1,P()}return Ue(()=>{o.value=_.value,r.value=k.value}),_e(()=>{s.saveParams({highway:o.value,extendedCycleway:r.value})}),{showOverwriteDialog:t,poly:i,nodes:d,selectedHighway:o,selectedExtended:r,highwayList:c,rlinksIsEmpty:p,highway:_,extendedCycleway:k,callID:I,running:F,error:q,errorMessage:H,getBBOX:z,importOSM:P,applyOverwriteDialog:E}}},zt={class:"background"},jt={key:1,class:"text-grey text-caption align-self-center"};function Bt(e,s,a,t,i,d){const o=D("MapSelector");return m(),v("section",zt,[n(L,{class:"card"},{default:l(()=>[n(N,null,{default:l(()=>[h(u(e.$gettext("Import OSM network in bounding box")),1)]),_:1}),n(U),n(W,null,{default:l(()=>[t.error?(m(),x(le,{key:0,density:"compact",width:"50rem",variant:"outlined",text:"",type:"error"},{default:l(()=>[h(u(e.$gettext("There as been an error while importing OSM network.             Please try again. If the problem persist, contact us."))+" ",1),(m(!0),v(T,null,O(Object.keys(t.errorMessage),r=>(m(),v("p",{key:r},[f("b",null,u(r)+": ",1),h(u(t.errorMessage[r]),1)]))),128))]),_:1})):A("",!0)]),_:1}),n(o,{onChange:t.getBBOX},null,8,["onChange"]),n(at),n(Q,null,{default:l(()=>[n(U),n(de,{modelValue:t.selectedHighway,"onUpdate:modelValue":s[0]||(s[0]=r=>t.selectedHighway=r),class:"select",items:t.highwayList,label:"Select Item",variant:"underlined",multiple:""},{selection:l(({item:r,index:c})=>[c<2?(m(),x(rt,{key:0},{default:l(()=>[f("span",null,u(r.title),1)]),_:2},1024)):A("",!0),c===2?(m(),v("span",jt," (+"+u(t.selectedHighway.length-2)+" others) ",1)):A("",!0)]),_:1},8,["modelValue","items"]),n(U),n(Re,{modelValue:t.selectedExtended,"onUpdate:modelValue":s[1]||(s[1]=r=>t.selectedExtended=r),label:"Extended cycleway"},null,8,["modelValue"]),n(U),n(b,{variant:"outlined",color:"success",loading:t.running,disabled:t.running,onClick:t.importOSM},{default:l(()=>[h(u(e.$gettext("Download")),1)]),_:1},8,["loading","disabled","onClick"])]),_:1})]),_:1}),n(xe,{modelValue:t.showOverwriteDialog,"onUpdate:modelValue":s[3]||(s[3]=r=>t.showOverwriteDialog=r),persistent:"","max-width":"500",onKeydown:[K(t.applyOverwriteDialog,["enter"]),s[4]||(s[4]=K(r=>t.showOverwriteDialog=!1,["esc"]))]},{default:l(()=>[n(L,null,{default:l(()=>[n(N,{class:"text-h5"},{default:l(()=>[h(u(e.$gettext("Overwrite current road network ?")),1)]),_:1}),n(Q,null,{default:l(()=>[n(U),n(b,{color:"regular",onClick:s[2]||(s[2]=r=>t.showOverwriteDialog=!t.showOverwriteDialog)},{default:l(()=>[h(u(e.$gettext("No")),1)]),_:1}),n(b,{color:"primary",onClick:t.applyOverwriteDialog},{default:l(()=>[h(u(e.$gettext("Yes")),1)]),_:1},8,["onClick"])]),_:1})]),_:1})]),_:1},8,["modelValue","onKeydown"])])}const Jt=R(Ht,[["render",Bt],["__scopeId","data-v-789fe19d"]]),Zt={name:"DatePicker",components:{},props:["date","from","to"],events:["update:date"],data(){return{isoDate:null,dateMax:null,dateMin:null,menu:!1}},computed:{textDate(){return this.isoDate?this.isoDate.toISOString().substring(0,10):""}},watch:{isoDate(e){this.$emit("update:date",this.parseOutput(e))}},mounted(){this.isoDate=this.parseInput(String(this.date)),this.dateMin=this.parseInput(String(this.from)),this.dateMax=this.parseInput(String(this.to))},methods:{parseInput(e){if(e)return new Date(e.substring(0,4)+"-"+e.substring(4,6)+"-"+e.substring(6,8))},parseOutput(e){return e.toISOString().substring(0,10).replaceAll("-","")}}};function Wt(e,s,a,t,i,d){return m(),x(it,{modelValue:i.menu,"onUpdate:modelValue":s[1]||(s[1]=o=>i.menu=o),"close-on-content-click":!1,transition:"scale-transition","max-width":"290px","min-width":"auto"},{activator:l(({props:o})=>[n(X,nt({"model-value":d.textDate,"persistent-hint":"",readonly:"",variant:"underlined"},o),null,16,["model-value"])]),default:l(()=>[n(ot,{modelValue:i.isoDate,"onUpdate:modelValue":s[0]||(s[0]=o=>i.isoDate=o)},null,8,["modelValue"])]),_:1},8,["modelValue"])}const Kt=R(Zt,[["render",Wt]]);const Ge=e=>e,$t={name:"GTFSWebImporter",components:{DatePicker:Kt},setup(){const e=Se(),s=ve(),a=w(),t=g(!1),i=g(null),d=g({}),o=g([]),r=g(!1),c=g(!1),p=y(()=>s.linksIsEmpty),_=y(()=>e.UploadedGTFS),k=y(()=>e.callID),I=y(()=>e.running),F=y(()=>e.error),q=y(()=>e.errorMessage),H=y(()=>_.value.filter(M=>M.progress<100).length>0);_e(()=>{e.saveParams(E.value)});const z=/^(0?[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$/,P={required:M=>!!M||Ge("Required"),timeRule:M=>z.test(M)||Ge("invalid date time")},E=g([{name:"start_time",text:"start time",value:e.parameters.start_time,type:"String",units:"",hint:"Start Time to restrict the GTFS in a period",rules:["required","timeRule"]},{name:"end_time",text:"end time",value:e.parameters.end_time,type:"String",units:"",hint:"End Time to restrict the GTFS in a period",rules:["required","timeRule"]}]);return{showOverwriteDialog:t,poly:i,runGTFS:e,store:a,nodes:d,gtfsList:o,checkall:r,showHint:c,parameters:E,rules:P,linksIsEmpty:p,UploadedGTFS:_,callID:k,running:I,error:F,errorMessage:q,isUploading:H}},methods:{uploadGTFS(){this.$refs.zipInput.click(),document.getElementById("zip-input").value=""},async readZip(e){try{this.store.changeLoading(!0);const s=e.target.files;if(!s.length){this.store.changeLoading(!1);return}for(const a of s){const t=await lt(a),i=t.reduce((r,c)=>c.start_date<r?c.start_date:r,t[0].start_date),d=t.reduce((r,c)=>c.end_date>r?c.end_date:r,t[0].end_date),o={content:a,info:{name:a.name,minDate:i,maxDate:d,date:i,progress:0}};await this.runGTFS.addGTFS(o)}this.store.changeLoading(!1)}catch(s){this.store.changeLoading(!1),this.store.changeAlert(s)}},importGTFS(){if(this.linksIsEmpty){const e=this.UploadedGTFS.map(t=>t.name),s=this.UploadedGTFS.map(t=>t.date),a={files:e,dates:s};this.parameters.forEach(t=>{a[t.name]=t.value}),this.runGTFS.startExecution(a)}else this.showOverwriteDialog=!0},applyOverwriteDialog(){this.store.initLinks(),this.showOverwriteDialog=!1,this.importGTFS()}}},Yt=e=>(qe("data-v-bb90fb6f"),e=e(),He(),e),Qt={class:"params-row"},Xt={class:"list"},es={class:"list-row bold"},ts=Yt(()=>f("span",{class:"list-item-small"},null,-1)),ss={class:"list-item-large"},as={class:"list-item-medium"},rs={class:"list-item-medium"},ns={class:"list-item-medium"},os={class:"list-item-small"},is={class:"list-item-small"},ls={class:"list-item-large"},ds={class:"list-item-medium"},cs={class:"list-item-medium"},us={class:"list-item-medium"},hs={class:"list-item-small"},ms={class:"bottom-button"};function ps(e,s,a,t,i,d){const o=D("DatePicker");return m(),v("div",null,[f("input",{id:"zip-input",ref:"zipInput",type:"file",style:{display:"none"},accept:".zip",multiple:"multiple",onChange:s[0]||(s[0]=(...r)=>d.readZip&&d.readZip(...r))},null,544),n(L,{class:"card"},{default:l(()=>[n(N,{class:"subtitle"},{default:l(()=>[h(u(e.$gettext("GTFS importer")),1)]),_:1}),n(W,null,{default:l(()=>[h(u(e.$gettext("import GTFS from local computer")),1)]),_:1}),n(W,null,{default:l(()=>[h(u(e.$gettext("Add GTFS files. When its done uploading press Convert")),1)]),_:1}),n(b,{width:"10rem",disabled:t.running,onClick:d.uploadGTFS},{default:l(()=>[n(G,{size:"small",style:{"margin-right":"10px"}},{default:l(()=>[h(" fa-solid fa-file-archive ")]),_:1}),h(" "+u(e.$gettext("upload GTFS")),1)]),_:1},8,["disabled","onClick"]),n(W,null,{default:l(()=>[t.error?(m(),x(le,{key:0,density:"compact",variant:"outlined",text:"",type:"error"},{default:l(()=>[h(u(e.$gettext("There as been an error while converting your GTFS.             Please try again. If the problem persist, contact us."))+" ",1),(m(!0),v(T,null,O(Object.keys(t.errorMessage),r=>(m(),v("p",{key:r},[f("b",null,u(r)+": ",1),h(u(t.errorMessage[r]),1)]))),128))]),_:1})):A("",!0)]),_:1}),f("div",Qt,[(m(!0),v(T,null,O(t.parameters,(r,c)=>(m(),v("div",{key:c,class:"params"},[typeof r.items>"u"?(m(),x(X,{key:0,modelValue:r.value,"onUpdate:modelValue":p=>r.value=p,type:r.type,variant:"underlined",label:e.$gettext(r.text),suffix:r.units,hint:t.showHint?e.$gettext(r.hint):"","persistent-hint":t.showHint,rules:r.rules.map(p=>t.rules[p]),required:"",onWheel:()=>{}},null,8,["modelValue","onUpdate:modelValue","type","label","suffix","hint","persistent-hint","rules"])):(m(),x(de,{key:1,modelValue:r.value,"onUpdate:modelValue":p=>r.value=p,type:r.type,items:r.items,label:e.$gettext(r.text),suffix:r.units,hint:t.showHint?e.$gettext(r.hint):"","persistent-hint":t.showHint,rules:r.rules.map(p=>t.rules[p]),required:"",onWheel:()=>{}},null,8,["modelValue","onUpdate:modelValue","type","items","label","suffix","hint","persistent-hint","rules"]))]))),128))]),f("div",Xt,[f("li",es,[ts,f("span",ss,u(e.$gettext("name")),1),f("span",as,u(e.$gettext("from")),1),f("span",rs,u(e.$gettext("to")),1),f("span",ns,u(e.$gettext("selected date")),1),f("span",os,u(e.$gettext("Uploaded")),1)]),(m(!0),v(T,null,O(t.UploadedGTFS,(r,c)=>(m(),v("ul",{key:c,class:"list-row"},[f("span",is,u(c),1),f("span",ls,u(r.name),1),f("span",ds,u(r.minDate),1),f("span",cs,u(r.maxDate),1),f("span",us,[n(o,{date:r.date,from:r.minDate,to:r.maxDate,"onUpdate:date":p=>r.date=p},null,8,["date","from","to","onUpdate:date"])]),f("span",hs,[r.progress<100?(m(),x(dt,{key:0,indeterminate:r.progress===0,absolute:"",color:"primary","model-value":r.progress},null,8,["indeterminate","model-value"])):(m(),x(G,{key:1},{default:l(()=>[h("fas fa-check")]),_:1}))])]))),128))]),f("div",ms,[n(b,{loading:t.running,disabled:t.running||t.UploadedGTFS.length==0||t.isUploading,color:"success",onClick:d.importGTFS},{default:l(()=>[n(G,{size:"small",style:{"margin-right":"10px"}},{default:l(()=>[h(" fa-solid fa-play ")]),_:1}),h(" "+u(e.$gettext("convert")),1)]),_:1},8,["loading","disabled","onClick"])])]),_:1}),n(xe,{modelValue:t.showOverwriteDialog,"onUpdate:modelValue":s[2]||(s[2]=r=>t.showOverwriteDialog=r),persistent:"","max-width":"500",onKeydown:[K(d.applyOverwriteDialog,["enter"]),s[3]||(s[3]=K(r=>t.showOverwriteDialog=!1,["esc"]))]},{default:l(()=>[n(L,null,{default:l(()=>[n(N,{class:"text-h5"},{default:l(()=>[h(u(e.$gettext("Overwrite current road network ?")),1)]),_:1}),n(Q,null,{default:l(()=>[n(U),n(b,{color:"regular",onClick:s[1]||(s[1]=r=>t.showOverwriteDialog=!t.showOverwriteDialog)},{default:l(()=>[h(u(e.$gettext("No")),1)]),_:1}),n(b,{color:"primary",onClick:d.applyOverwriteDialog},{default:l(()=>[h(u(e.$gettext("Yes")),1)]),_:1},8,["onClick"])]),_:1})]),_:1})]),_:1},8,["modelValue","onKeydown"])])}const fs=R($t,[["render",ps],["__scopeId","data-v-bb90fb6f"]]);function gs(e,s){var a=!0;return oe(e,function(t){oe(s,function(i){if(a===!1)return!1;a=ys(t.geometry,i.geometry)})}),a}function ys(e,s){switch(e.type){case"Point":switch(s.type){case"Point":return!ws(e.coordinates,s.coordinates);case"LineString":return!Ve(s,e);case"Polygon":return!ee(e,s)}break;case"LineString":switch(s.type){case"Point":return!Ve(e,s);case"LineString":return!vs(e,s);case"Polygon":return!Ae(s,e)}break;case"Polygon":switch(s.type){case"Point":return!ee(s,e);case"LineString":return!Ae(e,s);case"Polygon":return!_s(s,e)}}return!1}function Ve(e,s){for(var a=0;a<e.coordinates.length-1;a++)if(xs(e.coordinates[a],e.coordinates[a+1],s.coordinates))return!0;return!1}function vs(e,s){var a=we(e,s);return a.features.length>0}function Ae(e,s){for(var a=0,t=s.coordinates;a<t.length;a++){var i=t[a];if(ee(i,e))return!0}var d=we(s,fe(e));return d.features.length>0}function _s(e,s){for(var a=0,t=e.coordinates[0];a<t.length;a++){var i=t[a];if(ee(i,s))return!0}for(var d=0,o=s.coordinates[0];d<o.length;d++){var r=o[d];if(ee(r,e))return!0}var c=we(fe(e),fe(s));return c.features.length>0}function xs(e,s,a){var t=a[0]-e[0],i=a[1]-e[1],d=s[0]-e[0],o=s[1]-e[1],r=t*o-i*d;return r!==0?!1:Math.abs(d)>=Math.abs(o)?d>0?e[0]<=a[0]&&a[0]<=s[0]:s[0]<=a[0]&&a[0]<=e[0]:o>0?e[1]<=a[1]&&a[1]<=s[1]:s[1]<=a[1]&&a[1]<=e[1]}function ws(e,s){return e[0]===s[0]&&e[1]===s[1]}function bs(e,s){var a=!1;return oe(e,function(t){oe(s,function(i){if(a===!0)return!0;a=!gs(t.geometry,i.geometry)})}),a}var Ss=function(e,s){if(e===null)throw new Error("No coordinates passed");for(var a=0;a<e.length;a++)for(var t=e[a],i=0;i<t[t.length-1].length;i++){if(t.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");if(t[t.length-1][i]!==t[0][i])throw new Error("First and last Position are not equivalent.")}var d={type:"Feature",geometry:{type:"Polygon",coordinates:e},properties:s};return d.properties||(d.properties={}),d};const ks=ct(Ss);const Ne=e=>e,Is={name:"GTFSWebImporter",components:{MapSelector:Ze},setup(){const e=Se(),s=ve(),a=w(),t=g(!1),i=g(null),d=g({}),o=g([]),r=g([]),c=g(!1),p=g(!1),_=g(e.selectedGTFS),k=y(()=>s.linksIsEmpty),I=y(()=>e.UploadedGTFS),F=y(()=>e.callID),q=y(()=>e.running),H=y(()=>e.error),z=y(()=>e.errorMessage),P=y(()=>I.value.filter(j=>j.progress<100).length>0);_e(()=>{e.saveParams(E.value),e.saveSelectedGTFS(_.value)});const E=g([{name:"start_time",text:"start time",value:e.parameters.start_time,type:"String",units:"",hint:"Start Time to restrict the GTFS in a period",rules:["required","timeRule"]},{name:"end_time",text:"end time",value:e.parameters.end_time,type:"String",units:"",hint:"End Time to restrict the GTFS in a period",rules:["required","timeRule"]},{name:"day",text:"day",value:e.parameters.day,type:"String",items:["monday","tuesday","wednesday","thursday","friday","saturday","sunday"],units:"",hint:"restrict each GTFS to this day.",rules:["required"]}]),M=/^(0?[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$/;return{showOverwriteDialog:t,poly:i,runGTFS:e,store:a,nodes:d,gtfsList:o,availableGTFS:r,selectedGTFS:_,checkall:c,showHint:p,parameters:E,rules:{required:j=>!!j||Ne("Required"),timeRule:j=>M.test(j)||Ne("invalid date time")},linksIsEmpty:k,UploadedGTFS:I,callID:F,running:q,error:H,errorMessage:z,isUploading:P}},async created(){this.gtfsList=await this.fetchCSV(),this.gtfsList.forEach((e,s)=>{try{e.bbox=pe([e["location.bounding_box.minimum_longitude"],e["location.bounding_box.minimum_latitude"],e["location.bounding_box.maximum_longitude"],e["location.bounding_box.maximum_latitude"]])}catch{e.bbox=null}e.index=s}),this.gtfsList=this.gtfsList.filter(e=>e.bbox),this.gtfsList=this.gtfsList.filter(e=>e["urls.latest"].length>0),this.gtfsList.sort((e,s)=>e["location.country_code"]<s["location.country_code"]?-1:e["location.country_code"]>s["location.country_code"]?1:0)},methods:{async fetchCSV(){try{const e=await fetch("https://storage.googleapis.com/storage/v1/b/mdb-csv/o/sources.csv?alt=media",{});e.ok||this.store.changeAlert({name:"Network error",message:"cannot fetch GTFS list"});const s=await e.arrayBuffer();return ut(s)}catch(e){this.store.changeAlert(e)}},getBBOX(e){this.poly?this.poly=e:(this.poly=e,this.getAvaileGTFS())},getAvaileGTFS(){let e=null;if(this.poly.style==="bbox"){const a=this.poly.geometry;e=pe([a[1],a[0],a[3],a[2]])}else e=ks([this.poly.geometry]);this.availableGTFS=this.gtfsList.filter(a=>De(e,a.bbox)||bs(e,a.bbox)),this.availableGTFS.forEach(a=>a.allInPolygon=De(e,a.bbox));const s=new Set(this.availableGTFS.map(a=>a.index));this.selectedGTFS=this.selectedGTFS.filter(a=>s.has(a))},importGTFS(){if(this.linksIsEmpty){this.runGTFS.setCallID();const a={files:this.availableGTFS.filter(t=>this.selectedGTFS.includes(t.index)).map(t=>t["urls.latest"])};this.parameters.forEach(t=>{a[t.name]=t.value}),this.runGTFS.startExecution(a)}else this.showOverwriteDialog=!0},applyOverwriteDialog(){this.store.initLinks(),this.showOverwriteDialog=!1,this.importGTFS()}}},te=e=>(qe("data-v-ec4dddae"),e=e(),He(),e),Ds={class:"background"},Fs={class:"params-row"},Ms={class:"list"},Cs={class:"list-row"},Ts={class:"list-item-small"},Os=te(()=>f("span",{class:"list-item-small"},"All in polygon",-1)),Es=te(()=>f("span",{class:"list-item-small"},"Code",-1)),Gs=te(()=>f("span",{class:"list-item-medium"},"Name",-1)),Vs=te(()=>f("span",{class:"list-item-large"},"City",-1)),As=te(()=>f("span",{class:"list-item-large"},"Agency",-1)),Ns={class:"list-item-small"},Ls={class:"list-item-small"},Ps={class:"list-item-small"},Us={class:"list-item-medium"},Rs={class:"list-item-large"},qs={class:"list-item-large"};function Hs(e,s,a,t,i,d){const o=D("MapSelector");return m(),v("div",Ds,[n(L,{class:"card"},{default:l(()=>[n(N,{class:"subtitle"},{default:l(()=>[h(u(e.$gettext("GTFS importer")),1)]),_:1}),n(o,{onChange:d.getBBOX},null,8,["onChange"])]),_:1}),n(L,{class:"card2"},{default:l(()=>[n(N,{class:"subtitle"},{default:l(()=>[h(u(e.$gettext("Available GTFS")),1)]),_:1}),n(W,null,{default:l(()=>[h(u(e.$gettext("Data fetch from")+" https://database.mobilitydata.org/"),1)]),_:1}),n(b,{disabled:t.running,onClick:d.getAvaileGTFS},{default:l(()=>[n(G,{size:"small",style:{"margin-right":"10px"}},{default:l(()=>[h(" fa-solid fa-sync ")]),_:1}),h(" "+u(e.$gettext("fetch available GTFS")),1)]),_:1},8,["disabled","onClick"]),n(b,{loading:t.running,disabled:t.running||t.selectedGTFS.length===0,color:"success",onClick:d.importGTFS},{default:l(()=>[n(G,{size:"small",style:{"margin-right":"10px"}},{default:l(()=>[h(" fa-solid fa-play ")]),_:1}),h(" "+u(e.$gettext("Download")),1)]),_:1},8,["loading","disabled","onClick"]),n(W,null,{default:l(()=>[t.error?(m(),x(le,{key:0,density:"compact",variant:"outlined",text:"",type:"error"},{default:l(()=>[h(u(e.$gettext("There as been an error while importing OSM network.             Please try again. If the problem persist, contact us."))+" ",1),(m(!0),v(T,null,O(Object.keys(t.errorMessage),r=>(m(),v("p",{key:r},[f("b",null,u(r)+": ",1),h(u(t.errorMessage[r]),1)]))),128))]),_:1})):A("",!0)]),_:1}),f("div",Fs,[(m(!0),v(T,null,O(t.parameters,(r,c)=>(m(),v("div",{key:c,class:"params"},[typeof r.items>"u"?(m(),x(X,{key:0,modelValue:r.value,"onUpdate:modelValue":p=>r.value=p,type:r.type,label:e.$gettext(r.text),suffix:r.units,variant:"underlined",hint:t.showHint?e.$gettext(r.hint):"","persistent-hint":t.showHint,rules:r.rules.map(p=>t.rules[p]),required:"",onWheel:()=>{}},null,8,["modelValue","onUpdate:modelValue","type","label","suffix","hint","persistent-hint","rules"])):(m(),x(de,{key:1,modelValue:r.value,"onUpdate:modelValue":p=>r.value=p,variant:"underlined",type:r.type,items:r.items,label:e.$gettext(r.text),suffix:r.units,hint:t.showHint?e.$gettext(r.hint):"","persistent-hint":t.showHint,rules:r.rules.map(p=>t.rules[p]),required:"",onWheel:()=>{}},null,8,["modelValue","onUpdate:modelValue","type","items","label","suffix","hint","persistent-hint","rules"]))]))),128))]),f("div",Ms,[f("ul",Cs,[f("span",Ts,[n(Re,{disabled:!0})]),Os,Es,Gs,Vs,As]),(m(!0),v(T,null,O(t.availableGTFS,(r,c)=>(m(),v("ul",{key:r.index,class:"list-row"},[f("span",Ns,[n(ht,{modelValue:t.selectedGTFS,"onUpdate:modelValue":s[0]||(s[0]=p=>t.selectedGTFS=p),value:r.index,label:String(c)},null,8,["modelValue","value","label"])]),f("span",Ls,u(r.allInPolygon),1),f("span",Ps,u(r["location.country_code"]),1),f("span",Us,u(r["location.subdivision_name"]),1),f("span",Rs,u(r["location.municipality"]),1),f("span",qs,u(r.provider),1)]))),128))])]),_:1}),n(xe,{modelValue:t.showOverwriteDialog,"onUpdate:modelValue":s[2]||(s[2]=r=>t.showOverwriteDialog=r),persistent:"","max-width":"500",onKeydown:[K(d.applyOverwriteDialog,["enter"]),s[3]||(s[3]=K(r=>t.showOverwriteDialog=!1,["esc"]))]},{default:l(()=>[n(L,null,{default:l(()=>[n(N,{class:"text-h5"},{default:l(()=>[h(u(e.$gettext("Overwrite current road network ?")),1)]),_:1}),n(Q,null,{default:l(()=>[n(U),n(b,{color:"regular",onClick:s[1]||(s[1]=r=>t.showOverwriteDialog=!t.showOverwriteDialog)},{default:l(()=>[h(u(e.$gettext("No")),1)]),_:1}),n(b,{color:"primary",onClick:d.applyOverwriteDialog},{default:l(()=>[h(u(e.$gettext("Yes")),1)]),_:1},8,["onClick"])]),_:1})]),_:1})]),_:1},8,["modelValue","onKeydown"])])}const zs=R(Is,[["render",Hs],["__scopeId","data-v-ec4dddae"]]),js=e=>e,Bs=ye("runMRC",{state:()=>({stateMachineArn:"arn:aws:states:ca-central-1:142023388927:stateMachine:quetzal-matrixroadcaster-api",bucket:"quetzal-api-bucket",callID:"",status:"",timer:0,running:!1,executionArn:"",error:!1,errorMessage:"",parameters:{callID:"test",num_zones:100,train_size:100,date_time:"2022-12-13T08:00:21-04:00",ff_time_col:"time",max_speed:100,num_cores:1,num_random_od:1,create_zone:!0,hereApiKey:""}}),actions:{cleanRun(){this.running=!1,this.executionArn="",this.error=!1},setCallID(){this.callID=Z.v4()},setParameters(e){this.parameters=e},terminateExecution(e){this.running=!1,this.error=!0,this.errorMessage=e,this.executionArn=""},changeRunning(e){this.running=e},getApproxTimer(e){const s=this.parameters.num_zones,a=this.parameters.train_size,t=this.parameters.num_random_od;this.timer=Math.min(s,a)*1.8+e*.002+15,this.timer+=10*t},succeedExecution(){this.running=!1,this.executionArn="",w().changeNotification({text:js("Matrix Road Caster executed successfully!"),autoClose:!1,color:"success"})},async startExecution(e){this.getApproxTimer(e.rlinks.features.length),this.setParameters(e.parameters),console.log("exporting roads to s3"),this.error=!1,this.running=!0;try{await C.putObject(this.bucket,this.callID.concat("/road_links.geojson"),JSON.stringify(e.rlinks)),await C.putObject(this.bucket,this.callID.concat("/road_nodes.geojson"),JSON.stringify(e.rnodes))}catch(a){w().changeAlert(a)}let s={input:JSON.stringify(this.parameters),name:this.callID,stateMachineArn:this.stateMachineArn};V.client.post("",s=JSON.stringify(s)).then(a=>{this.executionArn=a.data.executionArn,this.pollExecution()}).catch(a=>{w().changeAlert(a),this.running=!1,this.status="FAILED"})},pollExecution(){const e=setInterval(()=>{let s={executionArn:this.executionArn};this.timer=this.timer-2,V.client.post("/describe",s=JSON.stringify(s)).then(a=>{this.status=a.data.status,console.log(this.status),this.status==="SUCCEEDED"?(this.succeedExecution(),clearInterval(e)):["FAILED","TIMED_OUT","ABORTED"].includes(this.status)&&(this.terminateExecution(JSON.parse(a.data.cause)),clearInterval(e))}).catch(a=>{w().changeAlert(a)})},2e3)},stopExecution(){let e={executionArn:this.executionArn};V.client.post("/abort",e=JSON.stringify(e)).then(s=>{this.terminateExecution(s.data)}).catch(s=>{w().changeAlert(s)})}}});const Y=e=>e,Js={name:"MatrixRoadCaster",components:{},setup(){const e=Bs(),s=ie(),a=w(),t=g([]),i=g(!1),d=g(!1),o=g(!0),r=g(!1),c=g([{name:"num_zones",text:"number of zones",value:null,type:"Number",units:"",hint:"number of zones. road nodes will be aggregate to form centroids",rules:["required","largerThanZero"]},{name:"train_size",text:"number of OD (api call)",value:null,type:"Number",units:"",hint:"number of OD to get from the API, the rest will be interpolated with ML",rules:["required","largerThanZero"]},{name:"date_time",text:"date Time",value:null,type:"String",units:"",hint:"DateTime in the past. (YYYY-MM-DDTHH:MM:SS(UTC-timezone) (-04:00 for montreal))",rules:["required","dateTimeRule"]},{name:"ff_time_col",text:"freeflow time on roads",value:null,items:s.rlineAttributes,type:"String",units:"",hint:"road links time (link length / speed) to use as a first approximation. this is the freeflow speed, or speed limit",rules:["required"]},{name:"max_speed",text:"max speed on road",value:null,type:"Number",units:"",hint:"Maximum allowed speed on a road. applying an OD matrix on the road network could result il unrealistic speed if not used.",rules:["required","largerThanZero"]},{name:"num_random_od",text:"number of OD to plot",value:null,type:"Number",units:"",hint:"number of OD calibration plot to produce. those are random OD.",rules:["required","largerThanZero"]},{name:"hereApiKey",text:"HERE api key",value:null,type:"password",units:"",hint:"HERE api key to download a set of OD",rules:["required"]}]),p=y(()=>e.bucket),_=y(()=>e.callID),k=y(()=>e.timer),I=y(()=>e.status),F=y(()=>e.running),q=y(()=>e.error),H=y(()=>e.errorMessage);Ue(()=>{const S=e.parameters;c.value.forEach(B=>B.value=S[B.name]),_.value&&M()}),mt(I,S=>{S==="SUCCEEDED"&&M()});async function z(S){if(!(await S).valid)return;e.setCallID();const J={callID:_.value};c.value.forEach(se=>{J[se.name]=se.value}),e.startExecution({rlinks:s.rlinks,rnodes:s.rnodes,parameters:J})}function P(){e.stopExecution()}async function E(){d.value=!0;const S=await C.readJson(p.value,_.value.concat("/road_links.geojson"));s.loadrLinks(S);const B=await C.readJson(p.value,_.value.concat("/road_nodes.geojson"));s.loadrNodes(B),d.value=!1,a.changeNotification({text:Y("Road links applied!"),autoClose:!0,color:"success"})}async function M(){const B=(await C.listFiles(p.value,_.value+"/")).filter(J=>J.endsWith(".png"));for(const J of B){const se=await C.getImagesURL(p.value,J);t.value.push(se)}}async function ke(){i.value=!0,await C.downloadFolder(p.value,_.value.concat("/")),i.value=!1}const j=g(!1),We=/^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$/;return{imgs:t,exporting:i,applying:d,validForm:o,showP:r,parameters:c,showHint:j,rules:{required:S=>!!S||Y("Required"),largerThanZero:S=>S>0||Y("should be larger than 0"),nonNegative:S=>S>=0||Y("should be larger or equal to 0"),dateTimeRule:S=>We.test(S)||Y("invalid date time")},timer:k,running:F,error:q,errorMessage:H,download:ke,run:z,stopRun:P,ApplyResults:E}}};function Zs(e,s,a,t,i,d){return m(),x(vt,{class:"ma-0 pa-2 background"},{default:l(()=>[n(Fe,null,{default:l(()=>[n(L,{class:"card"},{default:l(()=>[n(N,{class:"subtitle"},{default:l(()=>[h(u(e.$gettext("ML Matrix Road Caster")),1)]),_:1}),f("p",null,u(e.$gettext("1) Find n zones centroids using a Kmean clustering on the nodes")),1),f("p",null,u(e.$gettext("2) Call the Here Matrix API on random OD ( around 1% is sufficient )")),1),f("p",null,u(e.$gettext("3) Interpolate every other OD time with an hybrid Machine learning model")),1),f("p",null,u(e.$gettext("4) ajust the speed on the road network to match the routing time with the OD time using an iterative algorithm")),1),n(pt,{"validate-on":"submit lazy",onSubmit:ft(t.run,["prevent"])},{default:l(()=>[(m(!0),v(T,null,O(t.parameters,(o,r)=>(m(),v("div",{key:r},[o.type==="password"?(m(),x(X,{key:0,modelValue:o.value,"onUpdate:modelValue":c=>o.value=c,type:t.showP?"text":"password","append-icon":t.showP?"fas fa-eye":"fas fa-eye-slash",label:e.$gettext(o.text),suffix:o.units,hint:t.showHint?e.$gettext(o.hint):"","persistent-hint":t.showHint,rules:o.rules.map(c=>t.rules[c]),required:"","onClick:append":s[0]||(s[0]=c=>t.showP=!t.showP)},null,8,["modelValue","onUpdate:modelValue","type","append-icon","label","suffix","hint","persistent-hint","rules"])):typeof o.items>"u"?(m(),x(X,{key:1,modelValue:o.value,"onUpdate:modelValue":c=>o.value=c,type:o.type,label:e.$gettext(o.text),suffix:o.units,hint:t.showHint?e.$gettext(o.hint):"","persistent-hint":t.showHint,rules:o.rules.map(c=>t.rules[c]),required:"",onWheel:()=>{}},null,8,["modelValue","onUpdate:modelValue","type","label","suffix","hint","persistent-hint","rules"])):(m(),x(de,{key:2,modelValue:o.value,"onUpdate:modelValue":c=>o.value=c,type:o.type,items:o.items,label:e.$gettext(o.text),suffix:o.units,hint:t.showHint?e.$gettext(o.hint):"","persistent-hint":t.showHint,rules:o.rules.map(c=>t.rules[c]),required:"",onWheel:()=>{}},null,8,["modelValue","onUpdate:modelValue","type","items","label","suffix","hint","persistent-hint","rules"]))]))),128)),n(Q,null,{default:l(()=>[n(b,{variant:"regular",color:"success",loading:t.running||e.importStatus==="RUNNING",disabled:t.running||e.importStatus==="RUNNING"||!t.validForm,type:"submit"},{default:l(()=>[n(G,{size:"small",style:{"margin-right":"10px"}},{default:l(()=>[h(" fa-solid fa-play ")]),_:1}),h(" "+u(e.$gettext("Run")),1)]),_:1},8,["loading","disabled"]),ae(n(b,{color:"grey",variant:"text",onClick:s[1]||(s[1]=o=>t.stopRun())},{default:l(()=>[h(u(e.$gettext("Abort")),1)]),_:1},512),[[re,e.importStatus=="RUNNING"]]),ae(n(gt,null,{default:l(()=>[h(" ~ "+u(t.timer>0?Math.ceil(t.timer/60):e.$gettext("less than 1"))+u(e.$gettext(" minutes remaining")),1)]),_:1},512),[[re,e.importStatus=="RUNNING"]]),n(U),n(b,{size:"small",onClick:s[2]||(s[2]=o=>t.showHint=!t.showHint)},{default:l(()=>[n(G,null,{default:l(()=>[h("far fa-question-circle small")]),_:1})]),_:1})]),_:1})]),_:1},8,["onSubmit"])]),_:1})]),_:1}),n(Fe,null,{default:l(()=>[n(L,{class:"card2"},{default:l(()=>[n(N,{class:"subtitle"},{default:l(()=>[h(u(e.$gettext("Calibration Results")),1)]),_:1}),ae(n(b,{loading:t.applying,disabled:t.applying,onClick:t.ApplyResults},{default:l(()=>[n(G,{size:"small",style:{"margin-right":"10px"}},{default:l(()=>[h(" fa-solid fa-upload ")]),_:1}),h(" "+u(e.$gettext("Apply Road links to project")),1)]),_:1},8,["loading","disabled","onClick"]),[[re,t.imgs.length>0]]),ae(n(b,{loading:t.exporting,disabled:t.exporting,onClick:t.download},{default:l(()=>[n(G,{size:"small",style:{"margin-right":"10px"}},{default:l(()=>[h(" fa-solid fa-download ")]),_:1}),h(" "+u(e.$gettext("Download")),1)]),_:1},8,["loading","disabled","onClick"]),[[re,t.imgs.length>0]]),t.error?(m(),x(le,{key:0,density:"compact",variant:"outlined",text:"",type:"error"},{default:l(()=>[h(u(e.$gettext("Service ended with an execution error or have been aborted.             Please retry. If the problem persist, contact us."))+" ",1),(m(!0),v(T,null,O(Object.keys(t.errorMessage),o=>(m(),v("p",{key:o},[f("b",null,u(o)+": ",1),h(u(t.errorMessage[o]),1)]))),128))]),_:1})):A("",!0),(m(!0),v(T,null,O(t.imgs,(o,r)=>(m(),v("div",{key:r,class:"gallery"},[n(yt,{src:o,alt:"image",cover:""},null,8,["src"])]))),128))]),_:1})]),_:1})]),_:1})}const Ws=R(Js,[["render",Zs],["__scopeId","data-v-24521792"]]);const Ks={name:"Microservices",components:{OSMImporter:Jt,MatrixRoadCaster:Ws,GTFSWebImporter:zs,GTFSZipImporter:fs},setup(){const e=Se(),s=g("OSM importer"),a=g("Zip importer"),t=y(()=>e.running);return{tab:s,subtab:a,GTFSrunning:t}}};function $s(e,s,a,t,i,d){const o=D("OSMImporter"),r=D("GTFSZipImporter"),c=D("GTFSWebImporter"),p=D("MatrixRoadCaster");return m(),v("section",null,[n(Me,{modelValue:t.tab,"onUpdate:modelValue":s[0]||(s[0]=_=>t.tab=_),color:"primary","bg-color":"lightergrey","align-tabs":"center"},{default:l(()=>[n($,{value:"OSM importer"},{default:l(()=>[h(" OSM importer ")]),_:1}),n($,{value:"GTFS importer"},{default:l(()=>[h(" GTFS importer ")]),_:1}),n($,{value:"Matrix Road Caster"},{default:l(()=>[h(" Matrix Road Caster ")]),_:1})]),_:1},8,["modelValue"]),t.tab==="GTFS importer"?(m(),x(Me,{key:0,modelValue:t.subtab,"onUpdate:modelValue":s[1]||(s[1]=_=>t.subtab=_),class:"subtabs",color:"primary","bg-color":"lightergrey","align-tabs":"center"},{default:l(()=>[n($,{disabled:t.GTFSrunning,value:"Zip importer"},{default:l(()=>[h(" Zip importer ")]),_:1},8,["disabled"]),n($,{disabled:t.GTFSrunning,value:"Web importer"},{default:l(()=>[h(" Web importer ")]),_:1},8,["disabled"])]),_:1},8,["modelValue"])):A("",!0),n(_t,{class:"layout"},{default:l(()=>[t.tab==="OSM importer"?(m(),x(o,{key:0})):t.tab==="GTFS importer"&&t.subtab==="Zip importer"?(m(),x(r,{key:1})):t.tab==="GTFS importer"&&t.subtab==="Web importer"?(m(),x(c,{key:2})):t.tab==="Matrix Road Caster"?(m(),x(p,{key:3})):A("",!0)]),_:1})])}const Xs=R(Ks,[["render",$s],["__scopeId","data-v-e9edd2ef"]]);export{Xs as default};
