import{_ as M,c as w,d as S,aL as x,u as L,a0 as C,j as i,au as y,m as N,r as m,o as f,k as g,g as d,s as v,aM as b,w as c,l as _,y as F,F as R,z as E,f as B,D as P,A as z,n as j,t as A}from"./index-ce256897.js";import{a as Z,b as D}from"./index-3c68deeb.js";const k=e=>e,H={name:"StaticLinks",components:{MglGeojsonLayer:w,MglImageLayer:S,MglPopup:x},props:["map","isEditorMode","isRoadMode"],events:["clickFeature"],setup(){const e=L(),t=C(),s=i(()=>e.roadsPopupContent),n=i(()=>t.selectedrGroup),o=i(()=>e.cyclewayMode),r=i(()=>t.visiblerNodes),l=i(()=>t.visiblerLinks),u=i(()=>t.renderedrLinks),h=i(()=>t.renderedrNodes),a=i(()=>e.anchorMode),p=y,I=i(()=>a.value?t.anchorrNodes:y);return{store:e,rlinksStore:t,anchorMode:a,selectedPopupContent:s,selectedrGroup:n,cyclewayMode:o,rlinks:l,rnodes:r,renderedrLinks:u,renderedrNodes:h,renderedAnchorrNodes:I,header:p}},data(){return{hoveredStateId:null,visibleNodes:{},visibleLinks:{},disablePopup:!1,editorRnodes:{},routeWidth:1,bbox:null,minZoom:{links:2,rendered:14},contextMenu:{coordinates:[0,0],showed:!1,actions:[],feature:null}}},computed:{ArrowSizeCondition(){const e=["case",["has","oneway"],["case",["to-boolean",["to-number",["get","oneway"]]],.25,0],.25],t=["case",["has","route_width"],["case",["to-boolean",["to-number",["get","route_width"]]],["to-number",["get","route_width"]],2],2];return this.cyclewayMode?["*",["case",["all",["to-boolean",["get","cycleway"]],["to-boolean",["get","cycleway_reverse"]]],["case",["all",["!=",["downcase",["get","cycleway"]],"no"],["!=",["downcase",["get","cycleway_reverse"]],"no"]],0,["case",["all",["==",["downcase",["get","cycleway"]],"no"],["==",["downcase",["get","cycleway_reverse"]],"no"]],e,.25]],0],t]:["*",e,t]},ArrowDirCondition(){return this.cyclewayMode?["case",["all",["==",["downcase",["get","cycleway"]],"no"],["!=",["downcase",["get","cycleway_reverse"]],"no"]],-90,90]:90}},watch:{selectedrGroup(e){this.getBounds()},isRoadMode(e){e?(this.map.on("dragend",this.getBounds),this.map.on("zoomend",this.getBounds)):(this.map.off("dragend",this.getBounds),this.map.off("zoomend",this.getBounds))}},created(){this.map.on("dragend",this.getBounds),this.map.on("zoomend",this.getBounds)},beforeDestroy(){this.map.removeLayer("arrow-rlinks")},methods:{getBounds(){const e=this.map.getBounds();this.bbox=Z(D([e._sw.lng,e._sw.lat,e._ne.lng,e._ne.lat]),.2),this.map.getZoom()>this.minZoom.rendered?(this.routeWidth=2,this.rlinksStore.getRenderedrLinks({bbox:this.bbox})):this.map.getZoom()>this.minZoom.links?(this.routeWidth=1,this.rlinksStore.setRenderedrLinks({method:"visible"})):(this.routeWidth=1,this.rlinksStore.setRenderedrLinks({method:"None"}))},onCursor(e){var t;if(this.isRoadMode&&((t=this.popup)!=null&&t.isOpen()&&this.popup.remove(),this.hoveredStateId===null||this.hoveredStateId.layerId==="rlinks")){if(!this.disablePopup&&this.selectedPopupContent.length>0){const n=e.mapboxEvent.features[0];if(n.layer.id!=="rnodes"){let o=this.selectedPopupContent.map(r=>`${r}: <b>${n.properties[r]}</b>`);o=o.join("<br> "),this.popup=new N.Popup({closeButton:!1}).setLngLat([e.mapboxEvent.lngLat.lng,e.mapboxEvent.lngLat.lat]).setHTML(o).addTo(e.map)}}this.map.getCanvas().style.cursor="pointer",this.hoveredStateId!==null&&this.map.setFeatureState({source:this.hoveredStateId.layerId,id:this.hoveredStateId.id[0]},{hover:!1});const s=[...new Set(e.mapboxEvent.features.map(n=>n.id))];this.hoveredStateId={layerId:e.layerId,id:s},this.map.setFeatureState({source:this.hoveredStateId.layerId,id:this.hoveredStateId.id[0]},{hover:!0}),this.$emit("onHover",{layerId:this.hoveredStateId.layerId,selectedId:this.hoveredStateId.id})}},offCursor(e){var t,s;this.isRoadMode&&((t=this.popup)!=null&&t.isOpen()&&this.popup.remove(),this.hoveredStateId!==null&&(["rnodes","anchorrNodes"].includes((s=this.hoveredStateId)==null?void 0:s.layerId)&&(e==null?void 0:e.layerId)==="rlinks"||(this.keepHovering?this.dragNode=!0:(this.map.getCanvas().style.cursor="",this.map.setFeatureState({source:this.hoveredStateId.layerId,id:this.hoveredStateId.id[0]},{hover:!1}),this.hoveredStateId=null,this.$emit("offHover",e)))))},selectClick(e){if(this.isRoadMode&&this.hoveredStateId!==null&&(this.selectedFeature=this.hoveredStateId.id,this.selectedFeature!==null&&this.hoveredStateId.layerId==="rlinks")){const t=this.anchorMode?"anchorrNodes":"rnodes";this.rlinksStore.addRoadNodeInline({selectedIndex:this.selectedFeature,lngLat:e.mapboxEvent.lngLat,nodes:t})}},linkRightClick(e){this.isRoadMode&&this.hoveredStateId.layerId==="rlinks"&&(this.contextMenu.coordinates=[e.mapboxEvent.lngLat.lng,e.mapboxEvent.lngLat.lat],this.contextMenu.showed=!0,this.contextMenu.feature=this.hoveredStateId.id,this.contextMenu.actions=[k("Edit rLink Info"),k("Delete rLink")])},actionClick(e){e.action==="Delete rLink"?this.rlinksStore.deleterLink({selectedIndex:e.feature}):this.$emit("clickFeature",{selectedIndex:e.feature,action:e.action,lngLat:e.coordinates}),this.contextMenu.showed=!1,this.contextMenu.type=null},contextMenuNode(e){var t,s;if(this.isRoadMode){const n=this.map.querySourceFeatures(this.hoveredStateId.layerId);this.selectedFeature=n.filter(o=>this.hoveredStateId.id.includes(o.id)),this.selectedFeature.length>0&&(((t=this.hoveredStateId)==null?void 0:t.layerId)==="rnodes"?this.$emit("clickFeature",{selectedFeature:this.selectedFeature[0],action:"Edit rNode Info",lngLat:e.mapboxEvent.lngLat}):((s=this.hoveredStateId)==null?void 0:s.layerId)==="anchorrNodes"&&this.rlinksStore.deleteAnchorrNode({selectedNode:this.selectedFeature[0].properties}))}},moveNode(e){if(this.isRoadMode&&e.mapboxEvent.originalEvent.button===0&["rnodes","anchorrNodes"].includes(this.hoveredStateId.layerId)){e.mapboxEvent.preventDefault(),this.map.getCanvas().style.cursor="grab",this.keepHovering=!0;const t=this.map.querySourceFeatures(this.hoveredStateId.layerId);this.selectedFeature=t.filter(s=>s.id===this.hoveredStateId.id[0])[0],this.disablePopup=!0,this.hoveredStateId.layerId==="rnodes"&&this.rlinksStore.getConnectedLinks({selectedNode:this.selectedFeature}),this.map.on("mousemove",this.onMove),this.map.on("mouseup",this.stopMovingNode)}},onMove(e){this.dragNode&&this.selectedFeature&&(this.hoveredStateId.layerId==="anchorrNodes"?this.rlinksStore.moverAnchor({selectedNode:this.selectedFeature,lngLat:Object.values(e.lngLat)}):this.rlinksStore.moverNode({selectedNode:this.selectedFeature,lngLat:Object.values(e.lngLat)}))},stopMovingNode(e){this.isRoadMode&&(this.map.getCanvas().style.cursor="pointer",this.map.off("mousemove",this.onMove),this.keepHovering=!1,this.dragNode=!1,this.disablePopup=!1,this.map.getCanvas().style.cursor="",this.map.setFeatureState({source:this.hoveredStateId.layerId,id:this.hoveredStateId.id[0]},{hover:!1}),this.hoveredStateId=null,this.map.off("mouseup",this.stopMovingNode))}}};function W(e,t,s,n,o,r){const l=m("MglGeojsonLayer"),u=m("MglImageLayer"),h=m("MglPopup");return f(),g("section",null,[d(l,v({"source-id":"rlinks",source:{type:"geojson",data:s.isRoadMode?n.renderedrLinks:n.rlinks,buffer:0,promoteId:"index"},"layer-id":"rlinks",layer:{interactive:!0,type:"line",minzoom:o.minZoom.links,paint:{"line-color":["case",["has","route_color"],["concat","#",["get","route_color"]],e.$vuetify.theme.current.colors.linksprimary],"line-opacity":["case",["boolean",s.isEditorMode,!1],.3,1],"line-width":["*",["case",["boolean",["feature-state","hover"],!1],2*o.routeWidth,o.routeWidth],["case",["has","route_width"],["case",["to-boolean",["to-number",["get","route_width"]]],["to-number",["get","route_width"]],2],2]],"line-blur":["*",["case",["boolean",["feature-state","hover"],!1],1,0],["case",["has","route_width"],["case",["to-boolean",["to-number",["get","route_width"]]],["to-number",["get","route_width"]],2],2]]},layout:{"line-sort-key":["to-number",["get","route_width"]]}}},b(s.isEditorMode?{}:{mouseenter:r.onCursor,mouseleave:r.offCursor,click:r.selectClick,contextmenu:r.linkRightClick})),null,16,["source","layer"]),d(u,{"source-id":"rlinks",type:"symbol",source:"rlinks","layer-id":"arrow-rlinks",layer:{type:"symbol",minzoom:o.minZoom.rendered,layout:{"symbol-placement":"line","symbol-spacing":200,"icon-ignore-placement":!0,"icon-image":"arrow","icon-size":r.ArrowSizeCondition,"icon-rotate":r.ArrowDirCondition},paint:{"icon-color":["case",["has","route_color"],["concat","#",["get","route_color"]],e.$vuetify.theme.current.colors.linksprimary]}}},null,8,["layer"]),d(l,v({"source-id":"rnodes",source:{type:"geojson",data:s.isRoadMode?n.renderedrNodes:n.rnodes,buffer:0,promoteId:"index"},"layer-id":"rnodes",layer:{interactive:!0,type:"circle",minzoom:o.minZoom.rendered,paint:{"circle-color":["case",["boolean",s.isEditorMode,!1],e.$vuetify.theme.current.colors.mediumgrey,e.$vuetify.theme.current.colors.accent],"circle-stroke-color":e.$vuetify.theme.current.colors.white,"circle-stroke-width":1,"circle-radius":["case",["boolean",["feature-state","hover"],!1],14,6],"circle-blur":["case",["boolean",["feature-state","hover"],!1],.3,0]}}},b(s.isEditorMode?{}:{mouseenter:r.onCursor,mouseleave:r.offCursor,mousedown:r.moveNode,contextmenu:r.contextMenuNode})),null,16,["source","layer"]),d(l,{"source-id":"anchorrNodes",source:{type:"geojson",data:s.isRoadMode?n.renderedAnchorrNodes:n.header,buffer:0,promoteId:"index"},"layer-id":"anchorrNodes",layer:{interactive:!0,type:"circle",minzoom:o.minZoom.rendered,paint:{"circle-color":"#ffffff","circle-opacity":.5,"circle-radius":["case",["boolean",["feature-state","hover"],!1],10,8],"circle-blur":["case",["boolean",["feature-state","hover"],!1],.3,0],"circle-stroke-color":e.$vuetify.theme.current.colors.darkgrey,"circle-stroke-width":2}},onClick:r.selectClick,onMouseover:r.onCursor,onMouseleave:r.offCursor,onMousedown:r.moveNode,onContextmenu:r.contextMenuNode},null,8,["source","layer","onClick","onMouseover","onMouseleave","onMousedown","onContextmenu"]),d(h,{"close-button":!1,showed:o.contextMenu.showed,coordinates:o.contextMenu.coordinates,onClose:t[1]||(t[1]=a=>o.contextMenu.showed=!1)},{default:c(()=>[_("span",{onMouseleave:t[0]||(t[0]=a=>o.contextMenu.showed=!1)},[d(F,{density:"compact"},{default:c(()=>[(f(!0),g(R,null,E(o.contextMenu.actions,a=>(f(),B(P,{key:a.id},{default:c(()=>[d(z,{variant:"outlined",size:"small",onClick:p=>r.actionClick({action:a,feature:o.contextMenu.feature,coordinates:o.contextMenu.coordinates})},{default:c(()=>[j(A(e.$gettext(a)),1)]),_:2},1032,["onClick"])]),_:2},1024))),128))]),_:1})],32)]),_:1},8,["showed","coordinates"])])}const O=M(H,[["render",W]]);export{O as default};
