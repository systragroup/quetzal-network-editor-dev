import{al as H,u as K,bX as Q,ab as X,aa as z,c as a,r as j,d as Y,o as Z,f as ee,g as te,j as n,i as r,m as c,af as ae,a8 as se,D as A,L as N,B as _,C as h,W as C,ag as ne,Q as oe,am as re,aC as b,a as ie,_ as le}from"./index-BtJGpesS.js";import{S as ue}from"./SimpleForm-BBGAcMxa.js";import{W as V}from"./Warning-BIwhOVX5.js";import{M as ce}from"./Markdown-BYaAUrOe.js";import"./form-B2uRhppC.js";const de={class:"background"},me=`
# Match PT network on road network
$Probability = Emission + Transmission$ , or
 
$Probability = \\frac{1}{2} (\\frac{d_{proj}}{\\sigma} )^{power} + \\frac{1}{\\beta} |d_{dijkstra} - d_{acf}^{*}|$ 
 
\\* $d_{acf} = 0$ if use difference is false 
 

*Hidden Markov Map Matching Through Noise and Sparseness* 

*Paul Newson and John Krumm 2009*
`,pe=H({__name:"MapMatching",setup(fe){const{$gettext:i}=K(),e=Q(),v=X(),l=z(),O=a(()=>e.stateMachineArn),k=a(()=>v.rlinksIsEmpty),w=a(()=>l.linksIsEmpty),d=a(()=>e.running),D=a(()=>e.status),$=a(()=>e.error),B=a(()=>e.errorMessage),M=a(()=>e.timer),u=a(()=>e.callID),m=a(()=>e.bucket),g=a(()=>e.parameters),S=a(()=>Array.from(new Set(l.links.features.map(t=>t.properties.route_type)))),p=j([{key:"exclusions",label:"route_type exclusion",value:null,items:S.value,type:"select",multiple:!0,hint:"routes type to not mapmatch (ex subway are not on roads)"},{key:"SIGMA",label:"Sigma",value:null,type:"number",units:"meters",rules:["required"],hint:"emission probablity constant. the bigger it     is the further away a stops can be from roads."},{key:"BETA",label:"beta",value:null,type:"number",units:"meters",rules:["required"],hint:"transition probablity constant. The smaller the smaller      the difference between the as-the-crow and routing distance can be (if use difference is true)"},{key:"POWER",label:"power",value:null,type:"number",rules:["required"],hint:"Power used in the Emission Probability"},{key:"DIFF",label:"Use difference",value:null,type:"boolean",units:"bool",rules:["required"],hint:"If False, act_dist is ignore in the transition probability. This change the emission to only     consider the shortest path between nodes. "},{key:"ptMetrics",label:"Add indicators on road links",value:null,type:"boolean",units:"bool",hint:"Add PT metrics to road links (ex: number of trips & number of lines)"},{key:"keepTime",label:"keep time",value:!0,type:"boolean",units:"bool",hint:"if true. keep time and calculate speed. if false. keep speed and calcule time"}]);Y(()=>{g.value.exclusions=g.value.exclusions.filter(t=>S.value.includes(t)),p.value.forEach(t=>t.value=g.value[t.key])}),Z(()=>{e.saveParams(p.value)});const x=j();async function F(){var f;if(!await x.value.validate())return;const s=re();e.running=!0,e.setCallID(),J(),await L();const o=e.parameters,y={scenario_path_S3:u.value,launcher_arg:{training_folder:"/tmp",params:o},metadata:{user_email:(f=s.cognitoInfo)==null?void 0:f.email}};e.startExecution(O.value,y)}function J(){let s=l.tripList.length/6;function o(f,W=20,q=[12,8,4,2,1]){let G=Math.floor(f/W),I=100,P=12;for(let T of q){let E=Math.abs(G-T);E<I&&(I=E,P=T)}return P}const y=o(s,20,[12,8,4,2,1]);e.timer=s/y+20+20+10}async function L(){const t=[];t.push(b.putObject(m.value,u.value.concat("/road_links.geojson"),JSON.stringify(v.rlinks))),t.push(b.putObject(m.value,u.value.concat("/road_nodes.geojson"),JSON.stringify(v.rnodes))),t.push(b.putObject(m.value,u.value.concat("/links.geojson"),JSON.stringify(l.links))),t.push(b.putObject(m.value,u.value.concat("/nodes.geojson"),JSON.stringify(l.nodes)));try{await Promise.all(t)}catch(s){console.log("err"),ie().changeAlert(s)}}function R(){e.stopExecution()}const U=a(()=>k.value||w.value);return(t,s)=>(te(),ee("section",de,[n(oe,{class:"card"},{default:r(()=>[n(ce,{source:me}),n(V,{show:U.value,title:c(i)("need a road and a PT network"),type:"warning"},null,8,["show","title"]),n(V,{show:$.value,messages:B.value},null,8,["show","messages"]),n(ae),n(ue,{ref_key:"formRef",ref:x,modelValue:p.value,"onUpdate:modelValue":s[1]||(s[1]=o=>p.value=o)},{default:r(()=>[n(se,null,{default:r(()=>[n(N,{variant:"outlined",color:"success",loading:d.value,disabled:d.value||k.value||w.value,onClick:F},{default:r(()=>[_(h(c(i)("Process")),1)]),_:1},8,["loading","disabled"]),A(n(N,{color:"grey",variant:"text",onClick:s[0]||(s[0]=o=>R())},{default:r(()=>[_(h(c(i)("Abort")),1)]),_:1},512),[[C,d.value&&D.value==="RUNNING"]]),A(n(ne,null,{default:r(()=>[_(" ~ "+h(M.value>0?Math.ceil(M.value/60):c(i)("less than 1"))+h(c(i)(" minutes remaining")),1)]),_:1},512),[[C,d.value]])]),_:1})]),_:1},8,["modelValue"])]),_:1})]))}}),_e=le(pe,[["__scopeId","data-v-79bf3aec"]]);export{_e as default};
