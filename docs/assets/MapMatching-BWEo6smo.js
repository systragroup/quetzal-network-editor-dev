import{bG as se,u as X,r as w,bH as ne,w as oe,a as R,aa as Y,az as h,ab as Z,br as re,_ as le,c as v,z as ie,o as ue,e as m,f as I,i as s,h as l,ah as ce,B as i,C as f,j as r,g as A,aV as J,n as D,a9 as P,A as x,ax as de,I as q,J as H,ai as pe,R as me,aX as fe,a7 as ve,a2 as he,a8 as be,K as U,D as K,E as Q,aj as ge,V as ye,Q as ke,am as _e}from"./index-Ds2kUt9x.js";const xe=se("runMapMatching",()=>{const{$gettext:G}=X(),n=w("arn:aws:states:ca-central-1:142023388927:stateMachine:quetzal-mapmatching-api"),e=w("quetzal-api-bucket"),c=w("");function M(){c.value=re()}const C=w([]),{error:N,running:d,errorMessage:F,startExecution:O,status:S,stopExecution:B}=ne(n.value),b=w({SIGMA:4.02,BETA:3,POWER:2,DIFF:!0,ptMetrics:!0,keepTime:!0});function V(u){u.forEach(p=>b.value[p.name]=p.value)}oe(S,async u=>{u==="SUCCEEDED"&&(d.value=!0,await g(),await E(),d.value=!1,S.value="",R().changeNotification({text:G("PT network successfully Mapmatched. See results pages for more details."),autoClose:!1,color:"success"}))});async function g(){const u=Y();u.$reset();const p=await h.readJson(e.value,c.value.concat("/links_final.geojson")),y=await h.readJson(e.value,c.value.concat("/nodes_final.geojson"));if(u.loadPTFiles([{path:"inputs/pt/links.geojson",content:p},{path:"inputs/pt/nodes.geojson",content:y}]),b.value.ptMetrics){const k=Z();k.$reset();const T=await h.readJson(e.value,c.value.concat("/road_links.geojson")),o=await h.readJson(e.value,c.value.concat("/road_nodes.geojson"));k.loadRoadFiles([{path:"inputs/road/links.geojson",content:T},{path:"inputs/road/nodes.geojson",content:o}])}}async function E(){let u=await h.listFiles(e.value,c.value);u=u.filter(y=>y.endsWith(".csv"));const p=[];for(const y of u){let k=y.split("/").slice(-1);k="outputs/"+k;const T=await h.readBytes(e.value,y);p.push({path:k,content:T})}p.length>0&&R().loadOtherFiles(p)}return{stateMachineArn:n,bucket:e,callID:c,exclusions:C,status:S,running:d,error:N,errorMessage:F,parameters:b,saveParams:V,setCallID:M,startExecution:O,stopExecution:B,getCSVs:E}}),Me={class:"background"},we={key:1,class:"text-grey text-caption align-self-center"},Se={__name:"MapMatching",setup(G){const{$gettext:n}=X(),e=xe(),c=Z(),M=Y(),C=v(()=>c.rlinksIsEmpty),N=v(()=>M.linksIsEmpty),d=v(()=>e.running),F=v(()=>e.status),O=v(()=>e.error),S=v(()=>e.errorMessage),B=v(()=>e.timer),b=v(()=>e.callID),V=v(()=>e.bucket),g=w(!1),E=w([{name:"SIGMA",text:"Sigma",value:e.parameters.SIGMA,type:"Number",units:"meters",hint:"emission probablity constant. the bigger it     is the further away a stops can be from roads."},{name:"BETA",text:"beta",value:e.parameters.BETA,type:"Number",units:"meters",hint:"transition probablity constant. The smaller the smaller      the difference between the as-the-crow and routing distance can be (if use difference is true)"},{name:"POWER",text:"power",value:e.parameters.POWER,type:"Number",units:"meters",hint:"Power used in the Emission Probability"},{name:"DIFF",text:"Use difference",value:e.parameters.DIFF,type:"Boolean",units:"bool",hint:"If False, act_dist is ignore in the transition probability. This change the emission to only     consider the shortest path between nodes. "},{name:"ptMetrics",text:"Add indicators on road links",value:e.parameters.ptMetrics,type:"Boolean",units:"bool",hint:"Add PT metrics to road links (ex: number of trips & number of lines)"},{name:"keepTime",text:"keep time",value:e.parameters.keepTime,type:"Boolean",units:"bool",hint:"if true. keep time and calculate speed. if false. keep speed and calcule time"}]);ie(()=>{e.exclusions=e.exclusions.filter(o=>k.value.includes(o))}),ue(()=>{e.saveParams(E.value)});async function u(){const o=_e();e.running=!0,e.setCallID(),p(),await y();const a={exclusions:e.exclusions};E.value.forEach(_=>{a[_.name]=_.value});const t={scenario_path_S3:b.value,launcher_arg:{training_folder:"/tmp",params:a},metadata:{user_email:o.cognitoInfo.email}};e.startExecution(t)}function p(){let a=M.tripList.length/6;function t(j,ee=20,te=[12,8,4,2,1]){let ae=Math.floor(j/ee),L=100,W=12;for(let $ of te){let z=Math.abs(ae-$);z<L&&(L=z,W=$)}return W}const _=t(a,20,[12,8,4,2,1]);e.timer=a/_+20+20+10}async function y(){const o=[];o.push(h.putObject(V.value,b.value.concat("/road_links.geojson"),JSON.stringify(c.rlinks))),o.push(h.putObject(V.value,b.value.concat("/road_nodes.geojson"),JSON.stringify(c.rnodes))),o.push(h.putObject(V.value,b.value.concat("/links.geojson"),JSON.stringify(M.links))),o.push(h.putObject(V.value,b.value.concat("/nodes.geojson"),JSON.stringify(M.nodes)));try{await Promise.all(o)}catch(a){R().changeAlert(a)}}const k=v(()=>Array.from(new Set(M.links.features.map(o=>o.properties.route_type))));function T(){e.stopExecution()}return(o,a)=>(m(),I("section",Me,[s(ke,{class:"card"},{default:l(()=>[s(ce,null,{default:l(()=>[i(f(r(n)("Match PT network on road network")),1)]),_:1}),C.value||N.value?(m(),A(J,{key:0},{default:l(()=>[i(f(r(n)("need a road and a PT network")),1)]),_:1})):D("",!0),s(P),a[5]||(a[5]=x("p",{class:"pl-4"},[i(" Emission = 0.5 x ( dist_to_road / SIGMA ) ^ POWER "),x("br"),i(" Transition = 1 / BETA x | dijkstra_dist - acf_dist* | "),x("br"),i(" Probablity = Emission + Transition "),x("br"),i(" * If use difference is true. Else acf_dist = 0 "),x("br")],-1)),s(P),s(J,null,{default:l(()=>a[3]||(a[3]=[i(" Hidden Markov Map Matching Through Noise and Sparseness "),x("br",null,null,-1),i(" Paul Newson and John Krumm 2009 ")])),_:1}),s(P),s(J,null,{default:l(()=>[O.value?(m(),A(de,{key:0,density:"compact",width:"50rem",variant:"outlined",text:"",type:"error"},{default:l(()=>[i(f(r(n)("There as been an error Mapmatching.             Please try again. If the problem persist, contact us."))+" ",1),(m(!0),I(q,null,H(Object.keys(S.value),t=>(m(),I("p",{key:t},[x("b",null,f(t)+": ",1),i(f(S.value[t]),1)]))),128))]),_:1})):D("",!0)]),_:1}),s(pe),s(P),s(me,{modelValue:r(e).exclusions,"onUpdate:modelValue":a[0]||(a[0]=t=>r(e).exclusions=t),items:k.value,disabled:d.value,hint:g.value?r(n)("routes type to not mapmatch (ex subway are not on roads)"):"",label:"route_type exclusion",variant:"outlined",multiple:""},{selection:l(({item:t,index:_})=>[_<2?(m(),A(fe,{key:0},{default:l(()=>[x("span",null,f(t.title),1)]),_:2},1024)):D("",!0),_===2?(m(),I("span",we," (+"+f(r(e).exclusions.length-2)+" others) ",1)):D("",!0)]),_:1},8,["modelValue","items","disabled","hint"]),(m(!0),I(q,null,H(E.value,(t,_)=>(m(),I("div",{key:_,class:"items"},[t.type==="Boolean"?(m(),A(ve,{key:0,modelValue:t.value,"onUpdate:modelValue":j=>t.value=j,class:"pr-2",color:"primary",disabled:d.value,label:r(n)(t.text),hint:g.value?r(n)(t.hint):"","persistent-hint":g.value},null,8,["modelValue","onUpdate:modelValue","disabled","label","hint","persistent-hint"])):(m(),A(he,{key:1,modelValue:t.value,"onUpdate:modelValue":j=>t.value=j,type:t.type,disabled:d.value,label:r(n)(t.text),suffix:t.units,hint:g.value?r(n)(t.hint):"","persistent-hint":g.value,required:"",onWheel:()=>{}},null,8,["modelValue","onUpdate:modelValue","type","disabled","label","suffix","hint","persistent-hint"]))]))),128)),s(be,null,{default:l(()=>[s(U,{variant:"outlined",color:"success",loading:d.value,disabled:d.value||C.value||N.value,onClick:u},{default:l(()=>[i(f(r(n)("Process")),1)]),_:1},8,["loading","disabled"]),K(s(U,{color:"grey",variant:"text",onClick:a[1]||(a[1]=t=>T())},{default:l(()=>[i(f(r(n)("Abort")),1)]),_:1},512),[[Q,d.value&&F.value==="RUNNING"]]),K(s(ge,null,{default:l(()=>[i(" ~ "+f(B.value>0?Math.ceil(B.value/60):r(n)("less than 1"))+f(r(n)(" minutes remaining")),1)]),_:1},512),[[Q,d.value]]),s(P),s(U,{size:"small",onClick:a[2]||(a[2]=t=>g.value=!g.value)},{default:l(()=>[s(ye,null,{default:l(()=>a[4]||(a[4]=[i("far fa-question-circle small")])),_:1})]),_:1})]),_:1})]),_:1})]))}},Ee=le(Se,[["__scopeId","data-v-f31cdb27"]]);export{Ee as default};
