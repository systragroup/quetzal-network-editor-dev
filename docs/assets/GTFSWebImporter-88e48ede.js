import{b as O}from"./index-3c68deeb.js";import{aX as S,aY as _,aZ as C,a_ as P,aH as Y,_ as J,$ as Z,u as Q,a2 as p,j as m,az as $,an as ee,a$ as A,r as te,o as y,k as v,g as n,w as i,a6 as T,n as d,t as c,E as F,aA as B,A as x,V as E,f as G,aj as se,F as V,z as k,l as u,i as ae,R as re,G as oe,aC as ne,J as le,X as ie,Y as ce,Z as M,a4 as ue,b0 as de,b1 as he}from"./index-ce256897.js";import{M as fe,a as ye}from"./Microservices-d5c3a302.js";function pe(e,t){var s=!0;return S(e,function(a){S(t,function(l){if(s===!1)return!1;s=ge(a.geometry,l.geometry)})}),s}function ge(e,t){switch(e.type){case"Point":switch(t.type){case"Point":return!_e(e.coordinates,t.coordinates);case"LineString":return!U(t,e);case"Polygon":return!_(e,t)}break;case"LineString":switch(t.type){case"Point":return!U(e,t);case"LineString":return!me(e,t);case"Polygon":return!N(t,e)}break;case"Polygon":switch(t.type){case"Point":return!_(t,e);case"LineString":return!N(e,t);case"Polygon":return!ve(t,e)}}return!1}function U(e,t){for(var s=0;s<e.coordinates.length-1;s++)if(be(e.coordinates[s],e.coordinates[s+1],t.coordinates))return!0;return!1}function me(e,t){var s=C(e,t);return s.features.length>0}function N(e,t){for(var s=0,a=t.coordinates;s<a.length;s++){var l=a[s];if(_(l,e))return!0}var o=C(t,P(e));return o.features.length>0}function ve(e,t){for(var s=0,a=e.coordinates[0];s<a.length;s++){var l=a[s];if(_(l,t))return!0}for(var o=0,f=t.coordinates[0];o<f.length;o++){var r=f[o];if(_(r,e))return!0}var g=C(P(e),P(t));return g.features.length>0}function be(e,t,s){var a=s[0]-e[0],l=s[1]-e[1],o=t[0]-e[0],f=t[1]-e[1],r=a*f-l*o;return r!==0?!1:Math.abs(o)>=Math.abs(f)?o>0?e[0]<=s[0]&&s[0]<=t[0]:t[0]<=s[0]&&s[0]<=e[0]:f>0?e[1]<=s[1]&&s[1]<=t[1]:t[1]<=s[1]&&s[1]<=e[1]}function _e(e,t){return e[0]===t[0]&&e[1]===t[1]}function we(e,t){var s=!1;return S(e,function(a){S(t,function(l){if(s===!0)return!0;s=!pe(a.geometry,l.geometry)})}),s}var xe=function(e,t){if(e===null)throw new Error("No coordinates passed");for(var s=0;s<e.length;s++)for(var a=e[s],l=0;l<a[a.length-1].length;l++){if(a.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");if(a[a.length-1][l]!==a[0][l])throw new Error("First and last Position are not equivalent.")}var o={type:"Feature",geometry:{type:"Polygon",coordinates:e},properties:t};return o.properties||(o.properties={}),o};const Se=Y(xe);const q=e=>e,Te={name:"GTFSWebImporter",components:{MapSelector:fe},setup(){const e=ye(),t=Z(),s=Q(),a=p(!1),l=p(null),o=p({}),f=p([]),r=p([]),g=p(!1),h=p(!1),I=p(e.selectedGTFS),H=m(()=>t.linksIsEmpty),L=m(()=>e.UploadedGTFS),R=m(()=>e.callID),j=m(()=>e.running),W=m(()=>e.error),z=m(()=>e.errorMessage),X=m(()=>L.value.filter(b=>b.progress<100).length>0);$(()=>{e.saveParams(D.value),e.saveSelectedGTFS(I.value)});const D=p([{name:"start_time",text:"start time",value:e.parameters.start_time,type:"String",units:"",hint:"Start Time to restrict the GTFS in a period",rules:["required","timeRule"]},{name:"end_time",text:"end time",value:e.parameters.end_time,type:"String",units:"",hint:"End Time to restrict the GTFS in a period",rules:["required","timeRule"]},{name:"day",text:"day",value:e.parameters.day,type:"String",items:["monday","tuesday","wednesday","thursday","friday","saturday","sunday"],units:"",hint:"restrict each GTFS to this day.",rules:["required"]}]),K=/^(0?[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$/;return{showOverwriteDialog:a,poly:l,runGTFS:e,store:s,nodes:o,gtfsList:f,availableGTFS:r,selectedGTFS:I,checkall:g,showHint:h,parameters:D,rules:{required:b=>!!b||q("Required"),timeRule:b=>K.test(b)||q("invalid date time")},linksIsEmpty:H,UploadedGTFS:L,callID:R,running:j,error:W,errorMessage:z,isUploading:X}},async created(){this.gtfsList=await this.fetchCSV(),this.gtfsList.forEach((e,t)=>{try{e.bbox=O([e["location.bounding_box.minimum_longitude"],e["location.bounding_box.minimum_latitude"],e["location.bounding_box.maximum_longitude"],e["location.bounding_box.maximum_latitude"]])}catch{e.bbox=null}e.index=t}),this.gtfsList=this.gtfsList.filter(e=>e.bbox),this.gtfsList=this.gtfsList.filter(e=>e["urls.latest"].length>0),this.gtfsList.sort((e,t)=>e["location.country_code"]<t["location.country_code"]?-1:e["location.country_code"]>t["location.country_code"]?1:0)},methods:{async fetchCSV(){try{const e=await fetch("https://storage.googleapis.com/storage/v1/b/mdb-csv/o/sources.csv?alt=media",{});e.ok||this.store.changeAlert({name:"Network error",message:"cannot fetch GTFS list"});const t=await e.arrayBuffer();return ee(t)}catch(e){this.store.changeAlert(e)}},getBBOX(e){this.poly?this.poly=e:(this.poly=e,this.getAvaileGTFS())},getAvaileGTFS(){let e=null;if(this.poly.style==="bbox"){const s=this.poly.geometry;e=O([s[1],s[0],s[3],s[2]])}else e=Se([this.poly.geometry]);this.availableGTFS=this.gtfsList.filter(s=>A(e,s.bbox)||we(e,s.bbox)),this.availableGTFS.forEach(s=>s.allInPolygon=A(e,s.bbox));const t=new Set(this.availableGTFS.map(s=>s.index));this.selectedGTFS=this.selectedGTFS.filter(s=>t.has(s))},importGTFS(){if(this.linksIsEmpty){this.runGTFS.setCallID();const s={files:this.availableGTFS.filter(a=>this.selectedGTFS.includes(a.index)).map(a=>a["urls.latest"])};this.parameters.forEach(a=>{s[a.name]=a.value}),this.runGTFS.startExecution(s)}else this.showOverwriteDialog=!0},applyOverwriteDialog(){this.store.initLinks(),this.showOverwriteDialog=!1,this.importGTFS()}}},w=e=>(de("data-v-ec4dddae"),e=e(),he(),e),Fe={class:"background"},Ge={class:"params-row"},Ve={class:"list"},ke={class:"list-row"},Pe={class:"list-item-small"},Ce=w(()=>u("span",{class:"list-item-small"},"All in polygon",-1)),Ie=w(()=>u("span",{class:"list-item-small"},"Code",-1)),Le=w(()=>u("span",{class:"list-item-medium"},"Name",-1)),De=w(()=>u("span",{class:"list-item-large"},"City",-1)),Oe=w(()=>u("span",{class:"list-item-large"},"Agency",-1)),Ae={class:"list-item-small"},Be={class:"list-item-small"},Ee={class:"list-item-small"},Me={class:"list-item-medium"},Ue={class:"list-item-large"},Ne={class:"list-item-large"};function qe(e,t,s,a,l,o){const f=te("MapSelector");return y(),v("div",Fe,[n(F,{class:"card"},{default:i(()=>[n(T,{class:"subtitle"},{default:i(()=>[d(c(e.$gettext("GTFS importer")),1)]),_:1}),n(f,{onChange:o.getBBOX},null,8,["onChange"])]),_:1}),n(F,{class:"card2"},{default:i(()=>[n(T,{class:"subtitle"},{default:i(()=>[d(c(e.$gettext("Available GTFS")),1)]),_:1}),n(B,null,{default:i(()=>[d(c(e.$gettext("Data fetch from")+" https://database.mobilitydata.org/"),1)]),_:1}),n(x,{disabled:a.running,onClick:o.getAvaileGTFS},{default:i(()=>[n(E,{size:"small",style:{"margin-right":"10px"}},{default:i(()=>[d(" fa-solid fa-sync ")]),_:1}),d(" "+c(e.$gettext("fetch available GTFS")),1)]),_:1},8,["disabled","onClick"]),n(x,{loading:a.running,disabled:a.running||a.selectedGTFS.length===0,color:"success",onClick:o.importGTFS},{default:i(()=>[n(E,{size:"small",style:{"margin-right":"10px"}},{default:i(()=>[d(" fa-solid fa-play ")]),_:1}),d(" "+c(e.$gettext("Download")),1)]),_:1},8,["loading","disabled","onClick"]),n(B,null,{default:i(()=>[a.error?(y(),G(se,{key:0,density:"compact",variant:"outlined",text:"",type:"error"},{default:i(()=>[d(c(e.$gettext("There as been an error while importing OSM network.             Please try again. If the problem persist, contact us."))+" ",1),(y(!0),v(V,null,k(Object.keys(a.errorMessage),r=>(y(),v("p",{key:r},[u("b",null,c(r)+": ",1),d(c(a.errorMessage[r]),1)]))),128))]),_:1})):ae("",!0)]),_:1}),u("div",Ge,[(y(!0),v(V,null,k(a.parameters,(r,g)=>(y(),v("div",{key:g,class:"params"},[typeof r.items>"u"?(y(),G(re,{key:0,modelValue:r.value,"onUpdate:modelValue":h=>r.value=h,type:r.type,label:e.$gettext(r.text),suffix:r.units,variant:"underlined",hint:a.showHint?e.$gettext(r.hint):"","persistent-hint":a.showHint,rules:r.rules.map(h=>a.rules[h]),required:"",onWheel:()=>{}},null,8,["modelValue","onUpdate:modelValue","type","label","suffix","hint","persistent-hint","rules"])):(y(),G(oe,{key:1,modelValue:r.value,"onUpdate:modelValue":h=>r.value=h,variant:"underlined",type:r.type,items:r.items,label:e.$gettext(r.text),suffix:r.units,hint:a.showHint?e.$gettext(r.hint):"","persistent-hint":a.showHint,rules:r.rules.map(h=>a.rules[h]),required:"",onWheel:()=>{}},null,8,["modelValue","onUpdate:modelValue","type","items","label","suffix","hint","persistent-hint","rules"]))]))),128))]),u("div",Ve,[u("ul",ke,[u("span",Pe,[n(ne,{disabled:!0})]),Ce,Ie,Le,De,Oe]),(y(!0),v(V,null,k(a.availableGTFS,(r,g)=>(y(),v("ul",{key:r.index,class:"list-row"},[u("span",Ae,[n(le,{modelValue:a.selectedGTFS,"onUpdate:modelValue":t[0]||(t[0]=h=>a.selectedGTFS=h),value:r.index,label:String(g)},null,8,["modelValue","value","label"])]),u("span",Be,c(r.allInPolygon),1),u("span",Ee,c(r["location.country_code"]),1),u("span",Me,c(r["location.subdivision_name"]),1),u("span",Ue,c(r["location.municipality"]),1),u("span",Ne,c(r.provider),1)]))),128))])]),_:1}),n(ue,{modelValue:a.showOverwriteDialog,"onUpdate:modelValue":t[2]||(t[2]=r=>a.showOverwriteDialog=r),persistent:"","max-width":"500",onKeydown:[M(o.applyOverwriteDialog,["enter"]),t[3]||(t[3]=M(r=>a.showOverwriteDialog=!1,["esc"]))]},{default:i(()=>[n(F,null,{default:i(()=>[n(T,{class:"text-h5"},{default:i(()=>[d(c(e.$gettext("Overwrite current road network ?")),1)]),_:1}),n(ie,null,{default:i(()=>[n(ce),n(x,{color:"regular",onClick:t[1]||(t[1]=r=>a.showOverwriteDialog=!a.showOverwriteDialog)},{default:i(()=>[d(c(e.$gettext("No")),1)]),_:1}),n(x,{color:"primary",onClick:o.applyOverwriteDialog},{default:i(()=>[d(c(e.$gettext("Yes")),1)]),_:1},8,["onClick"])]),_:1})]),_:1})]),_:1},8,["modelValue","onKeydown"])])}const ze=J(Te,[["render",qe],["__scopeId","data-v-ec4dddae"]]);export{ze as default};
