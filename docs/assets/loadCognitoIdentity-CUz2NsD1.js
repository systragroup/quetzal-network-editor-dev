import{ba as Re,bb as A,bc as J,bd as ke,be as De,bf as _e,bg as Oe,bh as Ne,bi as $e,bj as Fe,bk as Ue,bl as Te,bm as ze,bn as Me,bo as He,bp as je,bq as Le,br as Ge,bs as qe,bt as Be,bu as We,bv as Ve,bw as Je,bx as Ke,by as Xe,bz as Ze,bA as Ye,bB as Qe,bC as et,bD as tt,bE as st,bF as nt,bG as it,bH as ot,bI as rt,bJ as at,bK as dt,bL as ct,bM as ut,bN as lt,bO as pt,bP as mt,bQ as ht,bR as h,bS as pe,bT as yt,bU as D,bV as gt,bW as ft,bX as wt,bY as me,bZ as he,b_ as ye}from"./index-CXuhfBMl.js";const l=e=>{if(e==null)return{};if(Array.isArray(e))return e.filter(t=>t!=null).map(l);if(typeof e=="object"){const t={};for(const s of Object.keys(e))e[s]!=null&&(t[s]=l(e[s]));return t}return e},K=e=>{var t,s;return Re.isInstance(e)?((t=e.headers)==null?void 0:t.date)??((s=e.headers)==null?void 0:s.Date):void 0},ge=e=>new Date(Date.now()+e),St=(e,t)=>Math.abs(ge(t).getTime()-e)>=3e5,X=(e,t)=>{const s=Date.parse(e);return St(s,t)?s-Date.now():t},x=(e,t)=>{if(!t)throw new Error(`Property \`${e}\` is not resolved for AWS SDK SigV4Auth`);return t},Et=async e=>{var d,c,u;const t=x("context",e.context),s=x("config",e.config),n=(u=(c=(d=t.endpointV2)==null?void 0:d.properties)==null?void 0:c.authSchemes)==null?void 0:u[0],r=await x("signer",s.signer)(n),o=e==null?void 0:e.signingRegion,a=e==null?void 0:e.signingName;return{config:s,signer:r,signingRegion:o,signingName:a}};class bt{async sign(t,s,n){if(!A.isInstance(t))throw new Error("The request is not an instance of `HttpRequest` and cannot be signed");const{config:i,signer:r,signingRegion:o,signingName:a}=await Et(n);return await r.sign(t,{signingDate:ge(i.systemClockOffset),signingRegion:o,signingService:a})}errorHandler(t){return s=>{const n=s.ServerTime??K(s.$response);if(n){const i=x("config",t.config),r=i.systemClockOffset;i.systemClockOffset=X(n,i.systemClockOffset),i.systemClockOffset!==r&&s.$metadata&&(s.$metadata.clockSkewCorrected=!0)}throw s}}successHandler(t,s){const n=K(t);if(n){const i=x("config",s.config);i.systemClockOffset=X(n,i.systemClockOffset)}}}class vt{constructor(t){this.authSchemes=new Map;for(const[s,n]of Object.entries(t))n!==void 0&&this.authSchemes.set(s,n)}getIdentityProvider(t){return this.authSchemes.get(t)}}class xt{async sign(t,s,n){return t}}const Ct=e=>t=>fe(t)&&t.expiration.getTime()-Date.now()<e,At=3e5,Pt=Ct(At),fe=e=>e.expiration!==void 0,It=(e,t,s)=>{if(e===void 0)return;const n=typeof e!="function"?async()=>Promise.resolve(e):e;let i,r,o,a=!1;const d=async c=>{r||(r=n(c));try{i=await r,o=!0,a=!1}finally{r=void 0}return i};return t===void 0?async c=>((!o||c!=null&&c.forceRefresh)&&(i=await d(c)),i):async c=>((!o||c!=null&&c.forceRefresh)&&(i=await d(c)),a?i:s(i)?(t(i)&&await d(c),i):(a=!0,i))},I=e=>{if(typeof e=="function")return e;const t=Promise.resolve(e);return()=>t},Rt=e=>{let t;e.credentials&&(t=It(e.credentials,Pt,fe)),t||(e.credentialDefaultProvider?t=I(e.credentialDefaultProvider(Object.assign({},e,{parentClientConfig:e}))):t=async()=>{throw new Error("`credentials` is missing")});const{signingEscapePath:s=!0,systemClockOffset:n=e.systemClockOffset||0,sha256:i}=e;let r;return e.signer?r=I(e.signer):e.regionInfoProvider?r=()=>I(e.region)().then(async o=>[await e.regionInfoProvider(o,{useFipsEndpoint:await e.useFipsEndpoint(),useDualstackEndpoint:await e.useDualstackEndpoint()})||{},o]).then(([o,a])=>{const{signingRegion:d,signingService:c}=o;e.signingRegion=e.signingRegion||d||a,e.signingName=e.signingName||c||e.serviceId;const u={...e,credentials:t,region:e.signingRegion,service:e.signingName,sha256:i,uriEscapePath:s},S=e.signerConstructor||J;return new S(u)}):r=async o=>{o=Object.assign({},{name:"sigv4",signingName:e.signingName||e.defaultSigningName,signingRegion:await I(e.region)(),properties:{}},o);const a=o.signingRegion,d=o.signingName;e.signingRegion=e.signingRegion||a,e.signingName=e.signingName||d||e.serviceId;const c={...e,credentials:t,region:e.signingRegion,service:e.signingName,sha256:i,uriEscapePath:s},u=e.signerConstructor||J;return new u(c)},{...e,systemClockOffset:n,signingEscapePath:s,credentials:t,signer:r}},F=(e,t)=>ke(e,t).then(s=>{if(s.length)try{return JSON.parse(s)}catch(n){throw(n==null?void 0:n.name)==="SyntaxError"&&Object.defineProperty(n,"$responseBodyText",{value:s}),n}return{}}),kt=async(e,t)=>{const s=await F(e,t);return s.message=s.message??s.Message,s},Dt=(e,t)=>{const s=(r,o)=>Object.keys(r).find(a=>a.toLowerCase()===o.toLowerCase()),n=r=>{let o=r;return typeof o=="number"&&(o=o.toString()),o.indexOf(",")>=0&&(o=o.split(",")[0]),o.indexOf(":")>=0&&(o=o.split(":")[0]),o.indexOf("#")>=0&&(o=o.split("#")[1]),o},i=s(e.headers,"x-amzn-errortype");if(i!==void 0)return n(e.headers[i]);if(t.code!==void 0)return n(t.code);if(t.__type!==void 0)return n(t.__type)};const _t=e=>t=>async s=>{if(!A.isInstance(s.request))return t(s);const{request:n}=s,{handlerProtocol:i=""}=e.requestHandler.metadata||{};if(i.indexOf("h2")>=0&&!n.headers[":authority"])delete n.headers.host,n.headers[":authority"]=n.hostname+(n.port?":"+n.port:"");else if(!n.headers.host){let r=n.hostname;n.port!=null&&(r+=`:${n.port}`),n.headers.host=r}return t(s)},Ot={name:"hostHeaderMiddleware",step:"build",priority:"low",tags:["HOST"],override:!0},Nt=e=>({applyToStack:t=>{t.add(_t(e),Ot)}}),$t=()=>(e,t)=>async s=>{var n,i;try{const r=await e(s),{clientName:o,commandName:a,logger:d,dynamoDbDocumentClientOptions:c={}}=t,{overrideInputFilterSensitiveLog:u,overrideOutputFilterSensitiveLog:S}=c,P=u??t.inputFilterSensitiveLog,_=S??t.outputFilterSensitiveLog,{$metadata:Pe,...Ie}=r.output;return(n=d==null?void 0:d.info)==null||n.call(d,{clientName:o,commandName:a,input:P(s.input),output:_(Ie),metadata:Pe}),r}catch(r){const{clientName:o,commandName:a,logger:d,dynamoDbDocumentClientOptions:c={}}=t,{overrideInputFilterSensitiveLog:u}=c,S=u??t.inputFilterSensitiveLog;throw(i=d==null?void 0:d.error)==null||i.call(d,{clientName:o,commandName:a,input:S(s.input),error:r,metadata:r.$metadata}),r}},Ft={name:"loggerMiddleware",tags:["LOGGER"],step:"initialize",override:!0},Ut=e=>({applyToStack:t=>{t.add($t(),Ft)}});var Z={};const Y="X-Amzn-Trace-Id",Tt="AWS_LAMBDA_FUNCTION_NAME",zt="_X_AMZN_TRACE_ID",Mt=e=>t=>async s=>{const{request:n}=s;if(!A.isInstance(n)||e.runtime!=="node"||n.headers.hasOwnProperty(Y))return t(s);const i=Z[Tt],r=Z[zt],o=a=>typeof a=="string"&&a.length>0;return o(i)&&o(r)&&(n.headers[Y]=r),t({...s,request:n})},Ht={step:"build",tags:["RECURSION_DETECTION"],name:"recursionDetectionMiddleware",override:!0,priority:"low"},jt=e=>({applyToStack:t=>{t.add(Mt(e),Ht)}});function Lt(e){return{...e,customUserAgent:typeof e.customUserAgent=="string"?[[e.customUserAgent]]:e.customUserAgent}}const we=(e,t=!1)=>{if(t){for(const s of e.split("."))if(!we(s))return!1;return!0}return!(!De(e)||e.length<3||e.length>63||e!==e.toLowerCase()||_e(e))},Gt=e=>{const t=e.split(":");if(t.length<6)return null;const[s,n,i,r,o,...a]=t;return s!=="arn"||n===""||i===""||a[0]===""?null:{partition:n,service:i,region:r,accountId:o,resourceId:a[0].includes("/")?a[0].split("/"):a}},qt=[{id:"aws",outputs:{dnsSuffix:"amazonaws.com",dualStackDnsSuffix:"api.aws",implicitGlobalRegion:"us-east-1",name:"aws",supportsDualStack:!0,supportsFIPS:!0},regionRegex:"^(us|eu|ap|sa|ca|me|af|il)\\-\\w+\\-\\d+$",regions:{"af-south-1":{description:"Africa (Cape Town)"},"ap-east-1":{description:"Asia Pacific (Hong Kong)"},"ap-northeast-1":{description:"Asia Pacific (Tokyo)"},"ap-northeast-2":{description:"Asia Pacific (Seoul)"},"ap-northeast-3":{description:"Asia Pacific (Osaka)"},"ap-south-1":{description:"Asia Pacific (Mumbai)"},"ap-south-2":{description:"Asia Pacific (Hyderabad)"},"ap-southeast-1":{description:"Asia Pacific (Singapore)"},"ap-southeast-2":{description:"Asia Pacific (Sydney)"},"ap-southeast-3":{description:"Asia Pacific (Jakarta)"},"ap-southeast-4":{description:"Asia Pacific (Melbourne)"},"aws-global":{description:"AWS Standard global region"},"ca-central-1":{description:"Canada (Central)"},"ca-west-1":{description:"Canada West (Calgary)"},"eu-central-1":{description:"Europe (Frankfurt)"},"eu-central-2":{description:"Europe (Zurich)"},"eu-north-1":{description:"Europe (Stockholm)"},"eu-south-1":{description:"Europe (Milan)"},"eu-south-2":{description:"Europe (Spain)"},"eu-west-1":{description:"Europe (Ireland)"},"eu-west-2":{description:"Europe (London)"},"eu-west-3":{description:"Europe (Paris)"},"il-central-1":{description:"Israel (Tel Aviv)"},"me-central-1":{description:"Middle East (UAE)"},"me-south-1":{description:"Middle East (Bahrain)"},"sa-east-1":{description:"South America (Sao Paulo)"},"us-east-1":{description:"US East (N. Virginia)"},"us-east-2":{description:"US East (Ohio)"},"us-west-1":{description:"US West (N. California)"},"us-west-2":{description:"US West (Oregon)"}}},{id:"aws-cn",outputs:{dnsSuffix:"amazonaws.com.cn",dualStackDnsSuffix:"api.amazonwebservices.com.cn",implicitGlobalRegion:"cn-northwest-1",name:"aws-cn",supportsDualStack:!0,supportsFIPS:!0},regionRegex:"^cn\\-\\w+\\-\\d+$",regions:{"aws-cn-global":{description:"AWS China global region"},"cn-north-1":{description:"China (Beijing)"},"cn-northwest-1":{description:"China (Ningxia)"}}},{id:"aws-us-gov",outputs:{dnsSuffix:"amazonaws.com",dualStackDnsSuffix:"api.aws",implicitGlobalRegion:"us-gov-west-1",name:"aws-us-gov",supportsDualStack:!0,supportsFIPS:!0},regionRegex:"^us\\-gov\\-\\w+\\-\\d+$",regions:{"aws-us-gov-global":{description:"AWS GovCloud (US) global region"},"us-gov-east-1":{description:"AWS GovCloud (US-East)"},"us-gov-west-1":{description:"AWS GovCloud (US-West)"}}},{id:"aws-iso",outputs:{dnsSuffix:"c2s.ic.gov",dualStackDnsSuffix:"c2s.ic.gov",implicitGlobalRegion:"us-iso-east-1",name:"aws-iso",supportsDualStack:!1,supportsFIPS:!0},regionRegex:"^us\\-iso\\-\\w+\\-\\d+$",regions:{"aws-iso-global":{description:"AWS ISO (US) global region"},"us-iso-east-1":{description:"US ISO East"},"us-iso-west-1":{description:"US ISO WEST"}}},{id:"aws-iso-b",outputs:{dnsSuffix:"sc2s.sgov.gov",dualStackDnsSuffix:"sc2s.sgov.gov",implicitGlobalRegion:"us-isob-east-1",name:"aws-iso-b",supportsDualStack:!1,supportsFIPS:!0},regionRegex:"^us\\-isob\\-\\w+\\-\\d+$",regions:{"aws-iso-b-global":{description:"AWS ISOB (US) global region"},"us-isob-east-1":{description:"US ISOB East (Ohio)"}}},{id:"aws-iso-e",outputs:{dnsSuffix:"cloud.adc-e.uk",dualStackDnsSuffix:"cloud.adc-e.uk",implicitGlobalRegion:"eu-isoe-west-1",name:"aws-iso-e",supportsDualStack:!1,supportsFIPS:!0},regionRegex:"^eu\\-isoe\\-\\w+\\-\\d+$",regions:{}},{id:"aws-iso-f",outputs:{dnsSuffix:"csp.hci.ic.gov",dualStackDnsSuffix:"csp.hci.ic.gov",implicitGlobalRegion:"us-isof-south-1",name:"aws-iso-f",supportsDualStack:!1,supportsFIPS:!0},regionRegex:"^us\\-isof\\-\\w+\\-\\d+$",regions:{}}],Bt="1.1",Wt={partitions:qt,version:Bt};let Vt=Wt;const Jt=e=>{const{partitions:t}=Vt;for(const n of t){const{regions:i,outputs:r}=n;for(const[o,a]of Object.entries(i))if(o===e)return{...r,...a}}for(const n of t){const{regionRegex:i,outputs:r}=n;if(new RegExp(i).test(e))return{...r}}const s=t.find(n=>n.id==="aws");if(!s)throw new Error("Provided region was not found in the partition array or regex, and default partition with id 'aws' doesn't exist.");return{...s.outputs}},Kt={isVirtualHostableS3Bucket:we,parseArn:Gt,partition:Jt};Oe.aws=Kt;const Q="user-agent",O="x-amz-user-agent",ee=" ",N="/",Xt=/[^\!\$\%\&\'\*\+\-\.\^\_\`\|\~\d\w]/g,Zt=/[^\!\$\%\&\'\*\+\-\.\^\_\`\|\~\d\w\#]/g,te="-",Yt=e=>(t,s)=>async n=>{var S,P;const{request:i}=n;if(!A.isInstance(i))return t(n);const{headers:r}=i,o=((S=s==null?void 0:s.userAgent)==null?void 0:S.map($))||[],a=(await e.defaultUserAgentProvider()).map($),d=((P=e==null?void 0:e.customUserAgent)==null?void 0:P.map($))||[],c=[].concat([...a,...o,...d]).join(ee),u=[...a.filter(_=>_.startsWith("aws-sdk-")),...d].join(ee);return e.runtime!=="browser"?(u&&(r[O]=r[O]?`${r[Q]} ${u}`:u),r[Q]=c):r[O]=c,t({...n,request:i})},$=e=>{var o;const t=e[0].split(N).map(a=>a.replace(Xt,te)).join(N),s=(o=e[1])==null?void 0:o.replace(Zt,te),n=t.indexOf(N),i=t.substring(0,n);let r=t.substring(n+1);return i==="api"&&(r=r.toLowerCase()),[i,r,s].filter(a=>a&&a.length>0).reduce((a,d,c)=>{switch(c){case 0:return d;case 1:return`${a}/${d}`;default:return`${a}#${d}`}},"")},Qt={name:"getUserAgentMiddleware",step:"build",priority:"low",tags:["SET_USER_AGENT","USER_AGENT"],override:!0},es=e=>({applyToStack:t=>{t.add(Yt(e),Qt)}}),ts=async(e,t,s)=>({operation:Ne(t).operation,region:await $e(e.region)()||(()=>{throw new Error("expected `region` to be configured for `aws.auth#sigv4`")})()});function ss(e){return{schemeId:"aws.auth#sigv4",signingProperties:{name:"cognito-identity",region:e.region},propertiesExtractor:(t,s)=>({signingProperties:{config:t,context:s}})}}function R(e){return{schemeId:"smithy.api#noAuth"}}const ns=e=>{const t=[];switch(e.operation){case"GetCredentialsForIdentity":{t.push(R());break}case"GetId":{t.push(R());break}case"GetOpenIdToken":{t.push(R());break}case"UnlinkIdentity":{t.push(R());break}default:t.push(ss(e))}return t},is=e=>({...Rt(e)}),os=e=>({...e,useDualstackEndpoint:e.useDualstackEndpoint??!1,useFipsEndpoint:e.useFipsEndpoint??!1,defaultSigningName:"cognito-identity"}),Se={UseFIPS:{type:"builtInParams",name:"useFipsEndpoint"},Endpoint:{type:"builtInParams",name:"endpoint"},Region:{type:"builtInParams",name:"region"},UseDualStack:{type:"builtInParams",name:"useDualstackEndpoint"}},rs="@aws-sdk/client-cognito-identity",as="AWS SDK for JavaScript Cognito Identity Client for Node.js, Browser and React Native",ds="3.533.0",cs={build:"concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'","build:cjs":"node ../../scripts/compilation/inline client-cognito-identity","build:es":"tsc -p tsconfig.es.json","build:include:deps":"lerna run --scope $npm_package_name --include-dependencies build","build:types":"tsc -p tsconfig.types.json","build:types:downlevel":"downlevel-dts dist-types dist-types/ts3.4",clean:"rimraf ./dist-* && rimraf *.tsbuildinfo","extract:docs":"api-extractor run --local","generate:client":"node ../../scripts/generate-clients/single-service --solo cognito-identity","test:e2e":"ts-mocha test/**/*.ispec.ts && karma start karma.conf.js"},us="./dist-cjs/index.js",ls="./dist-types/index.d.ts",ps="./dist-es/index.js",ms=!1,hs={"@aws-crypto/sha256-browser":"3.0.0","@aws-crypto/sha256-js":"3.0.0","@aws-sdk/client-sts":"3.533.0","@aws-sdk/core":"3.533.0","@aws-sdk/credential-provider-node":"3.533.0","@aws-sdk/middleware-host-header":"3.533.0","@aws-sdk/middleware-logger":"3.533.0","@aws-sdk/middleware-recursion-detection":"3.533.0","@aws-sdk/middleware-user-agent":"3.533.0","@aws-sdk/region-config-resolver":"3.533.0","@aws-sdk/types":"3.533.0","@aws-sdk/util-endpoints":"3.533.0","@aws-sdk/util-user-agent-browser":"3.533.0","@aws-sdk/util-user-agent-node":"3.533.0","@smithy/config-resolver":"^2.1.5","@smithy/core":"^1.3.8","@smithy/fetch-http-handler":"^2.4.5","@smithy/hash-node":"^2.1.4","@smithy/invalid-dependency":"^2.1.4","@smithy/middleware-content-length":"^2.1.4","@smithy/middleware-endpoint":"^2.4.6","@smithy/middleware-retry":"^2.1.7","@smithy/middleware-serde":"^2.2.1","@smithy/middleware-stack":"^2.1.4","@smithy/node-config-provider":"^2.2.5","@smithy/node-http-handler":"^2.4.3","@smithy/protocol-http":"^3.2.2","@smithy/smithy-client":"^2.4.5","@smithy/types":"^2.11.0","@smithy/url-parser":"^2.1.4","@smithy/util-base64":"^2.2.1","@smithy/util-body-length-browser":"^2.1.1","@smithy/util-body-length-node":"^2.2.2","@smithy/util-defaults-mode-browser":"^2.1.7","@smithy/util-defaults-mode-node":"^2.2.7","@smithy/util-endpoints":"^1.1.5","@smithy/util-middleware":"^2.1.4","@smithy/util-retry":"^2.1.4","@smithy/util-utf8":"^2.2.0",tslib:"^2.5.0"},ys={"@aws-sdk/client-iam":"3.533.0","@smithy/service-client-documentation-generator":"^2.1.1","@tsconfig/node14":"1.0.3","@types/chai":"^4.2.11","@types/mocha":"^8.0.4","@types/node":"^14.14.31",concurrently:"7.0.0","downlevel-dts":"0.10.1",rimraf:"3.0.2",typescript:"~4.9.5"},gs={node:">=14.0.0"},fs={"<4.0":{"dist-types/*":["dist-types/ts3.4/*"]}},ws=["dist-*/**"],Ss={name:"AWS SDK for JavaScript Team",url:"https://aws.amazon.com/javascript/"},Es="Apache-2.0",bs={"./dist-es/runtimeConfig":"./dist-es/runtimeConfig.browser"},vs="https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-cognito-identity",xs={type:"git",url:"https://github.com/aws/aws-sdk-js-v3.git",directory:"clients/client-cognito-identity"},Cs={name:rs,description:as,version:ds,scripts:cs,main:us,types:ls,module:ps,sideEffects:ms,dependencies:hs,devDependencies:ys,engines:gs,typesVersions:fs,files:ws,author:Ss,license:Es,browser:bs,"react-native":{"./dist-es/runtimeConfig":"./dist-es/runtimeConfig.native"},homepage:vs,repository:xs},As=({serviceId:e,clientVersion:t})=>async()=>{var i,r,o,a,d;const s=typeof window<"u"&&((i=window==null?void 0:window.navigator)!=null&&i.userAgent)?Fe.parse(window.navigator.userAgent):void 0,n=[["aws-sdk-js",t],["ua","2.0"],[`os/${((r=s==null?void 0:s.os)==null?void 0:r.name)||"other"}`,(o=s==null?void 0:s.os)==null?void 0:o.version],["lang/js"],["md/browser",`${((a=s==null?void 0:s.browser)==null?void 0:a.name)??"unknown"}_${((d=s==null?void 0:s.browser)==null?void 0:d.version)??"unknown"}`]];return e&&n.push([`api/${e}`,t]),n},Ee="required",g="fn",f="argv",b="ref",se=!0,ne="isSet",C="booleanEquals",E="error",v="endpoint",w="tree",U="PartitionResult",ie={[Ee]:!1,type:"String"},oe={[Ee]:!0,default:!1,type:"Boolean"},re={[b]:"Endpoint"},be={[g]:C,[f]:[{[b]:"UseFIPS"},!0]},ve={[g]:C,[f]:[{[b]:"UseDualStack"},!0]},y={},ae={[g]:"getAttr",[f]:[{[b]:U},"supportsFIPS"]},de={[g]:C,[f]:[!0,{[g]:"getAttr",[f]:[{[b]:U},"supportsDualStack"]}]},ce=[be],ue=[ve],le=[{[b]:"Region"}],Ps={version:"1.0",parameters:{Region:ie,UseDualStack:oe,UseFIPS:oe,Endpoint:ie},rules:[{conditions:[{[g]:ne,[f]:[re]}],rules:[{conditions:ce,error:"Invalid Configuration: FIPS and custom endpoint are not supported",type:E},{conditions:ue,error:"Invalid Configuration: Dualstack and custom endpoint are not supported",type:E},{endpoint:{url:re,properties:y,headers:y},type:v}],type:w},{conditions:[{[g]:ne,[f]:le}],rules:[{conditions:[{[g]:"aws.partition",[f]:le,assign:U}],rules:[{conditions:[be,ve],rules:[{conditions:[{[g]:C,[f]:[se,ae]},de],rules:[{endpoint:{url:"https://cognito-identity-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",properties:y,headers:y},type:v}],type:w},{error:"FIPS and DualStack are enabled, but this partition does not support one or both",type:E}],type:w},{conditions:ce,rules:[{conditions:[{[g]:C,[f]:[ae,se]}],rules:[{endpoint:{url:"https://cognito-identity-fips.{Region}.{PartitionResult#dnsSuffix}",properties:y,headers:y},type:v}],type:w},{error:"FIPS is enabled but this partition does not support FIPS",type:E}],type:w},{conditions:ue,rules:[{conditions:[de],rules:[{endpoint:{url:"https://cognito-identity.{Region}.{PartitionResult#dualStackDnsSuffix}",properties:y,headers:y},type:v}],type:w},{error:"DualStack is enabled but this partition does not support DualStack",type:E}],type:w},{endpoint:{url:"https://cognito-identity.{Region}.{PartitionResult#dnsSuffix}",properties:y,headers:y},type:v}],type:w}],type:w},{error:"Invalid Configuration: Missing Region",type:E}]},Is=Ps,Rs=(e,t={})=>Ue(Is,{endpointParams:e,logger:t.logger}),ks=e=>({apiVersion:"2014-06-30",base64Decoder:(e==null?void 0:e.base64Decoder)??Te,base64Encoder:(e==null?void 0:e.base64Encoder)??ze,disableHostPrefix:(e==null?void 0:e.disableHostPrefix)??!1,endpointProvider:(e==null?void 0:e.endpointProvider)??Rs,extensions:(e==null?void 0:e.extensions)??[],httpAuthSchemeProvider:(e==null?void 0:e.httpAuthSchemeProvider)??ns,httpAuthSchemes:(e==null?void 0:e.httpAuthSchemes)??[{schemeId:"aws.auth#sigv4",identityProvider:t=>t.getIdentityProvider("aws.auth#sigv4"),signer:new bt},{schemeId:"smithy.api#noAuth",identityProvider:t=>t.getIdentityProvider("smithy.api#noAuth")||(async()=>({})),signer:new xt}],logger:(e==null?void 0:e.logger)??new Me,serviceId:(e==null?void 0:e.serviceId)??"Cognito Identity",urlParser:(e==null?void 0:e.urlParser)??He,utf8Decoder:(e==null?void 0:e.utf8Decoder)??je,utf8Encoder:(e==null?void 0:e.utf8Encoder)??Le}),Ds=e=>{const t=Ye(e),s=()=>t().then(Qe),n=ks(e);return{...n,...e,runtime:"browser",defaultsMode:t,bodyLengthChecker:(e==null?void 0:e.bodyLengthChecker)??Ge,credentialDefaultProvider:(e==null?void 0:e.credentialDefaultProvider)??(i=>()=>Promise.reject(new Error("Credential is missing"))),defaultUserAgentProvider:(e==null?void 0:e.defaultUserAgentProvider)??As({serviceId:n.serviceId,clientVersion:Cs.version}),maxAttempts:(e==null?void 0:e.maxAttempts)??qe,region:(e==null?void 0:e.region)??Be("Region is missing"),requestHandler:We.create((e==null?void 0:e.requestHandler)??s),retryMode:(e==null?void 0:e.retryMode)??(async()=>(await s()).retryMode||Ve),sha256:(e==null?void 0:e.sha256)??Je.Sha256,streamCollector:(e==null?void 0:e.streamCollector)??Ke,useDualstackEndpoint:(e==null?void 0:e.useDualstackEndpoint)??(()=>Promise.resolve(Xe)),useFipsEndpoint:(e==null?void 0:e.useFipsEndpoint)??(()=>Promise.resolve(Ze))}},_s=e=>{const t=e.httpAuthSchemes;let s=e.httpAuthSchemeProvider,n=e.credentials;return{setHttpAuthScheme(i){const r=t.findIndex(o=>o.schemeId===i.schemeId);r===-1?t.push(i):t.splice(r,1,i)},httpAuthSchemes(){return t},setHttpAuthSchemeProvider(i){s=i},httpAuthSchemeProvider(){return s},setCredentials(i){n=i},credentials(){return n}}},Os=e=>({httpAuthSchemes:e.httpAuthSchemes(),httpAuthSchemeProvider:e.httpAuthSchemeProvider(),credentials:e.credentials()}),k=e=>e,Ns=(e,t)=>{const s={...k(ot(e)),...k(et(e)),...k(tt(e)),...k(_s(e))};return t.forEach(n=>n.configure(s)),{...e,...st(s),...nt(s),...it(s),...Os(s)}};class Qs extends rt{constructor(...[t]){const s=Ds(t||{}),n=os(s),i=at(n),r=dt(i),o=ct(r),a=o,d=Lt(a),c=is(d),u=Ns(c,(t==null?void 0:t.extensions)||[]);super(u),this.config=u,this.middlewareStack.use(ut(this.config)),this.middlewareStack.use(lt(this.config)),this.middlewareStack.use(Nt(this.config)),this.middlewareStack.use(Ut(this.config)),this.middlewareStack.use(jt(this.config)),this.middlewareStack.use(es(this.config)),this.middlewareStack.use(pt(this.config,{httpAuthSchemeParametersProvider:this.getDefaultHttpAuthSchemeParametersProvider(),identityProviderConfigProvider:this.getIdentityProviderConfigProvider()})),this.middlewareStack.use(mt(this.config))}destroy(){super.destroy()}getDefaultHttpAuthSchemeParametersProvider(){return ts}getIdentityProviderConfigProvider(){return async t=>new vt({"aws.auth#sigv4":t.credentials})}}class p extends ht{constructor(t){super(t),Object.setPrototypeOf(this,p.prototype)}}class T extends p{constructor(t){super({name:"InternalErrorException",$fault:"server",...t}),this.name="InternalErrorException",this.$fault="server",Object.setPrototypeOf(this,T.prototype)}}class z extends p{constructor(t){super({name:"InvalidParameterException",$fault:"client",...t}),this.name="InvalidParameterException",this.$fault="client",Object.setPrototypeOf(this,z.prototype)}}class M extends p{constructor(t){super({name:"LimitExceededException",$fault:"client",...t}),this.name="LimitExceededException",this.$fault="client",Object.setPrototypeOf(this,M.prototype)}}class H extends p{constructor(t){super({name:"NotAuthorizedException",$fault:"client",...t}),this.name="NotAuthorizedException",this.$fault="client",Object.setPrototypeOf(this,H.prototype)}}class j extends p{constructor(t){super({name:"ResourceConflictException",$fault:"client",...t}),this.name="ResourceConflictException",this.$fault="client",Object.setPrototypeOf(this,j.prototype)}}class L extends p{constructor(t){super({name:"TooManyRequestsException",$fault:"client",...t}),this.name="TooManyRequestsException",this.$fault="client",Object.setPrototypeOf(this,L.prototype)}}class G extends p{constructor(t){super({name:"ResourceNotFoundException",$fault:"client",...t}),this.name="ResourceNotFoundException",this.$fault="client",Object.setPrototypeOf(this,G.prototype)}}class q extends p{constructor(t){super({name:"ExternalServiceException",$fault:"client",...t}),this.name="ExternalServiceException",this.$fault="client",Object.setPrototypeOf(this,q.prototype)}}class B extends p{constructor(t){super({name:"InvalidIdentityPoolConfigurationException",$fault:"client",...t}),this.name="InvalidIdentityPoolConfigurationException",this.$fault="client",Object.setPrototypeOf(this,B.prototype)}}class W extends p{constructor(t){super({name:"DeveloperUserAlreadyRegisteredException",$fault:"client",...t}),this.name="DeveloperUserAlreadyRegisteredException",this.$fault="client",Object.setPrototypeOf(this,W.prototype)}}class V extends p{constructor(t){super({name:"ConcurrentModificationException",$fault:"client",...t}),this.name="ConcurrentModificationException",this.$fault="client",Object.setPrototypeOf(this,V.prototype)}}const $s=async(e,t)=>{const s=Ae("GetCredentialsForIdentity");let n;return n=JSON.stringify(l(e)),Ce(t,s,"/",void 0,n)},Fs=async(e,t)=>{const s=Ae("GetId");let n;return n=JSON.stringify(l(e)),Ce(t,s,"/",void 0,n)},Us=async(e,t)=>{if(e.statusCode>=300)return xe(e,t);const s=await F(e.body,t);let n={};return n=Xs(s),{$metadata:m(e),...n}},Ts=async(e,t)=>{if(e.statusCode>=300)return xe(e,t);const s=await F(e.body,t);let n={};return n=l(s),{$metadata:m(e),...n}},xe=async(e,t)=>{const s={...e,body:await kt(e.body,t)},n=Dt(e,s.body);switch(n){case"InternalErrorException":case"com.amazonaws.cognitoidentity#InternalErrorException":throw await js(s);case"InvalidParameterException":case"com.amazonaws.cognitoidentity#InvalidParameterException":throw await Gs(s);case"LimitExceededException":case"com.amazonaws.cognitoidentity#LimitExceededException":throw await qs(s);case"NotAuthorizedException":case"com.amazonaws.cognitoidentity#NotAuthorizedException":throw await Bs(s);case"ResourceConflictException":case"com.amazonaws.cognitoidentity#ResourceConflictException":throw await Ws(s);case"TooManyRequestsException":case"com.amazonaws.cognitoidentity#TooManyRequestsException":throw await Js(s);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentity#ResourceNotFoundException":throw await Vs(s);case"ExternalServiceException":case"com.amazonaws.cognitoidentity#ExternalServiceException":throw await Hs(s);case"InvalidIdentityPoolConfigurationException":case"com.amazonaws.cognitoidentity#InvalidIdentityPoolConfigurationException":throw await Ls(s);case"DeveloperUserAlreadyRegisteredException":case"com.amazonaws.cognitoidentity#DeveloperUserAlreadyRegisteredException":throw await Ms(s);case"ConcurrentModificationException":case"com.amazonaws.cognitoidentity#ConcurrentModificationException":throw await zs(s);default:const i=s.body;return Zs({output:e,parsedBody:i,errorCode:n})}},zs=async(e,t)=>{const s=e.body,n=l(s),i=new V({$metadata:m(e),...n});return h(i,s)},Ms=async(e,t)=>{const s=e.body,n=l(s),i=new W({$metadata:m(e),...n});return h(i,s)},Hs=async(e,t)=>{const s=e.body,n=l(s),i=new q({$metadata:m(e),...n});return h(i,s)},js=async(e,t)=>{const s=e.body,n=l(s),i=new T({$metadata:m(e),...n});return h(i,s)},Ls=async(e,t)=>{const s=e.body,n=l(s),i=new B({$metadata:m(e),...n});return h(i,s)},Gs=async(e,t)=>{const s=e.body,n=l(s),i=new z({$metadata:m(e),...n});return h(i,s)},qs=async(e,t)=>{const s=e.body,n=l(s),i=new M({$metadata:m(e),...n});return h(i,s)},Bs=async(e,t)=>{const s=e.body,n=l(s),i=new H({$metadata:m(e),...n});return h(i,s)},Ws=async(e,t)=>{const s=e.body,n=l(s),i=new j({$metadata:m(e),...n});return h(i,s)},Vs=async(e,t)=>{const s=e.body,n=l(s),i=new G({$metadata:m(e),...n});return h(i,s)},Js=async(e,t)=>{const s=e.body,n=l(s),i=new L({$metadata:m(e),...n});return h(i,s)},Ks=(e,t)=>pe(e,{AccessKeyId:D,Expiration:s=>gt(ft(wt(s))),SecretKey:D,SessionToken:D}),Xs=(e,t)=>pe(e,{Credentials:s=>Ks(s),IdentityId:D}),m=e=>({httpStatusCode:e.statusCode,requestId:e.headers["x-amzn-requestid"]??e.headers["x-amzn-request-id"]??e.headers["x-amz-request-id"],extendedRequestId:e.headers["x-amz-id-2"],cfId:e.headers["x-amz-cf-id"]}),Zs=yt(p),Ce=async(e,t,s,n,i)=>{const{hostname:r,protocol:o="https",port:a,path:d}=await e.endpoint(),c={protocol:o,hostname:r,port:a,method:"POST",path:d.endsWith("/")?d.slice(0,-1)+s:d+s,headers:t};return n!==void 0&&(c.hostname=n),i!==void 0&&(c.body=i),new A(c)};function Ae(e){return{"content-type":"application/x-amz-json-1.1","x-amz-target":`AWSCognitoIdentityService.${e}`}}class en extends me.classBuilder().ep({...Se}).m(function(t,s,n,i){return[he(n,this.serialize,this.deserialize),ye(n,t.getEndpointParameterInstructions())]}).s("AWSCognitoIdentityService","GetCredentialsForIdentity",{}).n("CognitoIdentityClient","GetCredentialsForIdentityCommand").f(void 0,void 0).ser($s).de(Us).build(){}class tn extends me.classBuilder().ep({...Se}).m(function(t,s,n,i){return[he(n,this.serialize,this.deserialize),ye(n,t.getEndpointParameterInstructions())]}).s("AWSCognitoIdentityService","GetId",{}).n("CognitoIdentityClient","GetIdCommand").f(void 0,void 0).ser(Fs).de(Ts).build(){}export{Qs as CognitoIdentityClient,en as GetCredentialsForIdentityCommand,tn as GetIdCommand};
