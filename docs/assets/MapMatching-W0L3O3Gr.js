import{b$ as se,u as X,r as M,c0 as ne,w as oe,a as D,a8 as Y,ay as h,a9 as Z,br as re,_ as le,c as v,v as ie,o as ue,b as m,x as T,f as s,e as l,ae as ce,z as i,A as f,g as r,d as A,a$ as J,k as j,a7 as P,y as x,av as de,G as z,H,af as pe,P as me,b1 as fe,a5 as ve,a0 as he,a6 as be,I as L,B as K,C as Q,ag as ge,V as ke,O as ye,ak as _e}from"./index-CLEV2XVf.js";const xe=se("runMapMatching",()=>{const{$gettext:G}=X(),n=M("arn:aws:states:ca-central-1:142023388927:stateMachine:quetzal-mapmatching-api"),e=M("quetzal-api-bucket"),d=M("");function w(){d.value=re()}const C=M([]),{error:B,running:p,errorMessage:F,startExecution:U,status:S,stopExecution:O}=ne(n.value),b=M({SIGMA:4.02,BETA:3,POWER:2,DIFF:!0,ptMetrics:!0,keepTime:!0});function V(c){c.forEach(u=>b.value[u.name]=u.value)}oe(S,async c=>{c==="SUCCEEDED"&&(p.value=!0,await g(),await I(),p.value=!1,S.value="",D().changeNotification({text:G("PT network successfully Mapmatched. See results pages for more details."),autoClose:!1,color:"success"}))});async function g(){const c=D();c.initLinks();const u=Y();u.unloadFiles();const k=await h.readJson(e.value,d.value.concat("/links_final.geojson"));u.appendNewLinks(k);const _=await h.readJson(e.value,d.value.concat("/nodes_final.geojson"));if(u.appendNewNodes(_),b.value.ptMetrics){c.initrLinks();const E=Z(),o=await h.readJson(e.value,d.value.concat("/road_links.geojson")),a=await h.readJson(e.value,d.value.concat("/road_nodes.geojson"));E.loadrLinks(o),E.loadrNodes(a)}}async function I(){let c=await h.listFiles(e.value,d.value);c=c.filter(k=>k.endsWith(".csv"));const u=[];for(const k of c){let _=k.split("/").slice(-1);_="outputs/"+_;const E=await h.readBytes(e.value,k);u.push({path:_,content:E})}u.length>0&&D().loadOtherFiles(u)}return{stateMachineArn:n,bucket:e,callID:d,exclusions:C,status:S,running:p,error:B,errorMessage:F,parameters:b,saveParams:V,setCallID:w,startExecution:U,stopExecution:O,getCSVs:I}}),we={class:"background"},Me={key:1,class:"text-grey text-caption align-self-center"},Se={__name:"MapMatching",setup(G){const{$gettext:n}=X(),e=xe(),d=Z(),w=Y(),C=v(()=>d.rlinksIsEmpty),B=v(()=>w.linksIsEmpty),p=v(()=>e.running),F=v(()=>e.status),U=v(()=>e.error),S=v(()=>e.errorMessage),O=v(()=>e.timer),b=v(()=>e.callID),V=v(()=>e.bucket),g=M(!1),I=M([{name:"SIGMA",text:"Sigma",value:e.parameters.SIGMA,type:"Number",units:"meters",hint:"emission probablity constant. the bigger it     is the further away a stops can be from roads."},{name:"BETA",text:"beta",value:e.parameters.BETA,type:"Number",units:"meters",hint:"transition probablity constant. The smaller the smaller      the difference between the as-the-crow and routing distance can be (if use difference is true)"},{name:"POWER",text:"power",value:e.parameters.POWER,type:"Number",units:"meters",hint:"Power used in the Emission Probability"},{name:"DIFF",text:"Use difference",value:e.parameters.DIFF,type:"Boolean",units:"bool",hint:"If False, act_dist is ignore in the transition probability. This change the emission to only     consider the shortest path between nodes. "},{name:"ptMetrics",text:"Add indicators on road links",value:e.parameters.ptMetrics,type:"Boolean",units:"bool",hint:"Add PT metrics to road links (ex: number of trips & number of lines)"},{name:"keepTime",text:"keep time",value:e.parameters.keepTime,type:"Boolean",units:"bool",hint:"if true. keep time and calculate speed. if false. keep speed and calcule time"}]);ie(()=>{e.exclusions=e.exclusions.filter(o=>_.value.includes(o))}),ue(()=>{e.saveParams(I.value)});async function c(){const o=_e();e.running=!0,e.setCallID(),u(),await k();const a={exclusions:e.exclusions};I.value.forEach(y=>{a[y.name]=y.value});const t={scenario_path_S3:b.value,launcher_arg:{training_folder:"/tmp",params:a},metadata:{user_email:o.cognitoInfo.email}};e.startExecution(t)}function u(){let a=w.tripId.length/6;function t(N,ee=20,te=[12,8,4,2,1]){let ae=Math.floor(N/ee),R=100,W=12;for(let $ of te){let q=Math.abs(ae-$);q<R&&(R=q,W=$)}return W}const y=t(a,20,[12,8,4,2,1]);e.timer=a/y+20+20+10}async function k(){const o=[];o.push(h.putObject(V.value,b.value.concat("/road_links.geojson"),JSON.stringify(d.rlinks))),o.push(h.putObject(V.value,b.value.concat("/road_nodes.geojson"),JSON.stringify(d.rnodes))),o.push(h.putObject(V.value,b.value.concat("/links.geojson"),JSON.stringify(w.links))),o.push(h.putObject(V.value,b.value.concat("/nodes.geojson"),JSON.stringify(w.nodes)));try{await Promise.all(o)}catch(a){D().changeAlert(a)}}const _=v(()=>Array.from(new Set(w.links.features.map(o=>o.properties.route_type))));function E(){e.stopExecution()}return(o,a)=>(m(),T("section",we,[s(ye,{class:"card"},{default:l(()=>[s(ce,null,{default:l(()=>[i(f(r(n)("Match PT network on road network")),1)]),_:1}),C.value||B.value?(m(),A(J,{key:0},{default:l(()=>[i(f(r(n)("need a road and a PT network")),1)]),_:1})):j("",!0),s(P),a[5]||(a[5]=x("p",{class:"pl-4"},[i(" Emission = 0.5 x ( dist_to_road / SIGMA ) ^ POWER "),x("br"),i(" Transition = 1 / BETA x | dijkstra_dist - acf_dist* | "),x("br"),i(" Probablity = Emission + Transition "),x("br"),i(" * If use difference is true. Else acf_dist = 0 "),x("br")],-1)),s(P),s(J,null,{default:l(()=>a[3]||(a[3]=[i(" Hidden Markov Map Matching Through Noise and Sparseness "),x("br",null,null,-1),i(" Paul Newson and John Krumm 2009 ")])),_:1}),s(P),s(J,null,{default:l(()=>[U.value?(m(),A(de,{key:0,density:"compact",width:"50rem",variant:"outlined",text:"",type:"error"},{default:l(()=>[i(f(r(n)("There as been an error Mapmatching.             Please try again. If the problem persist, contact us."))+" ",1),(m(!0),T(z,null,H(Object.keys(S.value),t=>(m(),T("p",{key:t},[x("b",null,f(t)+": ",1),i(f(S.value[t]),1)]))),128))]),_:1})):j("",!0)]),_:1}),s(pe),s(P),s(me,{modelValue:r(e).exclusions,"onUpdate:modelValue":a[0]||(a[0]=t=>r(e).exclusions=t),items:_.value,disabled:p.value,hint:g.value?r(n)("routes type to not mapmatch (ex subway are not on roads)"):"",label:"route_type exclusion",variant:"outlined",multiple:""},{selection:l(({item:t,index:y})=>[y<2?(m(),A(fe,{key:0},{default:l(()=>[x("span",null,f(t.title),1)]),_:2},1024)):j("",!0),y===2?(m(),T("span",Me," (+"+f(r(e).exclusions.length-2)+" others) ",1)):j("",!0)]),_:1},8,["modelValue","items","disabled","hint"]),(m(!0),T(z,null,H(I.value,(t,y)=>(m(),T("div",{key:y,class:"items"},[t.type==="Boolean"?(m(),A(ve,{key:0,modelValue:t.value,"onUpdate:modelValue":N=>t.value=N,class:"pr-2",color:"primary",disabled:p.value,label:r(n)(t.text),hint:g.value?r(n)(t.hint):"","persistent-hint":g.value},null,8,["modelValue","onUpdate:modelValue","disabled","label","hint","persistent-hint"])):(m(),A(he,{key:1,modelValue:t.value,"onUpdate:modelValue":N=>t.value=N,type:t.type,disabled:p.value,label:r(n)(t.text),suffix:t.units,hint:g.value?r(n)(t.hint):"","persistent-hint":g.value,required:"",onWheel:()=>{}},null,8,["modelValue","onUpdate:modelValue","type","disabled","label","suffix","hint","persistent-hint"]))]))),128)),s(be,null,{default:l(()=>[s(L,{variant:"outlined",color:"success",loading:p.value,disabled:p.value||C.value||B.value,onClick:c},{default:l(()=>[i(f(r(n)("Process")),1)]),_:1},8,["loading","disabled"]),K(s(L,{color:"grey",variant:"text",onClick:a[1]||(a[1]=t=>E())},{default:l(()=>[i(f(r(n)("Abort")),1)]),_:1},512),[[Q,p.value&&F.value==="RUNNING"]]),K(s(ge,null,{default:l(()=>[i(" ~ "+f(O.value>0?Math.ceil(O.value/60):r(n)("less than 1"))+f(r(n)(" minutes remaining")),1)]),_:1},512),[[Q,p.value]]),s(P),s(L,{size:"small",onClick:a[2]||(a[2]=t=>g.value=!g.value)},{default:l(()=>[s(ke,null,{default:l(()=>a[4]||(a[4]=[i("far fa-question-circle small")])),_:1})]),_:1})]),_:1})]),_:1})]))}},Ie=le(Se,[["__scopeId","data-v-182a78f9"]]);export{Ie as default};
