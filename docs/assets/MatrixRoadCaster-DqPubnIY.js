import{bR as re,bk as oe,a as y,aJ as v,aA as ie,bS as T,_ as ue,u as de,L as ce,r as x,c as f,o as pe,w as he,d as c,z as w,h as o,g as r,a1 as $,J as G,Z as H,s as p,t as d,i as n,f as V,$ as me,D as fe,e as D,F as U,B as q,y as K,ai as W,ay as ve,x as Y,a2 as ge,V as z,R as E,S as O,ae as xe,k as be,O as Z,aG as ye,A as _e,aK as ke}from"./index-C_PoelEO.js";const we=s=>s,Ve=re("runMRC",{state:()=>({stateMachineArn:"arn:aws:states:ca-central-1:142023388927:stateMachine:quetzal-matrixroadcaster-api",bucket:"quetzal-api-bucket",callID:"",status:"",timer:0,running:!1,executionArn:"",error:!1,errorMessage:"",parameters:{callID:"test",num_zones:100,train_size:100,date_time:"2022-12-13T08:00:21-04:00",ff_time_col:"time",max_speed:100,num_cores:1,num_random_od:1,use_zone:!1,hereApiKey:""},zoneFile:""}),actions:{cleanRun(){this.running=!1,this.executionArn="",this.error=!1},setCallID(){this.callID=oe()},setParameters(s){this.parameters=s},terminateExecution(s){this.running=!1,this.error=!0,this.errorMessage=s,this.executionArn=""},changeRunning(s){this.running=s},getApproxTimer(s){const t=this.parameters.num_zones,a=this.parameters.train_size,h=this.parameters.num_random_od;this.timer=Math.min(t,a)*1.8+s*.002+15,this.timer+=10*h},succeedExecution(){this.running=!1,this.executionArn="",y().changeNotification({text:we("Matrix Road Caster executed successfully!"),autoClose:!1,color:"success"})},async exportFiles(s){try{if(await v.putObject(this.bucket,this.callID.concat("/road_links.geojson"),JSON.stringify(s.rlinks)),await v.putObject(this.bucket,this.callID.concat("/road_nodes.geojson"),JSON.stringify(s.rnodes)),this.parameters.use_zone){const t=y(),a=ie(),h=s.selectedZoneFile,b=t.otherFiles.filter(_=>_.name===h)[0];b.content==null&&a.model!==null&&(b.content=await v.readBytes(a.model,a.scenario+"/"+b.path)),await v.putObject(this.bucket,this.callID.concat("/zones.geojson"),b.content)}}catch(t){y().changeAlert(t)}},async startExecution(s){this.getApproxTimer(s.rlinks.features.length),this.setParameters(s.parameters),this.zoneFile=s.selectedZoneFile,console.log("exporting roads to s3"),this.error=!1,this.running=!0,await this.exportFiles(s);let t={input:JSON.stringify(this.parameters),name:this.callID,stateMachineArn:this.stateMachineArn};T.client.post("",t=JSON.stringify(t)).then(a=>{this.executionArn=a.data.executionArn,this.pollExecution()}).catch(a=>{y().changeAlert(a),this.running=!1,this.status="FAILED"})},pollExecution(){const s=setInterval(()=>{let t={executionArn:this.executionArn};this.timer=this.timer-4,T.client.post("/describe",t=JSON.stringify(t)).then(a=>{this.status=a.data.status,console.log(this.status),this.status==="SUCCEEDED"?(this.succeedExecution(),clearInterval(s)):["FAILED","TIMED_OUT","ABORTED"].includes(this.status)&&(this.terminateExecution(JSON.parse(a.data.cause)),clearInterval(s))}).catch(a=>{y().changeAlert(a)})},4e3)},stopExecution(){let s={executionArn:this.executionArn};T.client.post("/abort",s=JSON.stringify(s)).then(t=>{this.terminateExecution(t.data)}).catch(t=>{y().changeAlert(t)})}}}),De={__name:"MatrixRoadCaster",setup(s){const{$gettext:t}=de(),a=Ve(),h=ce(),b=y(),_=x([]),N=x(!1),C=x(!1),Q=x(!0),S=x(!1),X=f(()=>b.otherFiles.filter(l=>l.extension==="geojson").map(l=>l.name)),j=f(()=>R.value[0].value),F=x(a.zoneFile),R=x([{name:"use_zone",text:"Use zone",value:!1,type:"Boolean",units:"",hint:"use zone",rules:[]},{name:"num_zones",text:"number of zones",value:null,type:"Number",units:"",hint:"number of zones. road nodes will be aggregate to form centroids",rules:["required","largerThanZero"]},{name:"train_size",text:"number of OD (api call)",value:null,type:"Number",units:"",hint:"number of OD to get from the API, the rest will be interpolated with ML",rules:["required","largerThanZero"]},{name:"date_time",text:"date Time",value:null,type:"String",units:"",hint:"DateTime in the past. (YYYY-MM-DDTHH:MM:SS(UTC-timezone) (-04:00 for montreal))",rules:["required","dateTimeRule"]},{name:"ff_time_col",text:"freeflow time on roads",value:null,items:h.rlineAttributes,type:"String",units:"",hint:"road links time (link length / speed) to use as a first approximation. this is the freeflow speed, or speed limit",rules:["required"]},{name:"max_speed",text:"max speed on road",value:null,type:"Number",units:"",hint:"Maximum allowed speed on a road. applying an OD matrix on the road network could result il unrealistic speed if not used.",rules:["required","largerThanZero"]},{name:"num_random_od",text:"number of OD to plot",value:null,type:"Number",units:"",hint:"number of OD calibration plot to produce. those are random OD.",rules:["required","largerThanZero"]},{name:"hereApiKey",text:"HERE api key",value:null,type:"password",units:"",hint:"HERE api key to download a set of OD",rules:["required"]}]),A=f(()=>a.bucket),k=f(()=>a.callID),J=f(()=>a.timer),I=f(()=>a.status),B=f(()=>a.running),ee=f(()=>a.error),L=f(()=>a.errorMessage);pe(()=>{const l=a.parameters;R.value.forEach(u=>u.value=l[u.name]),k.value&&P()}),he(I,l=>{l==="SUCCEEDED"&&P()});async function te(l){if(!(await l).valid)return;a.setCallID();const e={callID:k.value};R.value.forEach(g=>{e[g.name]=g.value}),a.startExecution({rlinks:h.rlinks,rnodes:h.rnodes,parameters:e,selectedZoneFile:F.value})}function ae(){a.stopExecution()}async function se(){C.value=!0;const l=await v.readJson(A.value,k.value.concat("/road_links.geojson"));h.loadrLinks(l);const u=await v.readJson(A.value,k.value.concat("/road_nodes.geojson"));h.loadrNodes(u),C.value=!1,b.changeNotification({text:t("Road links applied!"),autoClose:!0,color:"success"})}async function P(){const u=(await v.listFiles(A.value,k.value+"/")).filter(e=>e.endsWith(".png"));for(const e of u){const g=await v.getImagesURL(A.value,e);_.value.push(g)}}async function ne(){N.value=!0,await v.downloadFolder(A.value,k.value.concat("/"),"calibration report.zip"),N.value=!1}const m=x(!1),le=/^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$/,M={required:l=>!!l||t("Required"),largerThanZero:l=>l>0||t("should be larger than 0"),nonNegative:l=>l>=0||t("should be larger or equal to 0"),dateTimeRule:l=>le.test(l)||t("invalid date time")};return(l,u)=>(c(),w(W,{class:"ma-0 pa-2 background"},{default:o(()=>[r($,null,{default:o(()=>[r(G,{class:"card"},{default:o(()=>[r(H,{class:"subtitle"},{default:o(()=>[p(d(n(t)("ML Matrix Road Caster")),1)]),_:1}),V("p",null,d(n(t)("1) Find n zones centroids using a Kmean clustering on the nodes")),1),V("p",null,d(n(t)("   or import and use your own zoning.")),1),V("p",null,d(n(t)("2) Call the Here Matrix API on random OD ( around 1% is sufficient )")),1),V("p",null,d(n(t)("3) Interpolate every other OD time with an hybrid Machine learning model")),1),V("p",null,d(n(t)("4) ajust the speed on the road network to match the routing time with the OD time using an iterative algorithm")),1),r(me,{onSubmit:fe(te,["prevent"])},{default:o(()=>[(c(!0),D(U,null,q(R.value,(e,g)=>(c(),D("div",{key:g},[e.type==="password"?(c(),w(K,{key:0,modelValue:e.value,"onUpdate:modelValue":i=>e.value=i,type:S.value?"text":"password","append-icon":S.value?"fas fa-eye":"fas fa-eye-slash",label:n(t)(e.text),suffix:e.units,hint:m.value?n(t)(e.hint):"","persistent-hint":m.value,rules:e.rules.map(i=>M[i]),required:"","onClick:append":u[0]||(u[0]=i=>S.value=!S.value)},null,8,["modelValue","onUpdate:modelValue","type","append-icon","label","suffix","hint","persistent-hint","rules"])):e.type==="Boolean"?(c(),w(W,{key:1,class:"zone-row"},{default:o(()=>[r(ve,{modelValue:e.value,"onUpdate:modelValue":i=>e.value=i,class:"pr-2",color:"primary",variant:"underlined",label:n(t)(e.text),hint:m.value?n(t)(e.hint):"","persistent-hint":m.value,rules:e.rules.map(i=>M[i])},null,8,["modelValue","onUpdate:modelValue","label","hint","persistent-hint","rules"]),r(Y,{modelValue:F.value,"onUpdate:modelValue":u[1]||(u[1]=i=>F.value=i),items:X.value,disabled:!j.value},null,8,["modelValue","items","disabled"])]),_:2},1024)):typeof e.items>"u"?(c(),w(K,{key:2,modelValue:e.value,"onUpdate:modelValue":i=>e.value=i,disabled:j.value&&e.name==="num_zones",type:e.type,label:n(t)(e.text),suffix:e.units,hint:m.value?n(t)(e.hint):"","persistent-hint":m.value,rules:e.rules.map(i=>M[i]),required:"",onWheel:()=>{}},null,8,["modelValue","onUpdate:modelValue","disabled","type","label","suffix","hint","persistent-hint","rules"])):(c(),w(Y,{key:3,modelValue:e.value,"onUpdate:modelValue":i=>e.value=i,type:e.type,items:e.items.sort(),label:n(t)(e.text),suffix:e.units,hint:m.value?n(t)(e.hint):"","persistent-hint":m.value,rules:e.rules.map(i=>M[i]),required:"",onWheel:()=>{}},null,8,["modelValue","onUpdate:modelValue","type","items","label","suffix","hint","persistent-hint","rules"]))]))),128)),r(ge,null,{default:o(()=>[r(z,{color:"success",variant:"elevated",loading:B.value||I.value==="RUNNING",disabled:B.value||I.value==="RUNNING"||!Q.value,type:"submit","prepend-icon":" fa-solid fa-play"},{default:o(()=>[p(d(n(t)("Run")),1)]),_:1},8,["loading","disabled"]),E(r(z,{color:"grey",variant:"text",onClick:u[2]||(u[2]=e=>ae())},{default:o(()=>[p(d(n(t)("Abort")),1)]),_:1},512),[[O,I.value=="RUNNING"]]),E(r(xe,null,{default:o(()=>[p(" ~ "+d(J.value>0?Math.ceil(J.value/60):n(t)("less than 1"))+d(n(t)(" minutes remaining")),1)]),_:1},512),[[O,I.value=="RUNNING"]]),r(be),r(z,{size:"small",onClick:u[3]||(u[3]=e=>m.value=!m.value)},{default:o(()=>[r(Z,null,{default:o(()=>[p("far fa-question-circle small")]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})]),_:1}),r($,null,{default:o(()=>[r(G,{class:"card2"},{default:o(()=>[r(H,{class:"subtitle"},{default:o(()=>[p(d(n(t)("Calibration Results")),1)]),_:1}),E(r(z,{loading:C.value,disabled:C.value,onClick:se},{default:o(()=>[r(Z,{size:"small",style:{"margin-right":"10px"}},{default:o(()=>[p(" fa-solid fa-upload ")]),_:1}),p(" "+d(n(t)("Apply Road links to project")),1)]),_:1},8,["loading","disabled"]),[[O,_.value.length>0]]),E(r(z,{loading:N.value,disabled:N.value,onClick:ne},{default:o(()=>[r(Z,{size:"small",style:{"margin-right":"10px"}},{default:o(()=>[p(" fa-solid fa-download ")]),_:1}),p(" "+d(n(t)("Download")),1)]),_:1},8,["loading","disabled"]),[[O,_.value.length>0]]),ee.value?(c(),w(ye,{key:0,density:"compact",variant:"outlined",text:"",type:"error"},{default:o(()=>[p(d(n(t)("Service ended with an execution error or have been aborted.             Please retry. If the problem persist, contact us."))+" ",1),(c(!0),D(U,null,q(Object.keys(L.value),e=>(c(),D("p",{key:e},[V("b",null,d(e)+": ",1),p(d(L.value[e]),1)]))),128))]),_:1})):_e("",!0),(c(!0),D(U,null,q(_.value,(e,g)=>(c(),D("div",{key:g,class:"gallery"},[r(ke,{src:e,alt:"image",cover:""},null,8,["src"])]))),128))]),_:1})]),_:1})]),_:1}))}},Ie=ue(De,[["__scopeId","data-v-308ed345"]]);export{Ie as default};
