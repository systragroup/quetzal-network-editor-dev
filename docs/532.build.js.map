{"version":3,"file":"532.build.js","mappings":"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","sources":["webpack://quetzal-network-editor/./src/components/microservices/GTFSWebImporter.vue?2c93","webpack://quetzal-network-editor/./node_modules/turf-polygon/index.js","webpack://quetzal-network-editor/./src/components/microservices/GTFSWebImporter.vue?f3ad","webpack://quetzal-network-editor/./node_modules/@turf/boolean-disjoint/dist/es/index.js","webpack://quetzal-network-editor/src/components/microservices/GTFSWebImporter.vue","webpack://quetzal-network-editor/./src/components/microservices/GTFSWebImporter.vue?bdd3","webpack://quetzal-network-editor/./node_modules/@turf/boolean-intersects/dist/es/index.js","webpack://quetzal-network-editor/./src/components/microservices/GTFSWebImporter.vue?c4a7","webpack://quetzal-network-editor/./src/components/microservices/GTFSWebImporter.vue"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.card[data-v-1884303d]{height:90%;padding:2.5rem}.card2[data-v-1884303d]{height:90%;padding:2.5rem 0rem 2.5rem 2rem;margin-right:3rem}.row[data-v-1884303d]{height:100%}.col[data-v-1884303d]{max-height:100%}.card button[data-v-1884303d]{margin-top:0px}.title[data-v-1884303d]{display:flex;flex-direction:column;align-items:center;justify-content:center;font-size:3.5em;color:#b5e0d6 !important;font-weight:bold}.subtitle[data-v-1884303d]{font-size:2em;color:var(--v-secondary-dark);font-weight:bold;margin:10px;margin-left:0px}.card button[data-v-1884303d]{margin-top:0px}.background[data-v-1884303d]{background-color:var(--v-background-base)}.params-row[data-v-1884303d]{display:flex;align-items:center;margin-right:1rem;padding-top:.5rem;justify-content:flex-start;gap:1rem}.list[data-v-1884303d]{height:80%;margin-top:1rem;overflow-y:auto;overflow-x:hidden;border-top:1px solid var(--v-background-lighten3)}.list-row[data-v-1884303d]{display:flex;padding-left:0;align-items:center;justify-content:flex-start;border-bottom:1px solid var(--v-background-lighten3)}.list-item-small[data-v-1884303d]{flex:0 0 8%;margin:4px}.list-item-medium[data-v-1884303d]{flex:0 0 18%;margin-right:2px}.list-item-large[data-v-1884303d]{flex:0 0 26%;margin:4px}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/microservices/GTFSWebImporter.vue\"],\"names\":[],\"mappings\":\"AAGA,uBACE,UAAA,CACA,cAAA,CAEF,wBACE,UAAA,CACA,+BAAA,CACA,iBAAA,CAGF,sBACE,WAAA,CAEF,sBACE,eAAA,CAEF,8BACE,cAAA,CAEF,wBACE,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,sBAAA,CACA,eAAA,CACA,wBAAA,CACA,gBAAA,CAEF,2BACE,aAAA,CACA,6BAAA,CACA,gBAAA,CACA,WAAA,CACA,eAAA,CAEF,8BACE,cAAA,CAEF,6BACE,yCAAA,CAGF,6BAEE,YAAA,CACA,kBAAA,CACA,iBAAA,CACA,iBAAA,CACA,0BAAA,CACA,QAAA,CAIF,uBACE,UAAA,CAEA,eAAA,CACA,eAAA,CACA,iBAAA,CACA,iDAAA,CAGF,2BAEE,YAAA,CACA,cAAA,CACA,kBAAA,CACA,0BAAA,CACA,oDAAA,CAGF,kCAEE,WAAA,CACA,UAAA,CAGF,mCAEE,YAAA,CACA,gBAAA,CAGF,kCAEE,YAAA,CACA,UAAA\",\"sourcesContent\":[\"@import \\\"@scss/variables.scss\\\";\\n\\n\\n.card {\\n  height: 90%;\\n  padding: 2.5rem;\\n}\\n.card2 {\\n  height: 90%;\\n  padding: 2.5rem 0rem 2.5rem 2.0rem;\\n  margin-right: 3rem;\\n\\n}\\n.row {\\n  height: 100%\\n}\\n.col {\\n  max-height: 100%;\\n}\\n.card button {\\n  margin-top: 0px;\\n}\\n.title {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: 3.5em;\\n  color: $primary !important;\\n  font-weight: bold;\\n}\\n.subtitle {\\n  font-size: 2em;\\n  color:var(--v-secondary-dark);\\n  font-weight: bold;\\n  margin: 10px;\\n  margin-left: 0px;\\n}\\n.card button {\\n  margin-top: 0px;\\n}\\n.background {\\n  background-color:var(--v-background-base);\\n}\\n\\n.params-row {\\n  /* Add individual list item styles here */\\n  display: flex; /* Use flexbox layout for each list item */\\n  align-items: center;\\n  margin-right:1rem;\\n  padding-top: 0.5rem;\\n  justify-content:flex-start;\\n  gap: 1rem;\\n\\n}\\n\\n.list {\\n  height:80%;\\n  //border: 1px solid red;\\n  margin-top:1rem;\\n  overflow-y: auto;\\n  overflow-x: hidden;\\n  border-top: 1px solid var(--v-background-lighten3);\\n\\n}\\n.list-row {\\n  /* Add individual list item styles here */\\n  display: flex; /* Use flexbox layout for each list item */\\n  padding-left:0;\\n  align-items: center;\\n  justify-content:flex-start;\\n  border-bottom: 1px solid var(--v-background-lighten3);\\n}\\n\\n.list-item-small {\\n  /* Add individual list item styles here */\\n  flex: 0 0 8%;\\n  margin:4px;\\n}\\n\\n.list-item-medium {\\n  /* Add individual list item styles here */\\n  flex: 0 0 18%;\\n  margin-right:2px;\\n}\\n\\n.list-item-large {\\n  /* Add individual list item styles here */\\n  flex: 0 0 26%;\\n  margin:4px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","/**\n * Takes an array of LinearRings and optionally an {@link Object} with properties and returns a GeoJSON {@link Polygon} feature.\n *\n * @module turf/polygon\n * @category helper\n * @param {Array<Array<Number>>} rings an array of LinearRings\n * @param {Object} properties an optional properties object\n * @return {Polygon} a Polygon feature\n * @throws {Error} throw an error if a LinearRing of the polygon has too few positions\n * or if a LinearRing of the Polygon does not have matching Positions at the\n * beginning & end.\n * @example\n * var polygon = turf.polygon([[\n *  [-2.275543, 53.464547],\n *  [-2.275543, 53.489271],\n *  [-2.215118, 53.489271],\n *  [-2.215118, 53.464547],\n *  [-2.275543, 53.464547]\n * ]], { name: 'poly1', population: 400});\n *\n * //=polygon\n */\nmodule.exports = function(coordinates, properties){\n\n  if (coordinates === null) throw new Error('No coordinates passed');\n\n  for (var i = 0; i < coordinates.length; i++) {\n    var ring = coordinates[i];\n    for (var j = 0; j < ring[ring.length - 1].length; j++) {\n      if (ring.length < 4) {\n        throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n      }\n      if (ring[ring.length - 1][j] !== ring[0][j]) {\n        throw new Error('First and last Position are not equivalent.');\n      }\n    }\n  }\n\n  var polygon = {\n    \"type\": \"Feature\",\n    \"geometry\": {\n      \"type\": \"Polygon\",\n      \"coordinates\": coordinates\n    },\n    \"properties\": properties\n  };\n\n  if (!polygon.properties) {\n    polygon.properties = {};\n  }\n\n  return polygon;\n};\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"v-row\",\n    { staticClass: \"ma-0 pa-2 background\" },\n    [\n      _c(\n        \"v-col\",\n        [\n          _c(\n            \"v-card\",\n            { staticClass: \"card\" },\n            [\n              _c(\"v-card-title\", { staticClass: \"subtitle\" }, [\n                _vm._v(\n                  \"\\n        \" +\n                    _vm._s(_vm.$gettext(\"GTFS importer\")) +\n                    \"\\n      \"\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\"MapSelector\", { on: { change: _vm.getBBOX } }),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"v-col\",\n        [\n          _c(\n            \"v-card\",\n            { staticClass: \"card2\" },\n            [\n              _c(\"v-card-title\", { staticClass: \"subtitle\" }, [\n                _vm._v(\n                  \"\\n        \" +\n                    _vm._s(_vm.$gettext(\"Available GTFS\")) +\n                    \"\\n      \"\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\"v-card-subtitle\", [\n                _vm._v(\n                  \"\\n        \" +\n                    _vm._s(\n                      _vm.$gettext(\"Data fetch from\") +\n                        \" https://database.mobilitydata.org/\"\n                    ) +\n                    \"\\n      \"\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"v-btn\",\n                {\n                  attrs: { disabled: _vm.running },\n                  on: { click: _vm.getAvaileGTFS },\n                },\n                [\n                  _c(\n                    \"v-icon\",\n                    {\n                      staticStyle: { \"margin-right\": \"10px\" },\n                      attrs: { small: \"\" },\n                    },\n                    [_vm._v(\"\\n          fa-solid fa-sync\\n        \")]\n                  ),\n                  _vm._v(\n                    \"\\n        \" +\n                      _vm._s(_vm.$gettext(\"fetch available GTFS\")) +\n                      \"\\n      \"\n                  ),\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"v-btn\",\n                {\n                  attrs: {\n                    loading: _vm.running,\n                    disabled: _vm.running || _vm.selectedGTFS.length === 0,\n                    color: \"success\",\n                  },\n                  on: { click: _vm.importGTFS },\n                },\n                [\n                  _c(\n                    \"v-icon\",\n                    {\n                      staticStyle: { \"margin-right\": \"10px\" },\n                      attrs: { small: \"\" },\n                    },\n                    [_vm._v(\"\\n          fa-solid fa-play\\n        \")]\n                  ),\n                  _vm._v(\n                    \"\\n        \" + _vm._s(_vm.$gettext(\"Download\")) + \"\\n      \"\n                  ),\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"v-card-subtitle\",\n                [\n                  _vm.error\n                    ? _c(\n                        \"v-alert\",\n                        {\n                          attrs: {\n                            dense: \"\",\n                            outlined: \"\",\n                            text: \"\",\n                            type: \"error\",\n                          },\n                        },\n                        [\n                          _vm._v(\n                            \"\\n          \" +\n                              _vm._s(\n                                _vm.$gettext(\n                                  \"There as been an error while importing OSM network. \\\n          Please try again. If the problem persist, contact us.\"\n                                )\n                              ) +\n                              \"\\n          \"\n                          ),\n                          _vm._l(Object.keys(_vm.errorMessage), function (key) {\n                            return _c(\"p\", { key: key }, [\n                              _c(\"b\", [_vm._v(_vm._s(key) + \": \")]),\n                              _vm._v(\n                                _vm._s(_vm.errorMessage[key]) + \"\\n          \"\n                              ),\n                            ])\n                          }),\n                        ],\n                        2\n                      )\n                    : _vm._e(),\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"params-row\" },\n                _vm._l(_vm.parameters, function (item, key) {\n                  return _c(\n                    \"div\",\n                    { key: key },\n                    [\n                      typeof item.items === \"undefined\"\n                        ? _c(\"v-text-field\", {\n                            attrs: {\n                              type: item.type,\n                              label: _vm.$gettext(item.text),\n                              suffix: item.units,\n                              hint: _vm.showHint ? _vm.$gettext(item.hint) : \"\",\n                              \"persistent-hint\": _vm.showHint,\n                              rules: item.rules.map((rule) => _vm.rules[rule]),\n                              required: \"\",\n                            },\n                            on: { wheel: () => {} },\n                            model: {\n                              value: item.value,\n                              callback: function ($$v) {\n                                _vm.$set(item, \"value\", $$v)\n                              },\n                              expression: \"item.value\",\n                            },\n                          })\n                        : _c(\"v-select\", {\n                            attrs: {\n                              type: item.type,\n                              items: item.items,\n                              label: _vm.$gettext(item.text),\n                              suffix: item.units,\n                              hint: _vm.showHint ? _vm.$gettext(item.hint) : \"\",\n                              \"persistent-hint\": _vm.showHint,\n                              rules: item.rules.map((rule) => _vm.rules[rule]),\n                              required: \"\",\n                            },\n                            on: { wheel: () => {} },\n                            model: {\n                              value: item.value,\n                              callback: function ($$v) {\n                                _vm.$set(item, \"value\", $$v)\n                              },\n                              expression: \"item.value\",\n                            },\n                          }),\n                    ],\n                    1\n                  )\n                }),\n                0\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"list\" },\n                [\n                  _c(\"ul\", { staticClass: \"list-row\" }, [\n                    _c(\n                      \"span\",\n                      { staticClass: \"list-item-small\" },\n                      [_c(\"v-checkbox\", { attrs: { disabled: true } })],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\"span\", { staticClass: \"list-item-small\" }, [\n                      _vm._v(\"All in polygon\"),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"span\", { staticClass: \"list-item-small\" }, [\n                      _vm._v(\"Code\"),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"span\", { staticClass: \"list-item-medium\" }, [\n                      _vm._v(\"Name\"),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"span\", { staticClass: \"list-item-large\" }, [\n                      _vm._v(\"City\"),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"span\", { staticClass: \"list-item-large\" }, [\n                      _vm._v(\"Agency\"),\n                    ]),\n                  ]),\n                  _vm._v(\" \"),\n                  _vm._l(_vm.availableGTFS, function (item, key) {\n                    return _c(\n                      \"ul\",\n                      { key: item.index, staticClass: \"list-row\" },\n                      [\n                        _c(\n                          \"span\",\n                          { staticClass: \"list-item-small\" },\n                          [\n                            _c(\"v-checkbox\", {\n                              attrs: { value: item.index, label: String(key) },\n                              model: {\n                                value: _vm.selectedGTFS,\n                                callback: function ($$v) {\n                                  _vm.selectedGTFS = $$v\n                                },\n                                expression: \"selectedGTFS\",\n                              },\n                            }),\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"list-item-small\" }, [\n                          _vm._v(_vm._s(item[\"allInPolygon\"]) + \" \"),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"list-item-small\" }, [\n                          _vm._v(_vm._s(item[\"location.country_code\"]) + \" \"),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"list-item-medium\" }, [\n                          _vm._v(_vm._s(item[\"location.subdivision_name\"])),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"list-item-large\" }, [\n                          _vm._v(_vm._s(item[\"location.municipality\"])),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"list-item-large\" }, [\n                          _vm._v(_vm._s(item.provider)),\n                        ]),\n                      ]\n                    )\n                  }),\n                ],\n                2\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import booleanPointInPolygon from \"@turf/boolean-point-in-polygon\";\nimport lineIntersect from \"@turf/line-intersect\";\nimport { flattenEach } from \"@turf/meta\";\nimport polygonToLine from \"@turf/polygon-to-line\";\n/**\n * Boolean-disjoint returns (TRUE) if the intersection of the two geometries is an empty set.\n *\n * @name booleanDisjoint\n * @param {Geometry|Feature<any>} feature1 GeoJSON Feature or Geometry\n * @param {Geometry|Feature<any>} feature2 GeoJSON Feature or Geometry\n * @returns {boolean} true/false\n * @example\n * var point = turf.point([2, 2]);\n * var line = turf.lineString([[1, 1], [1, 2], [1, 3], [1, 4]]);\n *\n * turf.booleanDisjoint(line, point);\n * //=true\n */\nfunction booleanDisjoint(feature1, feature2) {\n    var bool = true;\n    flattenEach(feature1, function (flatten1) {\n        flattenEach(feature2, function (flatten2) {\n            if (bool === false) {\n                return false;\n            }\n            bool = disjoint(flatten1.geometry, flatten2.geometry);\n        });\n    });\n    return bool;\n}\n/**\n * Disjoint operation for simple Geometries (Point/LineString/Polygon)\n *\n * @private\n * @param {Geometry<any>} geom1 GeoJSON Geometry\n * @param {Geometry<any>} geom2 GeoJSON Geometry\n * @returns {boolean} true/false\n */\nfunction disjoint(geom1, geom2) {\n    switch (geom1.type) {\n        case \"Point\":\n            switch (geom2.type) {\n                case \"Point\":\n                    return !compareCoords(geom1.coordinates, geom2.coordinates);\n                case \"LineString\":\n                    return !isPointOnLine(geom2, geom1);\n                case \"Polygon\":\n                    return !booleanPointInPolygon(geom1, geom2);\n            }\n            /* istanbul ignore next */\n            break;\n        case \"LineString\":\n            switch (geom2.type) {\n                case \"Point\":\n                    return !isPointOnLine(geom1, geom2);\n                case \"LineString\":\n                    return !isLineOnLine(geom1, geom2);\n                case \"Polygon\":\n                    return !isLineInPoly(geom2, geom1);\n            }\n            /* istanbul ignore next */\n            break;\n        case \"Polygon\":\n            switch (geom2.type) {\n                case \"Point\":\n                    return !booleanPointInPolygon(geom2, geom1);\n                case \"LineString\":\n                    return !isLineInPoly(geom1, geom2);\n                case \"Polygon\":\n                    return !isPolyInPoly(geom2, geom1);\n            }\n    }\n    return false;\n}\n// http://stackoverflow.com/a/11908158/1979085\nfunction isPointOnLine(lineString, pt) {\n    for (var i = 0; i < lineString.coordinates.length - 1; i++) {\n        if (isPointOnLineSegment(lineString.coordinates[i], lineString.coordinates[i + 1], pt.coordinates)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isLineOnLine(lineString1, lineString2) {\n    var doLinesIntersect = lineIntersect(lineString1, lineString2);\n    if (doLinesIntersect.features.length > 0) {\n        return true;\n    }\n    return false;\n}\nfunction isLineInPoly(polygon, lineString) {\n    for (var _i = 0, _a = lineString.coordinates; _i < _a.length; _i++) {\n        var coord = _a[_i];\n        if (booleanPointInPolygon(coord, polygon)) {\n            return true;\n        }\n    }\n    var doLinesIntersect = lineIntersect(lineString, polygonToLine(polygon));\n    if (doLinesIntersect.features.length > 0) {\n        return true;\n    }\n    return false;\n}\n/**\n * Is Polygon (geom1) in Polygon (geom2)\n * Only takes into account outer rings\n * See http://stackoverflow.com/a/4833823/1979085\n *\n * @private\n * @param {Geometry|Feature<Polygon>} feature1 Polygon1\n * @param {Geometry|Feature<Polygon>} feature2 Polygon2\n * @returns {boolean} true/false\n */\nfunction isPolyInPoly(feature1, feature2) {\n    for (var _i = 0, _a = feature1.coordinates[0]; _i < _a.length; _i++) {\n        var coord1 = _a[_i];\n        if (booleanPointInPolygon(coord1, feature2)) {\n            return true;\n        }\n    }\n    for (var _b = 0, _c = feature2.coordinates[0]; _b < _c.length; _b++) {\n        var coord2 = _c[_b];\n        if (booleanPointInPolygon(coord2, feature1)) {\n            return true;\n        }\n    }\n    var doLinesIntersect = lineIntersect(polygonToLine(feature1), polygonToLine(feature2));\n    if (doLinesIntersect.features.length > 0) {\n        return true;\n    }\n    return false;\n}\nfunction isPointOnLineSegment(lineSegmentStart, lineSegmentEnd, pt) {\n    var dxc = pt[0] - lineSegmentStart[0];\n    var dyc = pt[1] - lineSegmentStart[1];\n    var dxl = lineSegmentEnd[0] - lineSegmentStart[0];\n    var dyl = lineSegmentEnd[1] - lineSegmentStart[1];\n    var cross = dxc * dyl - dyc * dxl;\n    if (cross !== 0) {\n        return false;\n    }\n    if (Math.abs(dxl) >= Math.abs(dyl)) {\n        if (dxl > 0) {\n            return lineSegmentStart[0] <= pt[0] && pt[0] <= lineSegmentEnd[0];\n        }\n        else {\n            return lineSegmentEnd[0] <= pt[0] && pt[0] <= lineSegmentStart[0];\n        }\n    }\n    else if (dyl > 0) {\n        return lineSegmentStart[1] <= pt[1] && pt[1] <= lineSegmentEnd[1];\n    }\n    else {\n        return lineSegmentEnd[1] <= pt[1] && pt[1] <= lineSegmentStart[1];\n    }\n}\n/**\n * compareCoords\n *\n * @private\n * @param {Position} pair1 point [x,y]\n * @param {Position} pair2 point [x,y]\n * @returns {boolean} true/false if coord pairs match\n */\nfunction compareCoords(pair1, pair2) {\n    return pair1[0] === pair2[0] && pair1[1] === pair2[1];\n}\nexport default booleanDisjoint;\n","<script>\nimport bboxPolygon from '@turf/bbox-polygon'\nimport linksBase from '@static/links_base.geojson'\nimport nodesBase from '@static/nodes_base.geojson'\nimport booleanContains from '@turf/boolean-contains'\nimport booleanIntersects from '@turf/boolean-intersects'\nimport Polygon from 'turf-polygon'\n\nimport { csvJSON } from '../utils/utils.js'\n\nimport MapSelector from './MapSelector.vue'\nconst $gettext = s => s\n\nexport default {\n  name: 'GTFSWebImporter',\n  components: {\n    MapSelector,\n  },\n\n  data () {\n    return {\n      showOverwriteDialog: false,\n      poly: null,\n      nodes: {},\n      gtfsList: [],\n      availableGTFS: [],\n      selectedGTFS: [],\n      checkall: false,\n      showHint: false,\n      parameters: [{\n        name: 'start_time',\n        text: 'start time',\n        value: '6:00:00',\n        type: 'String',\n        units: '',\n        hint: 'Start Time to restrict the GTFS in a period',\n        rules: [\n          'required', 'timeRule',\n        ],\n      },\n      {\n        name: 'end_time',\n        text: 'end time',\n        value: '8:59:00',\n        type: 'String',\n        units: '',\n        hint: 'End Time to restrict the GTFS in a period',\n        rules: [\n          'required', 'timeRule',\n        ],\n      },\n      {\n        name: 'day',\n        text: 'day',\n        value: 'tuesday',\n        type: 'String',\n        items: ['monday',\n          'tuesday',\n          'wednesday',\n          'thursday',\n          'friday',\n          'saturday',\n          'sunday'],\n        units: '',\n        hint: 'restrict each GTFS to this day.',\n        rules: [\n          'required',\n        ],\n      },\n      ],\n      // eslint-disable-next-line max-len, no-useless-escape\n      re: /^(0?[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$/,\n      rules: {\n        required: v => !!v || $gettext('Required'),\n        timeRule: v => this.re.test(v) || $gettext('invalid date time'),\n      },\n    }\n  },\n  computed: {\n    linksIsEmpty () { return this.$store.getters.linksIsEmpty },\n    callID () { return this.$store.getters['runGTFS/callID'] },\n    running () { return this.$store.getters['runGTFS/running'] },\n    error () { return this.$store.getters['runGTFS/error'] },\n    errorMessage () { return this.$store.getters['runGTFS/errorMessage'] },\n  },\n\n  async created () {\n    this.gtfsList = await this.fetchCSV()\n    this.gtfsList.forEach((el, idx) => {\n      try {\n        el.bbox = bboxPolygon(\n          [el['location.bounding_box.minimum_longitude'],\n            el['location.bounding_box.minimum_latitude'],\n            el['location.bounding_box.maximum_longitude'],\n            el['location.bounding_box.maximum_latitude'],\n          ])\n      } catch {\n        el.bbox = null\n      }\n      el.index = idx\n    })\n    this.gtfsList = this.gtfsList.filter(el => el.bbox)\n    this.gtfsList = this.gtfsList.filter(el => el['urls.latest'].length > 0)\n    this.gtfsList.sort((a, b) => {\n      if (a['location.country_code'] < b['location.country_code']) return -1\n      if (a['location.country_code'] > b['location.country_code']) return 1\n      return 0\n    })\n  },\n\n  methods: {\n\n    async fetchCSV () {\n      try {\n        const response = await fetch('https://storage.googleapis.com/storage/v1/b/mdb-csv/o/sources.csv?alt=media', {\n        })\n        if (!response.ok) {\n          this.$store.commit('changeAlert', { name: 'Network error', message: 'cannot fetch GTFS list' })\n        }\n        const data = await response.arrayBuffer()\n        const json = csvJSON(data)\n        return json\n      } catch (err) {\n        this.$store.commit('changeAlert', err)\n      }\n    },\n    getBBOX (val) {\n      if (!this.poly) {\n        this.poly = val\n        this.getAvaileGTFS()\n      } else {\n        this.poly = val\n      }\n    },\n    getAvaileGTFS () {\n      let poly = null\n      if (this.poly.style === 'bbox') {\n        const g = this.poly.geometry\n        poly = bboxPolygon([g[1], g[0], g[3], g[2]])\n      } else {\n        poly = Polygon([this.poly.geometry])\n      }\n      this.availableGTFS = this.gtfsList.filter(\n        el => (booleanContains(poly, el.bbox) || booleanIntersects(poly, el.bbox)))\n      // eslint-disable-next-line no-return-assign\n      this.availableGTFS.forEach(el => el.allInPolygon = booleanContains(poly, el.bbox))\n      // remove checked gtfs not available anymore.\n      const indexSet = new Set(this.availableGTFS.map(el => el.index))\n      this.selectedGTFS = this.selectedGTFS.filter(el => indexSet.has(el))\n      // const selected = this.availableGTFS.filter(el => this.selectedGTFS.includes(el.index))\n      // console.log(selected.map(el => el['urls.latest']))\n    },\n\n    importGTFS () {\n      if (this.linksIsEmpty) {\n        this.$store.commit('runGTFS/setCallID')\n\n        const selected = this.availableGTFS.filter(el => this.selectedGTFS.includes(el.index))\n        const filesPath = selected.map(el => el['urls.latest'])\n        const inputs = { files: filesPath }\n        this.parameters.forEach(item => {\n          inputs[item.name] = item.value\n        })\n        this.$store.dispatch('runGTFS/startExecution', inputs)\n      } else {\n        this.showOverwriteDialog = true\n      }\n    },\n\n    applyOverwriteDialog () {\n      this.$store.commit('loadLinks', linksBase)\n      this.$store.commit('loadNodes', nodesBase)\n      this.showOverwriteDialog = false\n      this.importGTFS()\n    },\n  },\n\n}\n</script>\n<template>\n  <v-row class=\"ma-0 pa-2 background\">\n    <v-col>\n      <v-card class=\"card\">\n        <v-card-title class=\"subtitle\">\n          {{ $gettext('GTFS importer') }}\n        </v-card-title>\n        <MapSelector @change=\"getBBOX\" />\n      </v-card>\n    </v-col>\n    <v-col>\n      <v-card class=\"card2\">\n        <v-card-title class=\"subtitle\">\n          {{ $gettext('Available GTFS') }}\n        </v-card-title>\n        <v-card-subtitle>\n          {{ $gettext('Data fetch from')+ ' https://database.mobilitydata.org/' }}\n        </v-card-subtitle>\n\n        <v-btn\n          :disabled=\"running\"\n          @click=\"getAvaileGTFS\"\n        >\n          <v-icon\n            small\n            style=\"margin-right: 10px;\"\n          >\n            fa-solid fa-sync\n          </v-icon>\n          {{ $gettext('fetch available GTFS') }}\n        </v-btn>\n        <v-btn\n          :loading=\"running\"\n          :disabled=\"running || selectedGTFS.length===0\"\n          color=\"success\"\n          @click=\"importGTFS\"\n        >\n          <v-icon\n            small\n            style=\"margin-right: 10px;\"\n          >\n            fa-solid fa-play\n          </v-icon>\n          {{ $gettext('Download') }}\n        </v-btn>\n        <v-card-subtitle>\n          <v-alert\n            v-if=\"error\"\n            dense\n            outlined\n            text\n            type=\"error\"\n          >\n            {{ $gettext(\"There as been an error while importing OSM network. \\\n            Please try again. If the problem persist, contact us.\") }}\n            <p\n              v-for=\"key in Object.keys(errorMessage)\"\n              :key=\"key\"\n            >\n              <b>{{ key }}: </b>{{ errorMessage[key] }}\n            </p>\n          </v-alert>\n        </v-card-subtitle>\n        <div class=\"params-row\">\n          <div\n            v-for=\"(item, key) in parameters\"\n            :key=\"key\"\n          >\n            <v-text-field\n              v-if=\"typeof item.items === 'undefined'\"\n              v-model=\"item.value\"\n              :type=\"item.type\"\n              :label=\"$gettext(item.text)\"\n              :suffix=\"item.units\"\n              :hint=\"showHint? $gettext(item.hint): ''\"\n              :persistent-hint=\"showHint\"\n              :rules=\"item.rules.map((rule) => rules[rule])\"\n              required\n              @wheel=\"()=>{}\"\n            />\n            <v-select\n              v-else\n              v-model=\"item.value\"\n              :type=\"item.type\"\n              :items=\"item.items\"\n              :label=\"$gettext(item.text)\"\n              :suffix=\"item.units\"\n              :hint=\"showHint? $gettext(item.hint): ''\"\n              :persistent-hint=\"showHint\"\n              :rules=\"item.rules.map((rule) => rules[rule])\"\n              required\n              @wheel=\"()=>{}\"\n            />\n          </div>\n        </div>\n        <div class=\"list\">\n          <ul class=\"list-row\">\n            <span class=\"list-item-small\"><v-checkbox :disabled=\"true\" /></span>\n            <span class=\"list-item-small\">All in polygon</span>\n            <span class=\"list-item-small\">Code</span>\n            <span class=\"list-item-medium\">Name</span>\n            <span class=\"list-item-large\">City</span>\n            <span class=\"list-item-large\">Agency</span>\n          </ul>\n          <ul\n            v-for=\"(item,key) in availableGTFS\"\n            :key=\"item.index\"\n            class=\"list-row\"\n          >\n            <span class=\"list-item-small\"> <v-checkbox\n              v-model=\"selectedGTFS\"\n              :value=\"item.index\"\n              :label=\"String(key)\"\n            /></span>\n            <span class=\"list-item-small\">{{ item['allInPolygon'] }} </span>\n            <span class=\"list-item-small\">{{ item['location.country_code'] }} </span>\n            <span class=\"list-item-medium\">{{ item['location.subdivision_name'] }}</span>\n            <span class=\"list-item-large\">{{ item['location.municipality'] }}</span>\n            <span class=\"list-item-large\">{{ item.provider }}</span>\n          </ul>\n        </div>\n      </v-card>\n    </v-col>\n  </v-row>\n</template>\n<style lang=\"scss\" scoped>\n\n.card {\n  height: 90%;\n  padding: 2.5rem;\n}\n.card2 {\n  height: 90%;\n  padding: 2.5rem 0rem 2.5rem 2.0rem;\n  margin-right: 3rem;\n\n}\n.row {\n  height: 100%\n}\n.col {\n  max-height: 100%;\n}\n.card button {\n  margin-top: 0px;\n}\n.title {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: 3.5em;\n  color: $primary !important;\n  font-weight: bold;\n}\n.subtitle {\n  font-size: 2em;\n  color:var(--v-secondary-dark);\n  font-weight: bold;\n  margin: 10px;\n  margin-left: 0px;\n}\n.card button {\n  margin-top: 0px;\n}\n.background {\n  background-color:var(--v-background-base);\n}\n\n.params-row {\n  /* Add individual list item styles here */\n  display: flex; /* Use flexbox layout for each list item */\n  align-items: center;\n  margin-right:1rem;\n  padding-top: 0.5rem;\n  justify-content:flex-start;\n  gap: 1rem;\n\n}\n\n.list {\n  height:80%;\n  //border: 1px solid red;\n  margin-top:1rem;\n  overflow-y: auto;\n  overflow-x: hidden;\n  border-top: 1px solid var(--v-background-lighten3);\n\n}\n.list-row {\n  /* Add individual list item styles here */\n  display: flex; /* Use flexbox layout for each list item */\n  padding-left:0;\n  align-items: center;\n  justify-content:flex-start;\n  border-bottom: 1px solid var(--v-background-lighten3);\n}\n\n.list-item-small {\n  /* Add individual list item styles here */\n  flex: 0 0 8%;\n  margin:4px;\n}\n\n.list-item-medium {\n  /* Add individual list item styles here */\n  flex: 0 0 18%;\n  margin-right:2px;\n}\n\n.list-item-large {\n  /* Add individual list item styles here */\n  flex: 0 0 26%;\n  margin:4px;\n}\n</style>\n","import mod from \"-!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GTFSWebImporter.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GTFSWebImporter.vue?vue&type=script&lang=js&\"","import booleanDisjoint from \"@turf/boolean-disjoint\";\nimport { flattenEach } from \"@turf/meta\";\n/**\n * Boolean-intersects returns (TRUE) two geometries intersect.\n *\n * @name booleanIntersects\n * @param {Geometry|Feature<any>} feature1 GeoJSON Feature or Geometry\n * @param {Geometry|Feature<any>} feature2 GeoJSON Feature or Geometry\n * @returns {boolean} true/false\n * @example\n * var point = turf.point([2, 2]);\n * var line = turf.lineString([[1, 1], [1, 2], [1, 3], [1, 4]]);\n *\n * turf.booleanIntersects(line, point);\n * //=true\n */\nexport default function booleanIntersects(feature1, feature2) {\n    var bool = false;\n    flattenEach(feature1, function (flatten1) {\n        flattenEach(feature2, function (flatten2) {\n            if (bool === true) {\n                return true;\n            }\n            bool = !booleanDisjoint(flatten1.geometry, flatten2.geometry);\n        });\n    });\n    return bool;\n}\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-1.use[2]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GTFSWebImporter.vue?vue&type=style&index=0&id=1884303d&prod&lang=scss&scoped=true&\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-1.use[2]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GTFSWebImporter.vue?vue&type=style&index=0&id=1884303d&prod&lang=scss&scoped=true&\";\n       export default content && content.locals ? content.locals : undefined;\n","import { render, staticRenderFns } from \"./GTFSWebImporter.vue?vue&type=template&id=1884303d&scoped=true&\"\nimport script from \"./GTFSWebImporter.vue?vue&type=script&lang=js&\"\nexport * from \"./GTFSWebImporter.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GTFSWebImporter.vue?vue&type=style&index=0&id=1884303d&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1884303d\",\n  null\n  \n)\n\nexport default component.exports"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","coordinates","properties","Error","i","length","ring","j","polygon","render","_vm","this","_c","_self","staticClass","_v","_s","$gettext","on","change","getBBOX","attrs","disabled","running","click","getAvaileGTFS","staticStyle","small","loading","selectedGTFS","color","importGTFS","error","dense","outlined","text","type","_l","Object","keys","errorMessage","key","_e","parameters","item","items","label","suffix","units","hint","showHint","rules","map","rule","required","wheel","model","value","callback","$$v","$set","expression","availableGTFS","index","String","provider","_withStripped","isPointOnLine","lineString","pt","isPointOnLineSegment","isLineInPoly","_i","_a","coord","features","lineSegmentStart","lineSegmentEnd","dxc","dyc","dxl","dyl","Math","abs","name","components","MapSelector","data","showOverwriteDialog","poly","nodes","gtfsList","checkall","re","v","timeRule","test","computed","linksIsEmpty","$store","getters","callID","async","fetchCSV","forEach","el","idx","bbox","filter","sort","a","b","methods","response","fetch","ok","commit","message","arrayBuffer","err","val","style","g","geometry","feature1","feature2","bool","flatten1","flatten2","geom1","geom2","pair1","pair2","lineString1","lineString2","coord1","_b","coord2","isPolyInPoly","disjoint","allInPolygon","indexSet","Set","has","inputs","files","includes","dispatch","applyOverwriteDialog","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals"],"sourceRoot":""}