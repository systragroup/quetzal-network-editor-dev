(self.webpackChunkquetzal_network_editor=self.webpackChunkquetzal_network_editor||[]).push([[170],{75333:(t,e,r)=>{"use strict";r.d(e,{Z:()=>o});var n=r(87537),i=r.n(n),s=r(23645),a=r.n(s)()(i());a.push([t.id,".card[data-v-09306782]{height:90%;padding:2.5rem}.card2[data-v-09306782]{height:90%;padding:2.5rem 0rem 2.5rem 2rem;margin-right:3rem;overflow-y:auto}.row[data-v-09306782]{height:100%}.col[data-v-09306782]{max-height:100%}.card button[data-v-09306782]{margin-top:0px}.title[data-v-09306782]{display:flex;flex-direction:column;align-items:center;justify-content:center;font-size:3.5em;color:#b5e0d6 !important;font-weight:bold}.subtitle[data-v-09306782]{font-size:2em;color:var(--v-secondary-dark);font-weight:bold;margin:10px;margin-left:0px}.card button[data-v-09306782]{margin-top:0px}.background[data-v-09306782]{background-color:var(--v-background-base)}.params-row[data-v-09306782]{display:flex;align-items:center;margin-right:1rem;padding-top:.5rem;justify-content:flex-start;gap:1rem}.list[data-v-09306782]{height:80%;margin-top:1rem;overflow-y:auto;overflow-x:hidden;border-top:1px solid var(--v-background-lighten3)}.list-row[data-v-09306782]{display:flex;padding-left:0;align-items:center;justify-content:flex-start;border-bottom:1px solid var(--v-background-lighten3)}.list-item-small[data-v-09306782]{flex:0 0 8%;margin:4px}.list-item-medium[data-v-09306782]{flex:0 0 18%;margin-right:2px}.list-item-large[data-v-09306782]{flex:0 0 26%;margin:4px}","",{version:3,sources:["webpack://./src/components/microservices/GTFSWebImporter.vue"],names:[],mappings:"AAGA,uBACE,UAAA,CACA,cAAA,CAEF,wBACE,UAAA,CACA,+BAAA,CACA,iBAAA,CACA,eAAA,CAGF,sBACE,WAAA,CAEF,sBACE,eAAA,CAEF,8BACE,cAAA,CAEF,wBACE,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,sBAAA,CACA,eAAA,CACA,wBAAA,CACA,gBAAA,CAEF,2BACE,aAAA,CACA,6BAAA,CACA,gBAAA,CACA,WAAA,CACA,eAAA,CAEF,8BACE,cAAA,CAEF,6BACE,yCAAA,CAGF,6BAEE,YAAA,CACA,kBAAA,CACA,iBAAA,CACA,iBAAA,CACA,0BAAA,CACA,QAAA,CAIF,uBACE,UAAA,CAEA,eAAA,CACA,eAAA,CACA,iBAAA,CACA,iDAAA,CAGF,2BAEE,YAAA,CACA,cAAA,CACA,kBAAA,CACA,0BAAA,CACA,oDAAA,CAGF,kCAEE,WAAA,CACA,UAAA,CAGF,mCAEE,YAAA,CACA,gBAAA,CAGF,kCAEE,YAAA,CACA,UAAA",sourcesContent:['@import "@scss/variables.scss";\n\n\n.card {\n  height: 90%;\n  padding: 2.5rem;\n}\n.card2 {\n  height: 90%;\n  padding: 2.5rem 0rem 2.5rem 2.0rem;\n  margin-right: 3rem;\n  overflow-y: auto;\n\n}\n.row {\n  height: 100%\n}\n.col {\n  max-height: 100%;\n}\n.card button {\n  margin-top: 0px;\n}\n.title {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: 3.5em;\n  color: $primary !important;\n  font-weight: bold;\n}\n.subtitle {\n  font-size: 2em;\n  color:var(--v-secondary-dark);\n  font-weight: bold;\n  margin: 10px;\n  margin-left: 0px;\n}\n.card button {\n  margin-top: 0px;\n}\n.background {\n  background-color:var(--v-background-base);\n}\n\n.params-row {\n  /* Add individual list item styles here */\n  display: flex; /* Use flexbox layout for each list item */\n  align-items: center;\n  margin-right:1rem;\n  padding-top: 0.5rem;\n  justify-content:flex-start;\n  gap: 1rem;\n\n}\n\n.list {\n  height:80%;\n  //border: 1px solid red;\n  margin-top:1rem;\n  overflow-y: auto;\n  overflow-x: hidden;\n  border-top: 1px solid var(--v-background-lighten3);\n\n}\n.list-row {\n  /* Add individual list item styles here */\n  display: flex; /* Use flexbox layout for each list item */\n  padding-left:0;\n  align-items: center;\n  justify-content:flex-start;\n  border-bottom: 1px solid var(--v-background-lighten3);\n}\n\n.list-item-small {\n  /* Add individual list item styles here */\n  flex: 0 0 8%;\n  margin:4px;\n}\n\n.list-item-medium {\n  /* Add individual list item styles here */\n  flex: 0 0 18%;\n  margin-right:2px;\n}\n\n.list-item-large {\n  /* Add individual list item styles here */\n  flex: 0 0 26%;\n  margin:4px;\n}\n'],sourceRoot:""}]);const o=a},21042:t=>{t.exports=function(t,e){if(null===t)throw new Error("No coordinates passed");for(var r=0;r<t.length;r++)for(var n=t[r],i=0;i<n[n.length-1].length;i++){if(n.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");if(n[n.length-1][i]!==n[0][i])throw new Error("First and last Position are not equivalent.")}var s={type:"Feature",geometry:{type:"Polygon",coordinates:t},properties:e};return s.properties||(s.properties={}),s}},36170:(t,e,r)=>{"use strict";r.r(e),r.d(e,{default:()=>Z});var n=function(){var t=this,e=t._self._c;return e("v-row",{staticClass:"ma-0 pa-2 background"},[e("v-col",[e("v-card",{staticClass:"card"},[e("v-card-title",{staticClass:"subtitle"},[t._v("\n        "+t._s(t.$gettext("GTFS importer"))+"\n      ")]),t._v(" "),e("MapSelector",{on:{change:t.getBBOX}})],1)],1),t._v(" "),e("v-col",[e("v-card",{staticClass:"card2"},[e("v-card-title",{staticClass:"subtitle"},[t._v("\n        "+t._s(t.$gettext("Available GTFS"))+"\n      ")]),t._v(" "),e("v-card-subtitle",[t._v("\n        "+t._s(t.$gettext("Data fetch from")+" https://database.mobilitydata.org/")+"\n      ")]),t._v(" "),e("v-btn",{attrs:{disabled:t.running},on:{click:t.getAvaileGTFS}},[e("v-icon",{staticStyle:{"margin-right":"10px"},attrs:{small:""}},[t._v("\n          fa-solid fa-sync\n        ")]),t._v("\n        "+t._s(t.$gettext("fetch available GTFS"))+"\n      ")],1),t._v(" "),e("v-btn",{attrs:{loading:t.running,disabled:t.running||0===t.selectedGTFS.length,color:"success"},on:{click:t.importGTFS}},[e("v-icon",{staticStyle:{"margin-right":"10px"},attrs:{small:""}},[t._v("\n          fa-solid fa-play\n        ")]),t._v("\n        "+t._s(t.$gettext("Download"))+"\n      ")],1),t._v(" "),e("v-card-subtitle",[t.error?e("v-alert",{attrs:{dense:"",outlined:"",text:"",type:"error"}},[t._v("\n          "+t._s(t.$gettext("There as been an error while importing OSM network.           Please try again. If the problem persist, contact us."))+"\n          "),t._l(Object.keys(t.errorMessage),(function(r){return e("p",{key:r},[e("b",[t._v(t._s(r)+": ")]),t._v(t._s(t.errorMessage[r])+"\n          ")])}))],2):t._e()],1),t._v(" "),e("div",{staticClass:"params-row"},t._l(t.parameters,(function(r,n){return e("div",{key:n},[void 0===r.items?e("v-text-field",{attrs:{type:r.type,label:t.$gettext(r.text),suffix:r.units,hint:t.showHint?t.$gettext(r.hint):"","persistent-hint":t.showHint,rules:r.rules.map((e=>t.rules[e])),required:""},on:{wheel:()=>{}},model:{value:r.value,callback:function(e){t.$set(r,"value",e)},expression:"item.value"}}):e("v-select",{attrs:{type:r.type,items:r.items,label:t.$gettext(r.text),suffix:r.units,hint:t.showHint?t.$gettext(r.hint):"","persistent-hint":t.showHint,rules:r.rules.map((e=>t.rules[e])),required:""},on:{wheel:()=>{}},model:{value:r.value,callback:function(e){t.$set(r,"value",e)},expression:"item.value"}})],1)})),0),t._v(" "),e("div",{staticClass:"list"},[e("ul",{staticClass:"list-row"},[e("span",{staticClass:"list-item-small"},[e("v-checkbox",{attrs:{disabled:!0}})],1),t._v(" "),e("span",{staticClass:"list-item-small"},[t._v("All in polygon")]),t._v(" "),e("span",{staticClass:"list-item-small"},[t._v("Code")]),t._v(" "),e("span",{staticClass:"list-item-medium"},[t._v("Name")]),t._v(" "),e("span",{staticClass:"list-item-large"},[t._v("City")]),t._v(" "),e("span",{staticClass:"list-item-large"},[t._v("Agency")])]),t._v(" "),t._l(t.availableGTFS,(function(r,n){return e("ul",{key:r.index,staticClass:"list-row"},[e("span",{staticClass:"list-item-small"},[e("v-checkbox",{attrs:{value:r.index,label:String(n)},model:{value:t.selectedGTFS,callback:function(e){t.selectedGTFS=e},expression:"selectedGTFS"}})],1),t._v(" "),e("span",{staticClass:"list-item-small"},[t._v(t._s(r.allInPolygon)+" ")]),t._v(" "),e("span",{staticClass:"list-item-small"},[t._v(t._s(r["location.country_code"])+" ")]),t._v(" "),e("span",{staticClass:"list-item-medium"},[t._v(t._s(r["location.subdivision_name"]))]),t._v(" "),e("span",{staticClass:"list-item-large"},[t._v(t._s(r["location.municipality"]))]),t._v(" "),e("span",{staticClass:"list-item-large"},[t._v(t._s(r.provider))])])}))],2)],1)],1),t._v(" "),e("v-dialog",{attrs:{persistent:"","max-width":"500"},on:{keydown:[function(e){return!e.type.indexOf("key")&&t._k(e.keyCode,"enter",13,e.key,"Enter")?null:t.applyOverwriteDialog.apply(null,arguments)},function(e){if(!e.type.indexOf("key")&&t._k(e.keyCode,"esc",27,e.key,["Esc","Escape"]))return null;t.showOverwriteDialog=!1}]},model:{value:t.showOverwriteDialog,callback:function(e){t.showOverwriteDialog=e},expression:"showOverwriteDialog"}},[e("v-card",[e("v-card-title",{staticClass:"text-h5"},[t._v("\n        "+t._s(t.$gettext("Overwrite current road network ?"))+"\n      ")]),t._v(" "),e("v-card-actions",[e("v-spacer"),t._v(" "),e("v-btn",{attrs:{color:"regular"},on:{click:function(e){t.showOverwriteDialog=!t.showOverwriteDialog}}},[t._v("\n          "+t._s(t.$gettext("No"))+"\n        ")]),t._v(" "),e("v-btn",{attrs:{color:"primary"},on:{click:t.applyOverwriteDialog}},[t._v("\n          "+t._s(t.$gettext("Yes"))+"\n        ")])],1)],1)],1)],1)};n._withStripped=!0;var i=r(95),s=r(75997),a=r(34221),o=r(98013),l=r(82037),c=r(30022),d=r(39034),A=r(39428);function u(t,e){for(var r=0;r<t.coordinates.length-1;r++)if(g(t.coordinates[r],t.coordinates[r+1],e.coordinates))return!0;return!1}function m(t,e){for(var r=0,n=e.coordinates;r<n.length;r++){var i=n[r];if((0,l.Z)(i,t))return!0}return(0,c.Z)(e,(0,A.ZP)(t)).features.length>0}function g(t,e,r){var n=r[0]-t[0],i=r[1]-t[1],s=e[0]-t[0],a=e[1]-t[1];return 0==n*a-i*s&&(Math.abs(s)>=Math.abs(a)?s>0?t[0]<=r[0]&&r[0]<=e[0]:e[0]<=r[0]&&r[0]<=t[0]:a>0?t[1]<=r[1]&&r[1]<=e[1]:e[1]<=r[1]&&r[1]<=t[1])}var v=r(21042),h=r.n(v),p=r(76955);const f={name:"GTFSWebImporter",components:{MapSelector:r(39492).Z},data(){return{showOverwriteDialog:!1,poly:null,nodes:{},gtfsList:[],availableGTFS:[],selectedGTFS:this.$store.getters["runGTFS/selectedGTFS"],checkall:!1,showHint:!1,parameters:[{name:"start_time",text:"start time",value:this.$store.getters["runGTFS/parameters"].start_time,type:"String",units:"",hint:"Start Time to restrict the GTFS in a period",rules:["required","timeRule"]},{name:"end_time",text:"end time",value:this.$store.getters["runGTFS/parameters"].end_time,type:"String",units:"",hint:"End Time to restrict the GTFS in a period",rules:["required","timeRule"]},{name:"day",text:"day",value:this.$store.getters["runGTFS/parameters"].day,type:"String",items:["monday","tuesday","wednesday","thursday","friday","saturday","sunday"],units:"",hint:"restrict each GTFS to this day.",rules:["required"]}],re:/^(0?[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$/,rules:{required:t=>!!t||"Required",timeRule:t=>this.re.test(t)||"invalid date time"}}},computed:{linksIsEmpty(){return this.$store.getters.linksIsEmpty},callID(){return this.$store.getters["runGTFS/callID"]},running(){return this.$store.getters["runGTFS/running"]},error(){return this.$store.getters["runGTFS/error"]},errorMessage(){return this.$store.getters["runGTFS/errorMessage"]}},async created(){this.gtfsList=await this.fetchCSV(),this.gtfsList.forEach(((t,e)=>{try{t.bbox=(0,i.Z)([t["location.bounding_box.minimum_longitude"],t["location.bounding_box.minimum_latitude"],t["location.bounding_box.maximum_longitude"],t["location.bounding_box.maximum_latitude"]])}catch{t.bbox=null}t.index=e})),this.gtfsList=this.gtfsList.filter((t=>t.bbox)),this.gtfsList=this.gtfsList.filter((t=>t["urls.latest"].length>0)),this.gtfsList.sort(((t,e)=>t["location.country_code"]<e["location.country_code"]?-1:t["location.country_code"]>e["location.country_code"]?1:0))},beforeDestroy(){this.$store.commit("runGTFS/saveParams",this.parameters),this.$store.commit("runGTFS/saveSelectedGTFS",this.selectedGTFS)},methods:{async fetchCSV(){try{const t=await fetch("https://storage.googleapis.com/storage/v1/b/mdb-csv/o/sources.csv?alt=media",{});t.ok||this.$store.commit("changeAlert",{name:"Network error",message:"cannot fetch GTFS list"});const e=await t.arrayBuffer();return(0,p.JO)(e)}catch(t){this.$store.commit("changeAlert",t)}},getBBOX(t){this.poly?this.poly=t:(this.poly=t,this.getAvaileGTFS())},getAvaileGTFS(){let t=null;if("bbox"===this.poly.style){const e=this.poly.geometry;t=(0,i.Z)([e[1],e[0],e[3],e[2]])}else t=h()([this.poly.geometry]);this.availableGTFS=this.gtfsList.filter((e=>{return(0,o.ZP)(t,e.bbox)||(r=t,n=e.bbox,i=!1,(0,d.nG)(r,(function(t){(0,d.nG)(n,(function(e){if(!0===i)return!0;i=!function(t,e){var r=!0;return(0,d.nG)(t,(function(t){(0,d.nG)(e,(function(e){if(!1===r)return!1;r=function(t,e){switch(t.type){case"Point":switch(e.type){case"Point":return i=t.coordinates,s=e.coordinates,!(i[0]===s[0]&&i[1]===s[1]);case"LineString":return!u(e,t);case"Polygon":return!(0,l.Z)(t,e)}break;case"LineString":switch(e.type){case"Point":return!u(t,e);case"LineString":return r=t,n=e,!((0,c.Z)(r,n).features.length>0);case"Polygon":return!m(e,t)}break;case"Polygon":switch(e.type){case"Point":return!(0,l.Z)(e,t);case"LineString":return!m(t,e);case"Polygon":return!function(t,e){for(var r=0,n=t.coordinates[0];r<n.length;r++){var i=n[r];if((0,l.Z)(i,e))return!0}for(var s=0,a=e.coordinates[0];s<a.length;s++){var o=a[s];if((0,l.Z)(o,t))return!0}return(0,c.Z)((0,A.ZP)(t),(0,A.ZP)(e)).features.length>0}(e,t)}}var r,n,i,s;return!1}(t.geometry,e.geometry)}))})),r}(t.geometry,e.geometry)}))})),i);var r,n,i})),this.availableGTFS.forEach((e=>e.allInPolygon=(0,o.ZP)(t,e.bbox)));const e=new Set(this.availableGTFS.map((t=>t.index)));this.selectedGTFS=this.selectedGTFS.filter((t=>e.has(t)))},importGTFS(){if(this.linksIsEmpty){this.$store.commit("runGTFS/setCallID");const t={files:this.availableGTFS.filter((t=>this.selectedGTFS.includes(t.index))).map((t=>t["urls.latest"]))};this.parameters.forEach((e=>{t[e.name]=e.value})),this.$store.dispatch("runGTFS/startExecution",t)}else this.showOverwriteDialog=!0},applyOverwriteDialog(){this.$store.commit("loadLinks",s.Z),this.$store.commit("loadNodes",a.Z),this.showOverwriteDialog=!1,this.importGTFS()}}};var y=r(93379),C=r.n(y),b=r(7795),x=r.n(b),_=r(90569),w=r.n(_),S=r(3565),F=r.n(S),k=r(19216),G=r.n(k),T=r(44589),E=r.n(T),B=r(75333),$={};$.styleTagTransform=E(),$.setAttributes=F(),$.insert=w().bind(null,"head"),$.domAPI=x(),$.insertStyleElement=G(),C()(B.Z,$),B.Z&&B.Z.locals&&B.Z.locals;const Z=(0,r(51900).Z)(f,n,[],!1,null,"09306782",null).exports}}]);
//# sourceMappingURL=170.build.js.map