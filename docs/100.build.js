"use strict";(self.webpackChunkquetzal_network_editor=self.webpackChunkquetzal_network_editor||[]).push([[100],{9100:(e,t,o)=>{o.r(t),o.d(t,{default:()=>c});var s=function(){var e=this,t=e._self._c;return t("section",[t("MglGeojsonLayer",e._g({attrs:{"source-id":"rlinks",source:{type:"geojson",data:e.isRoadMode?e.renderedrLinks:e.rlinks,buffer:0,promoteId:"index"},"layer-id":"rlinks",layer:{interactive:!0,type:"line",minzoom:e.minZoom.links,paint:{"line-color":["case",["has","route_color"],["concat","#",["get","route_color"]],"#B5E0D6"],"line-opacity":["case",["boolean",e.isEditorMode,!1],.5,1],"line-width":["case",["boolean",["feature-state","hover"],!1],12,2],"line-blur":["case",["boolean",["feature-state","hover"],!1],6,0]}}}},e.isEditorMode?{}:{mouseenter:e.onCursor,mouseleave:e.offCursor,click:e.selectClick,contextmenu:e.linkRightClick})),e._v(" "),t("MglImageLayer",{attrs:{"source-id":"rlinks",type:"symbol",source:"rlinks","layer-id":"arrow-rlinks",layer:{type:"symbol",minzoom:e.minZoom.rendered,layout:{"symbol-placement":"line","symbol-spacing":200,"icon-ignore-placement":!0,"icon-image":"arrow","icon-size":["case",["has","oneway"],["case",["to-boolean",["to-number",["get","oneway"]]],.3,0],.3],"icon-rotate":90},paint:{"icon-color":["case",["has","route_color"],["concat","#",["get","route_color"]],"#B5E0D6"]}}}}),e._v(" "),t("MglGeojsonLayer",e._g({attrs:{"source-id":"rnodes",source:{type:"geojson",data:e.isRoadMode?e.renderedrNodes:e.rnodes,buffer:0,promoteId:"index"},"layer-id":"rnodes",layer:{interactive:!0,type:"circle",minzoom:e.minZoom.rendered,paint:{"circle-color":["case",["boolean",e.isEditorMode,!1],"#9E9E9E","#2C3E4E"],"circle-stroke-color":"#ffffff","circle-stroke-width":1,"circle-radius":["case",["boolean",["feature-state","hover"],!1],14,3],"circle-blur":["case",["boolean",["feature-state","hover"],!1],.3,0]}}}},e.isEditorMode?{}:{mouseenter:e.onCursor,mouseleave:e.offCursor,mousedown:e.moveNode,contextmenu:e.contextMenuNode})),e._v(" "),t("MglGeojsonLayer",{attrs:{"source-id":"anchorrNodes",source:{type:"geojson",data:e.isRoadMode?e.renderedAnchorrNodes:e.$store.getters.rnodesHeader,buffer:0,promoteId:"index"},"layer-id":"anchorrNodes",layer:{interactive:!0,type:"circle",minzoom:e.minZoom.rendered,paint:{"circle-color":"#ffffff","circle-opacity":.5,"circle-radius":["case",["boolean",["feature-state","hover"],!1],10,5],"circle-blur":["case",["boolean",["feature-state","hover"],!1],.3,0],"circle-stroke-color":"#2C3E4E","circle-stroke-width":2}}},on:{click:e.selectClick,mouseover:e.onCursor,mouseleave:e.offCursor,mousedown:e.moveNode,contextmenu:e.contextMenuNode}}),e._v(" "),t("MglPopup",{attrs:{"close-button":!1,showed:e.contextMenu.showed,coordinates:e.contextMenu.coordinates},on:{close:function(t){e.contextMenu.showed=!1}}},[t("span",{on:{mouseleave:function(t){e.contextMenu.showed=!1}}},[t("v-list",{attrs:{dense:"",flat:""}},[t("v-list-item-group",e._l(e.contextMenu.actions,(function(o){return t("v-list-item",{key:o.id},[t("v-list-item-content",[t("v-btn",{attrs:{outlined:"",small:""},on:{click:function(t){return e.actionClick({action:o,feature:e.contextMenu.feature,coordinates:e.contextMenu.coordinates})}}},[e._v("\n                "+e._s(e.$gettext(o))+"\n              ")])],1)],1)})),1)],1)],1)])],1)};s._withStripped=!0;var r=o(1963),i=o(6158),n=o.n(i),d=o(7665),a=o(5637),l=o(95);const h={name:"StaticLinks",components:{MglGeojsonLayer:r.tf,MglImageLayer:r.vV,MglPopup:r.eO},props:["map","isEditorMode","anchorMode","isRoadMode"],events:["clickFeature"],data:()=>({hoveredStateId:null,visibleNodes:{},visibleLinks:{},disablePopup:!1,editorRnodes:{},renderedrLinks:{},renderedrNodes:{},renderedAnchorrNodes:{},bbox:null,minZoom:{links:9,rendered:14},contextMenu:{coordinates:[0,0],showed:!1,actions:[],feature:null}}),computed:{selectedPopupContent(){return this.$store.getters.roadsPopupContent},selectedrGroup(){return this.$store.getters.selectedrGroup},rnodes(){return this.$store.getters.visiblerNodes},rlinks(){return this.$store.getters.visiblerLinks},anchorrNodes(){return this.anchorMode?this.$store.getters.anchorrNodes(this.renderedrLinks):this.$store.getters.rnodesHeader}},watch:{anchorMode(){this.getBounds()},selectedrGroup(e){this.getBounds()},isRoadMode(e){e?(this.map.on("dragend",this.getBounds),this.map.on("zoomend",this.getBounds)):(this.map.off("dragend",this.getBounds),this.map.off("zoomend",this.getBounds))}},created(){this.renderedrNodes=structuredClone(this.$store.getters.rnodesHeader),this.renderedAnchorrNodes=structuredClone(this.$store.getters.rnodesHeader),this.renderedrLinks=structuredClone(this.$store.getters.rlinksHeader),this.map.on("dragend",this.getBounds),this.map.on("zoomend",this.getBounds)},beforeDestroy(){this.map.removeLayer("arrow-rlinks")},methods:{getBounds(){const e=this.map.getBounds();if(this.bbox=(0,a.Z)((0,l.Z)([e._sw.lng,e._sw.lat,e._ne.lng,e._ne.lat]),.2),this.map.getZoom()>this.minZoom.rendered){this.renderedrNodes.features=this.rnodes.features.filter((e=>(0,d.ZP)(this.bbox,e))),this.renderedAnchorrNodes.features=this.anchorrNodes.features.filter((e=>(0,d.ZP)(this.bbox,e)));const e=new Set(this.renderedrNodes.features.map((e=>e.properties.index)));this.renderedrLinks.features=this.rlinks.features.filter((t=>e.has(t.properties.a)|e.has(t.properties.b)))}else this.map.getZoom()>this.minZoom.links?(this.renderedrLinks.features=this.rlinks.features,this.renderedrNodes.features=[],this.renderedAnchorrNodes.features=[]):(this.renderedrLinks.features=[],this.renderedrNodes.features=[],this.renderedAnchorrNodes.features=[])},onCursor(e){if(this.isRoadMode&&(this.popup?.isOpen()&&this.popup.remove(),null===this.hoveredStateId||"rlinks"===this.hoveredStateId.layerId)){if(!this.disablePopup&&this.selectedPopupContent.length>0){const t=e.mapboxEvent.features[0];"rnodes"!==t.layer.id&&(this.popup=new(n().Popup)({closeButton:!1}).setLngLat([e.mapboxEvent.lngLat.lng,e.mapboxEvent.lngLat.lat]).setHTML(t.properties[this.selectedPopupContent]).addTo(e.map))}this.map.getCanvas().style.cursor="pointer",null!==this.hoveredStateId&&this.map.setFeatureState({source:this.hoveredStateId.layerId,id:this.hoveredStateId.id[0]},{hover:!1});const t=[...new Set(e.mapboxEvent.features.map((e=>e.id)))];this.hoveredStateId={layerId:e.layerId,id:t},this.map.setFeatureState({source:this.hoveredStateId.layerId,id:this.hoveredStateId.id[0]},{hover:!0}),this.$emit("onHover",{layerId:this.hoveredStateId.layerId,selectedId:this.hoveredStateId.id})}},offCursor(e){this.isRoadMode&&(this.popup?.isOpen()&&this.popup.remove(),null!==this.hoveredStateId&&(["rnodes","anchorrNodes"].includes(this.hoveredStateId?.layerId)&&"rlinks"===e?.layerId||(this.keepHovering?this.dragNode=!0:(this.map.getCanvas().style.cursor="",this.map.setFeatureState({source:this.hoveredStateId.layerId,id:this.hoveredStateId.id[0]},{hover:!1}),this.hoveredStateId=null,this.$emit("offHover",e)))))},selectClick(e){if(this.isRoadMode&&null!==this.hoveredStateId&&(this.selectedFeature=this.hoveredStateId.id,null!==this.selectedFeature&&"rlinks"===this.hoveredStateId.layerId)){const t=this.anchorMode?"Add Road Anchor Inline":"Add Road Node Inline",o={selectedIndex:this.selectedFeature,action:t,lngLat:e.mapboxEvent.lngLat};this.$emit("clickFeature",o),this.getBounds()}},linkRightClick(e){this.isRoadMode&&"rlinks"===this.hoveredStateId.layerId&&(this.contextMenu.coordinates=[e.mapboxEvent.lngLat.lng,e.mapboxEvent.lngLat.lat],this.contextMenu.showed=!0,this.contextMenu.feature=this.hoveredStateId.id,this.contextMenu.actions=["Edit rLink Info","Delete rLink"])},actionClick(e){const t={selectedIndex:e.feature,action:e.action,lngLat:e.coordinates};this.$emit("clickFeature",t),this.contextMenu.showed=!1,this.contextMenu.type=null,this.getBounds()},contextMenuNode(e){if(this.isRoadMode){const t=this.map.querySourceFeatures(this.hoveredStateId.layerId);if(this.selectedFeature=t.filter((e=>this.hoveredStateId.id.includes(e.id))),this.selectedFeature.length>0)if("rnodes"===this.hoveredStateId?.layerId){const t={selectedFeature:this.selectedFeature[0],action:"Edit rNode Info",lngLat:e.mapboxEvent.lngLat};this.$emit("clickFeature",t)}else if("anchorrNodes"===this.hoveredStateId?.layerId){const e={selectedFeature:this.selectedFeature[0],action:"Delete Road Anchor",lngLat:null};this.$emit("clickFeature",e),this.getBounds()}}},moveNode(e){if(this.isRoadMode&&0===e.mapboxEvent.originalEvent.button&["rnodes","anchorrNodes"].includes(this.hoveredStateId.layerId)){e.mapboxEvent.preventDefault(),this.map.getCanvas().style.cursor="grab",this.keepHovering=!0;const t=this.map.querySourceFeatures(this.hoveredStateId.layerId);this.selectedFeature=t.filter((e=>e.id===this.hoveredStateId.id[0]))[0],this.disablePopup=!0,"rnodes"===this.hoveredStateId.layerId&&this.$store.commit("getConnectedLinks",{selectedNode:this.selectedFeature}),this.map.on("mousemove",this.onMove),this.map.on("mouseup",this.stopMovingNode)}},onMove(e){if(this.map.loaded()&&this.dragNode&&this.selectedFeature){const t={selectedFeature:this.selectedFeature,action:null,lngLat:Object.values(e.lngLat)};"anchorrNodes"===this.hoveredStateId.layerId?(t.action="Move rAnchor",this.$emit("clickFeature",t),this.renderedAnchorrNodes.features=this.anchorrNodes.features.filter((e=>(0,d.ZP)(this.bbox,e)))):(t.action="Move rNode",this.$emit("clickFeature",t))}},stopMovingNode(e){this.isRoadMode&&(this.map.getCanvas().style.cursor="pointer",this.map.off("mousemove",this.onMove),this.keepHovering=!1,this.dragNode=!1,this.disablePopup=!1,this.map.getCanvas().style.cursor="",this.map.setFeatureState({source:this.hoveredStateId.layerId,id:this.hoveredStateId.id[0]},{hover:!1}),this.hoveredStateId=null,this.map.off("mouseup",this.stopMovingNode))}}},c=(0,o(1900).Z)(h,s,[],!1,null,"1253c1b1",null).exports}}]);
//# sourceMappingURL=100.build.js.map